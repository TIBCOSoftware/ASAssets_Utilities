<?xml version="1.1" encoding="UTF-8"?>
<metadata name="Test_createUnionView" path="/shared/ASAssets/Utilities_regression_tests/repository/Test_createUnionView" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="numTests" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numErrors" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numSkipped" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="MessageValue" type="STRING" maxLength="64000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createUnionView" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="UnionViewPath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="View1Path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="View2Path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="NameTypeConflictPreference" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="AllIndicator" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="responseXML" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultXML" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor_SQL_TABLE" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="resourceName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resourcePath">
            <datatype type="STRING" maxLength="1024"/>
          </element>
          <element name="resourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="columnName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="columnType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeBaseType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="nativeType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities_regression_tests" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities_regression_tests/Constants" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">PROCEDURE Test_createUnionView(
    OUT numTests INTEGER,
    OUT numErrors INTEGER,
    OUT numSkipped INTEGER
)
proc:
BEGIN
    PATH /shared/ASAssets/Utilities_regression_tests;
    PATH /lib/resource;

    DECLARE test_name VARCHAR DEFAULT &apos;repository/Test_createUnionView&apos;;
    DECLARE resourceExists BOOLEAN;
    DECLARE unionPath, res1Path, res2Path ResourceDefs.ResourcePath;
    DECLARE resourceType ResourceDefs.ResourceType;
    DECLARE nameTypeConfPref INTEGER;
    DECLARE allInd BIT;
    DECLARE success BIT;
    DECLARE responseXML, faultXML XML;
    DECLARE args System.Text;
    DECLARE expectedSQL, testSQL System.Text;
    DECLARE result System.Text;

    SET numTests = 0;
    SET numErrors = 0;
    SET numSkipped = 0;

    -- start test
    --
    test_block_1: 
    BEGIN INDEPENDENT TRANSACTION
        -- test folder
        --
        SET unionPath = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_union_view&apos;;
        SET res1Path = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;;
        SET res2Path = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view2&apos;;
        SET nameTypeConfPref = 1;
        SET allInd = 0;
        SET expectedSQL =
&apos;SELECT 
    CAST(ProductID AS INTEGER) ProductID,
    CAST(ProductName AS VARCHAR(50)) ProductName,
    CAST(ProductDescription AS VARCHAR(255)) ProductDescription,
    CAST(ReorderLevel AS INTEGER) ReorderLevel,
    CAST(CategoryID AS INTEGER) CategoryID,
    CAST(UnitPrice AS DECIMAL(12,2)) UnitPrice,
    CAST(LeadTime AS VARCHAR(30)) LeadTime,
    CAST(SerialNumber AS VARCHAR(50)) SerialNumber
FROM
    /shared/Utilities_regression_tests/temp/test_folder/test_view

UNION 

SELECT
    CAST(ProductID AS INTEGER) ProductID,
    CAST(ProductName AS VARCHAR(50)) ProductName,
    CAST(ProductDescription AS VARCHAR(255)) ProductDescription,
    CAST(NULL AS INTEGER) ReorderLevel,
    CAST(NULL AS INTEGER) CategoryID,
    CAST(NULL AS DECIMAL(12,2)) UnitPrice,
    CAST(NULL AS VARCHAR(30)) LeadTime,
    CAST(NULL AS VARCHAR(50)) SerialNumber
FROM
    /shared/Utilities_regression_tests/temp/test_folder/test_view2&apos;;

        SET args = &apos;&apos;&apos;&apos; || unionPath || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || res1Path || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || res2Path || &apos;&apos;&apos;, &apos; ||
                   nameTypeConfPref || &apos;, &apos; ||
                   allInd;
    
        SET numTests = numTests + 1;

        CALL ResourceExists(
             res1Path,
             ResourceDefs.RESOURCE_TYPE_TABLE,
             NULL,
             resourceExists
        );

        IF (NOT resourceExists) THEN
            SET result = &apos;SKIPPING, res1 resource doesn&apos;&apos;t exist&apos;;
            SET numSkipped = numSkipped + 1;
            LEAVE test_block_1;
        END IF;

        CALL ResourceExists(
             res2Path,
             ResourceDefs.RESOURCE_TYPE_TABLE,
             NULL,
             resourceExists
        );

        IF (NOT resourceExists) THEN
            SET result = &apos;SKIPPING, res2 resource doesn&apos;&apos;t exist&apos;;
            SET numSkipped = numSkipped + 1;
            LEAVE test_block_1;
        END IF;

        BEGIN INDEPENDENT TRANSACTION
            CALL /shared/ASAssets/Utilities/repository/createUnionView(
                unionPath,
                res1Path,
                res2Path,
                nameTypeConfPref,
                allInd,
                success,
                responseXML,
                faultXML
            ); 
        END;

        BEGIN INDEPENDENT TRANSACTION
            SELECT
                sqlText
            INTO
                expectedSQL
            FROM
                /shared/ASAssets/Utilities/repository/getBasicResourceCursor_SQL_TABLE(
                    unionPath,
                    ResourceDefs.RESOURCE_TYPE_TABLE
                )
            WHERE
                columnName IS NULL;
        END;

        IF (expectedSQL = testSQL) THEN
            SET result = &apos;OK&apos;;
        ELSE
            SET result = &apos;FAILED: expected SQL = &quot;&apos; || expectedSQL || &apos;&quot;, actual SQL = &apos; || coalesce(&apos;&quot;&apos; || testSQL || &apos;&quot;&apos;, &apos;[NULL]&apos;);
        END IF;
    EXCEPTION
        ELSE
            SET result = &apos;EXCEPTION: &apos; || CURRENT_EXCEPTION.TRACE;
    END;

    CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: &apos; || result);

    IF (SUBSTRING(result, 1, 1)  IN (&apos;F&apos;, &apos;E&apos;)) THEN
        SET numErrors = numErrors + 1;
    END IF;
    --
    -- end test

END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1424295440830</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">34/20</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">26/14</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">43/13</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/19</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">20/21</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">14/86</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceExists</item>
      </value>
    </item>
    <item>
      <key type="STRING">14/73</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceExists</item>
      </value>
    </item>
    <item>
      <key type="STRING">14/75</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">21/120</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/136</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">14/88</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
  </attribute>
</metadata>