<?xml version="1.1" encoding="UTF-8"?>
<metadata name="Test_createResource" path="/shared/ASAssets/Utilities_regression_tests/repository/Test_createResource" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="numTests" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numErrors" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numSkipped" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="MessageValue" type="STRING" maxLength="64000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceSubType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities_regression_tests" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities_regression_tests/Constants" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">-- resources created:
--
-- CONTAINER          Constants.TMP_FOLDER/test_folder
-- TABLE              Constants.TMP_FOLDER/test_folder/test_view
-- SQL_DEFINITION_SET Constants.TMP_FOLDER/test_folder/test_sql_def_set
-- PROCEDURE          Constants.TMP_FOLDER/test_proc
-- TRIGGER            Constants.TMP_FOLDER/test_trigger
--
PROCEDURE Test_createResource(
    OUT numTests INTEGER,
    OUT numErrors INTEGER,
    OUT numSkipped INTEGER
)
BEGIN
    PATH /shared/ASAssets/Utilities_regression_tests;
    PATH /lib/resource;

    DECLARE test_name VARCHAR DEFAULT &apos;repository/Test_createResource&apos;;
    DECLARE parentFolder ResourceDefs.ResourcePath;
    DECLARE resourceName ResourceDefs.ResourceName;
    DECLARE resourceType ResourceDefs.ResourceType;
    DECLARE resourceSubtype ResourceDefs.ResourceType;
    DECLARE args LONGVARCHAR;
    DECLARE success BIT;
    DECLARE responseXML XML;
    DECLARE faultXML XML;
    DECLARE resourceExists BOOLEAN;

    SET numTests = 0;
    SET numErrors = 0;
    SET numSkipped = 0;

    -- start test
    --
    test_block_1: 
    BEGIN INDEPENDENT TRANSACTION
        SET parentFolder = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER;
        SET resourceName = &apos;test_folder&apos;;
        SET resourceType = ResourceDefs.RESOURCE_TYPE_CONTAINER;
        SET resourceSubtype = ResourceDefs.RESOURCE_SUBTYPE_FOLDER;

        SET args = &apos;&apos;&apos;&apos; || parentFolder || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceName || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceType || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceSubtype || &apos;&apos;&apos;&apos;;

        SET numTests = numTests + 1;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: SKIPPING, resource exists&apos;);
            SET numSkipped = numSkipped + 1;
            LEAVE test_block_1;
        END IF;

        CALL /shared/ASAssets/Utilities/repository/createResource(
            parentFolder,
            resourceName,
            resourceType,
            resourceSubtype,
            success,
            responseXML,
            faultXML
        );

        IF (success &lt;&gt; 1) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
            LEAVE test_block_1;
        END IF;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: OK&apos;);
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
        END IF;

    EXCEPTION
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: EXCEPTION: &apos; || CURRENT_EXCEPTION.MESSAGE);
            SET numErrors = numErrors + 1;
    END; -- test_block_1
    --
    -- end test

    -- start test
    --
    test_block_2: 
    BEGIN INDEPENDENT TRANSACTION
        SET parentFolder = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder&apos;;
        SET resourceName = &apos;test_view&apos;;
        SET resourceType = ResourceDefs.RESOURCE_TYPE_TABLE;
        SET resourceSubtype = ResourceDefs.RESOURCE_SUBTYPE_SQL_TABLE;

        SET args = &apos;&apos;&apos;&apos; || parentFolder || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceName || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceType || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceSubtype || &apos;&apos;&apos;&apos;;

        SET numTests = numTests + 1;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: SKIPPING, resource exists&apos;);
            SET numSkipped = numSkipped + 1;
            LEAVE test_block_2;
        END IF;

        CALL /shared/ASAssets/Utilities/repository/createResource(
            parentFolder,
            resourceName,
            resourceType,
            resourceSubtype,
            success,
            responseXML,
            faultXML
        );

        IF (success &lt;&gt; 1) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
            LEAVE test_block_2;
        END IF;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: OK&apos;);
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
        END IF;

    EXCEPTION
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: EXCEPTION: &apos; || CURRENT_EXCEPTION.MESSAGE);
            SET numErrors = numErrors + 1;
    END; -- test_block_2
    --
    -- end test

    -- start test
    --
    test_block_3: 
    BEGIN INDEPENDENT TRANSACTION
        SET parentFolder = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder&apos;;
        SET resourceName = &apos;test_sql_def_set&apos;;
        SET resourceType = ResourceDefs.RESOURCE_TYPE_DEFINITION_SET;
        SET resourceSubtype = &apos;SQL_DEFINITION_SET&apos;; -- no constant in ResourceDefs!!

        SET args = &apos;&apos;&apos;&apos; || parentFolder || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceName || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceType || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceSubtype || &apos;&apos;&apos;&apos;;

        SET numTests = numTests + 1;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: SKIPPING, resource exists&apos;);
            SET numSkipped = numSkipped + 1;
            LEAVE test_block_3;
        END IF;

        CALL /shared/ASAssets/Utilities/repository/createResource(
            parentFolder,
            resourceName,
            resourceType,
            resourceSubtype,
            success,
            responseXML,
            faultXML
        );

        IF (success &lt;&gt; 1) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
            LEAVE test_block_3;
        END IF;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: OK&apos;);
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
        END IF;

    EXCEPTION
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: EXCEPTION: &apos; || CURRENT_EXCEPTION.MESSAGE);
            SET numErrors = numErrors + 1;
    END; -- test_block_3
    --
    -- end test

    -- start test
    --
    test_block_4: 
    BEGIN INDEPENDENT TRANSACTION
        SET parentFolder = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder&apos;;
        SET resourceName = &apos;test_proc&apos;;
        SET resourceType = ResourceDefs.RESOURCE_TYPE_PROCEDURE;
        SET resourceSubtype = ResourceDefs.RESOURCE_SUBTYPE_SQL_SCRIPT_PROCEDURE;

        SET args = &apos;&apos;&apos;&apos; || parentFolder || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceName || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceType || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceSubtype || &apos;&apos;&apos;&apos;;

        SET numTests = numTests + 1;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: SKIPPING, resource exists&apos;);
            SET numSkipped = numSkipped + 1;
            LEAVE test_block_4;
        END IF;

        CALL /shared/ASAssets/Utilities/repository/createResource(
            parentFolder,
            resourceName,
            resourceType,
            resourceSubtype,
            success,
            responseXML,
            faultXML
        );

        IF (success &lt;&gt; 1) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
            LEAVE test_block_4;
        END IF;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: OK&apos;);
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
        END IF;

    EXCEPTION
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: EXCEPTION: &apos; || CURRENT_EXCEPTION.MESSAGE);
            SET numErrors = numErrors + 1;
    END; -- test_block_4
    --
    -- end test

    -- start test
    --
    test_block_5: 
    BEGIN INDEPENDENT TRANSACTION
        SET parentFolder = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder&apos;;
        SET resourceName = &apos;test_trigger&apos;;
        SET resourceType = &apos;TRIGGER&apos;; -- No ResourceDefs.RESOURCE_TYPE_TRIGGER!!
        SET resourceSubtype = ResourceDefs.RESOURCE_SUBTYPE_NONE;

        SET args = &apos;&apos;&apos;&apos; || parentFolder || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceName || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceType || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || resourceSubtype || &apos;&apos;&apos;&apos;;

        SET numTests = numTests + 1;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: SKIPPING, resource exists&apos;);
            SET numSkipped = numSkipped + 1;
            LEAVE test_block_5;
        END IF;

        CALL /shared/ASAssets/Utilities/repository/createResource(
            parentFolder,
            resourceName,
            resourceType,
            resourceSubtype,
            success,
            responseXML,
            faultXML
        );

        IF (success &lt;&gt; 1) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
            LEAVE test_block_5;
        END IF;

        CALL /lib/resource/ResourceExists(
             parentFolder || &apos;/&apos; || resourceName,
             resourceType,
             NULL,
             resourceExists
        );

        IF (resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: OK&apos;);
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
        END IF;

    EXCEPTION
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: EXCEPTION: &apos; || CURRENT_EXCEPTION.MESSAGE);
            SET numErrors = numErrors + 1;
    END; -- test_block_5
    --
    -- end test

END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1424295440830</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">18/325</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/155</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">29/22</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/153</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">26/19</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">28/240</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/274</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/57</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/258</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/207</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/295</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/191</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/356</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">31/241</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">28/173</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/354</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/73</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">28/39</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">28/106</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">31/40</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/124</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">31/107</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/94</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/140</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/161</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/228</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/88</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">26/20</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/222</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/362</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/220</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">26/21</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/289</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/287</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/341</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">31/308</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/86</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>