<?xml version="1.1" encoding="UTF-8"?>
<metadata name="Test_updateResourcesSqlTable" path="/shared/ASAssets/Utilities_regression_tests/repository/Test_updateResourcesSqlTable" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="numTests" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numErrors" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="numSkipped" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="MessageValue" type="STRING" maxLength="64000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateResourcesSqlTable" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/PSAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="inScripttext" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="annotation" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="columnList" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="childResourceType" referenceDefinitionSet="/shared/PSAssets/Utilities/repository/definitions/RepositoryDefinitions" referenceType="childResourceType" type="TREE" refId="2">
              <element name="resourceName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="resourcePath">
                <datatype name="VARCHAR" referenceDefinitionSet="/shared/PSAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
              </element>
              <element name="resourceType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="columnName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="columnType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="annotation">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="sqlIndexList" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="sqlIndexType" referenceDefinitionSet="/shared/PSAssets/Utilities/repository/definitions/RepositoryDefinitions" referenceType="sqlIndexType" type="TREE" refId="3">
              <element name="sqlIndexName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="sqlIndexType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="sqlIndexUnique">
                <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="sqlIndexColName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="sqlIndexColOrder">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="4"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="4"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities_regression_tests" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities_regression_tests/Constants" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities_regression_tests/TestUtils/QueryTest" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="query" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="expectedResultCSV" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">PROCEDURE Test_updateResourcesSqlTable(
    OUT numTests INTEGER,
    OUT numErrors INTEGER,
    OUT numSkipped INTEGER
)
BEGIN
    PATH /shared/ASAssets/Utilities_regression_tests;
    PATH /lib/resource;
    PATH /shared/ASAssets/Utilities/repository/definitions;

    DECLARE test_name VARCHAR DEFAULT &apos;repository/Test_updateResourcesSqlTable&apos;;
    DECLARE resourcePath ResourceDefs.ResourcePath;
    DECLARE sqlText LONGVARCHAR;
    DECLARE columnList VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.childResourceType);
    DECLARE sqlIndexList VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.sqlIndexType);
    DECLARE args LONGVARCHAR;
    DECLARE success BIT;
    DECLARE responseXML XML;
    DECLARE faultXML XML;
    DECLARE resourceExists BOOLEAN;
    DECLARE expectedResultCSV LONGVARCHAR;
    DECLARE result LONGVARCHAR;

    SET numTests = 0;
    SET numErrors = 0;
    SET numSkipped = 0;

    -- start test
    --
    test_block_1: 
    BEGIN INDEPENDENT TRANSACTION
        SET resourcePath = /shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;; -- created in Test_createResource
        SET sqlText = &apos;SELECT * FROM /shared/examples/ds_inventory/products products&apos;;
        SET columnList = VECTOR [
            (&apos;products&apos;,/shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;,&apos;TABLE&apos;,&apos;ProductID&apos;,&apos;INTEGER&apos;, &apos;&apos;),
            (&apos;products&apos;,/shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;,&apos;TABLE&apos;,&apos;ProductName&apos;,&apos;VARCHAR(50)&apos;, &apos;&apos;),
            (&apos;products&apos;,/shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;,&apos;TABLE&apos;,&apos;ProductDescription&apos;,&apos;VARCHAR(255))&apos;, &apos;&apos;),
            (&apos;products&apos;,/shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;,&apos;TABLE&apos;,&apos;CategoryID&apos;,&apos;INTEGER&apos;, &apos;&apos;),
            (&apos;products&apos;,/shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;,&apos;TABLE&apos;,&apos;SerialNumber&apos;,&apos;VARCHAR(50)&apos;, &apos;&apos;),
            (&apos;products&apos;,/shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;,&apos;TABLE&apos;,&apos;UnitPrice&apos;,&apos;DECIMAL(12,2)&apos;, &apos;&apos;),
            (&apos;products&apos;,/shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;,&apos;TABLE&apos;,&apos;ReorderLevel&apos;,&apos;INTEGER&apos;, &apos;&apos;),
            (&apos;products&apos;,/shared/ASAssets/Utilities_regression_tests/Constants.TMP_FOLDER || &apos;/test_folder/test_view&apos;,&apos;TABLE&apos;,&apos;LeadTime&apos;,&apos;VARCHAR(30)&apos;, &apos;&apos;)
        ];
        SET sqlIndexList = VECTOR [
            (&apos;productsPK&apos;,&apos;PRIMARY_KEY&apos;,1,&apos;ProductID&apos;,&apos;ASCENDING&apos;)
        ];
        SET expectedResultCSV = &apos;productsPK,PRIMARY_KEY,1,ProductID,ASCENDING&apos;;

        SET args = &apos;&apos;&apos;&apos; || resourcePath || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;&apos; || sqlText || &apos;&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;[column list]&apos;&apos;, &apos; ||
                   &apos;&apos;&apos;[index list]&apos;&apos;&apos;;

        SET numTests = numTests + 1;

        CALL /lib/resource/ResourceExists(
             resourcePath,
             ResourceDefs.RESOURCE_TYPE_TABLE,
             NULL,
             resourceExists
        );

        IF (NOT resourceExists) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: SKIPPING, resource does not exist&apos;);
            SET numSkipped = numSkipped + 1;
            LEAVE test_block_1;
        END IF;

        CALL /shared/ASAssets/Utilities/repository/updateResourcesSqlTable(
            resourcePath,
            sqlText,
            &apos;annotation&apos;,
            columnList,
            sqlIndexList,
            success,
            responseXML,
            faultXML
        );

        IF (success &lt;&gt; 1) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
            LEAVE test_block_1;
        END IF;

        CALL /shared/ASAssets/Utilities_regression_tests/TestUtils/QueryTest(
            &apos;SELECT * FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor_SQL_TABLE_SQLINDEXES(&apos;&apos;&apos; || resourcePath || &apos;&apos;&apos;, &apos;&apos;&apos; || ResourceDefs.RESOURCE_TYPE_TABLE || &apos;&apos;&apos;)&apos;,
            expectedResultCSV,
            result
        );

        IF (result = &apos;OK&apos;) THEN
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: OK&apos;);
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: FAILED&apos;);
            SET numErrors = numErrors + 1;
        END IF;

    EXCEPTION
        ELSE
            CALL PRINT (test_name || &apos;: args = &apos; || args || &apos;: EXCEPTION: &apos; || CURRENT_EXCEPTION.MESSAGE);
            SET numErrors = numErrors + 1;
    END; -- test_block_1
    --
    -- end test

END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1397499351951</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">26/12</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">145/87</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/81</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/64</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">14/58</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/93</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/101</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">18/95</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>