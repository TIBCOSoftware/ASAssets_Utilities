<?xml version="1.1" encoding="UTF-8"?>
<metadata name="getDomainUsers" path="/shared/ASAssets/Utilities/repository/user/getDomainUsers" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="domainName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="results" direction="OUT" nullable="true">
      <datatype name="results" type="TABLE" refId="1">
        <element name="name">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="domainName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="id">
          <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
        </element>
        <element name="explicitRights">
          <datatype name="VARCHAR" type="STRING" maxLength="1024"/>
        </element>
        <element name="effectiveRights">
          <datatype name="VARCHAR" type="STRING" maxLength="1024"/>
        </element>
        <element name="inheritedRights">
          <datatype name="VARCHAR" type="STRING" maxLength="1024"/>
        </element>
        <element name="annotation">
          <datatype name="VARCHAR" type="STRING" maxLength="1024"/>
        </element>
        <element name="isLocked">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="groupName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="groupDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ EXECUTE"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/getDomainUsersXSLT" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="getDomainUsers" direction="IN">
        <datatype name="getDomainUsers" extendedName="{http://www.compositesw.com/services/system/admin/user}getDomainUsers" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}getDomainUsers" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}getDomainUsers">
          <schemaDatatype>
            <datatype name="getDomainUsers" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="getDomainUsersRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="scope" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="scopeValue" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="3">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="domainName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="explicitRights">
            <datatype type="STRING" maxLength="1024"/>
          </element>
          <element name="effectiveRights">
            <datatype type="STRING" maxLength="1024"/>
          </element>
          <element name="inheritedRights">
            <datatype type="STRING" maxLength="1024"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="1024"/>
          </element>
          <element name="isLocked">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="groupName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="groupDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/getDomainsXSLT" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="getDomains" direction="IN">
        <datatype name="getDomains" extendedName="{http://www.compositesw.com/services/system/admin/user}getDomains" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}getDomains" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}getDomains">
          <schemaDatatype>
            <datatype name="getDomains" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="getDomainsRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="3">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="domainType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="guid">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="1024"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
  getDomainUsers:

	This procedure returns all of the users contained in a domain.

	Input:
		domainName - The name of a domain defined in CIS.  If null, then return all users for all domains.
			Values: Any text value

	Output:
		result - A cursor containing the domain&apos;s groups

	Exceptions:  none

	Modified Date:	Modified By:		CIS Version:	Reason:
	04/22/2017		Mike Tinius			7.0.5			Created new

    Â© 2017 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
*/
PROCEDURE getDomainUsers(
	IN	domainName	VARCHAR,	-- The name of a domain defined in CIS.  If null, then return all users for all domains.
	OUT results		PIPE (
		name			VARCHAR,
		domainName		VARCHAR,
		id				INTEGER,
		explicitRights	VARCHAR(1024),
		effectiveRights	VARCHAR(1024),
		inheritedRights	VARCHAR(1024),
		annotation		VARCHAR(1024),
		isLocked		VARCHAR,
		groupName		VARCHAR,
		groupDomain		VARCHAR
	)
)
BEGIN
	DECLARE getDomainsInput		XML;
	DECLARE getDomainUsersInput	XML;
	DECLARE TYPE domainUserType	ROW (
		name			VARCHAR,
		domainName		VARCHAR,
		id				INTEGER,
		explicitRights	VARCHAR(1024),
		effectiveRights	VARCHAR(1024),
		inheritedRights	VARCHAR(1024),
		annotation		VARCHAR(1024),
		isLocked		VARCHAR,
		groupName		VARCHAR,
		groupDomain		VARCHAR
	);
	DECLARE rec			domainUserType;

	set getDomainsInput = 
&apos;&lt;user:getDomains xmlns:user=&quot;http://www.compositesw.com/services/system/admin/user&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;user:detail&gt;SIMPLE&lt;/user:detail&gt;
&lt;/user:getDomains&gt;
&apos;;

	-- Get the domains
	for r as select * from /shared/ASAssets/Utilities/repository/lowerLevelProcedures/getDomainsXSLT(getDomainsInput) do
		if ( (domainName is null and r.name is not null) or (domainName is not null and r.name = domainName) ) then
			set rec = null;
			set getDomainUsersInput = 
&apos;&lt;user:getDomainUsers xmlns:user=&quot;http://www.compositesw.com/services/system/admin/user&quot;&gt;
  &lt;user:domainName&gt;&apos;||r.name||&apos;&lt;/user:domainName&gt;
  &lt;user:scope&gt;LOCAL_ONLY&lt;/user:scope&gt;
&lt;/user:getDomainUsers&gt;
&apos;;
			-- Get the domain users
			for u as 
				select * from /shared/ASAssets/Utilities/repository/lowerLevelProcedures/getDomainUsersXSLT(getDomainUsersInput) 
					where groupName is not null
			do
				set rec = u;
				if (rec.groupDomain is null) then
					set rec.groupDomain = rec.domainName;
				end if;
				insert into results values (rec);
			end for;
		end if;
	end for;
END</attribute>
  <attribute name="creationDate" type="LONG">1492193922279</attribute>
  <attribute name="creatorUserDomain" type="STRING">ldap_im</attribute>
  <attribute name="creatorUserId" type="INTEGER">4306</attribute>
  <attribute name="creatorUserName" type="STRING">zkxl6un</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="lastModifiedDate" type="LONG">1493081771441</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">4306</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1492193922279</attribute>
</metadata>