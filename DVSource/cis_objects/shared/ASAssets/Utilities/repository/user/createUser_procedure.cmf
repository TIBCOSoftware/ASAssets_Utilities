<?xml version="1.1" encoding="UTF-8"?>
<metadata name="createUser" path="/shared/ASAssets/Utilities/repository/user/createUser" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>createUser:
    * userAssignments is an array of users.  If the user does not exist, it will be created
    * with the specified password.  If the force_password flag is &apos;1&apos; the password will
    * be reset even if the user exists.  In all cases, the group membership of the user will
    * be updated to reflect the specified membership.
 
	Input:
    		debug - Y=debug on, N=debug off 
			username - username to create in composite
			password - password of the user
			forcePassword - 1=force a reset of the password even if the user exists, 0=if user exists, then don&apos;t force a change to the password
			domainName - domain which the user will belong to.  default is &apos;composite&apos;
			groupNameAndDomainList - a space separate list of group|domain pairs where the pairs are separated by a pipe (|)
					   groupName|groupDomain groupName|groupDomain groupName|groupDomain			     
				e.g.  comp_admin|composite    comp_dev|composite   comp_user|composite
	Output:

	Exceptions:  Exception may be thrown.

	Author:      Mike Tinius
	Date:        1/18/2011
	CSW Version: 5.2.0

    Â© 2011, 2014 Cisco and/or its affiliates. All rights reserved.</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="username" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="password" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="forcePassword" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="domainName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="groupNameAndDomainList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/user/operations/createUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="createUser" direction="IN">
        <datatype name="createUser" extendedName="{http://www.compositesw.com/services/system/admin/user}createUser" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}createUser" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}createUser">
          <schemaDatatype>
            <datatype name="createUser" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="createUserRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="userName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="password" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="explicitRights" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="userRightsList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="createUserResponse" direction="OUT">
        <datatype name="createUserResponse" extendedName="{http://www.compositesw.com/services/system/admin/user}createUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}createUserResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}createUserResponse">
          <schemaDatatype>
            <datatype name="createUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="createUserResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="3"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="4">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/user/operations/getUsers" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="getUsers" direction="IN">
        <datatype name="getUsers" extendedName="{http://www.compositesw.com/services/system/admin/user}getUsers" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}getUsers" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}getUsers">
          <schemaDatatype>
            <datatype name="getUsers" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="getUsersRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="names" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="nameList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="getUsersResponse" direction="OUT">
        <datatype name="getUsersResponse" extendedName="{http://www.compositesw.com/services/system/admin/user}getUsersResponse" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}getUsersResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}getUsersResponse">
          <schemaDatatype>
            <datatype name="getUsersResponse" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="getUsersResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="4">
              <element name="users" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="userList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                  <element name="user" namespace="http://www.compositesw.com/services/system/admin/user" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="user" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="id" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2207" maxValue="2147483647"/>
                      </element>
                      <element name="explicitRights" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="userRightsList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="effectiveRights" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="userRightsList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="inheritedRights" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="userRightsList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="isLocked" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="groupNames" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                        <datatype name="domainMemberReferenceList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                          <element name="entry" namespace="http://www.compositesw.com/services/system/admin/user" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="domainMemberReference" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                              <element name="name" namespace="http://www.compositesw.com/services/system/admin/user">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="domain" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="9">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="10">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/user/operations/updateUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="updateUser" direction="IN">
        <datatype name="updateUser" extendedName="{http://www.compositesw.com/services/system/admin/user}updateUser" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}updateUser" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}updateUser">
          <schemaDatatype>
            <datatype name="updateUser" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="updateUserRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="userName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="oldPassword" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="password" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="groupNames" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="domainMemberReferenceList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="entry" namespace="http://www.compositesw.com/services/system/admin/user" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="domainMemberReference" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="domain" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="explicitRights" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="userRightsList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="updateUserResponse" direction="OUT">
        <datatype name="updateUserResponse" extendedName="{http://www.compositesw.com/services/system/admin/user}updateUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}updateUserResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}updateUserResponse">
          <schemaDatatype>
            <datatype name="updateUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="updateUserResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="5"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="6">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/entityExtractToPipe" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inDelimiter" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="inNumWords" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="random" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="removeSymbols" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="keywordsPipe" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="keyword">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* createUser:
    * userAssignments is an array of users.  If the user does not exist, it will be created
    * with the specified password.  If the force_password flag is &apos;1&apos; the password will
    * be reset even if the user exists.  In all cases, the group membership of the user will
    * be updated to reflect the specified membership.
 
	Input:
    		debug - Y=debug on, N=debug off 
			username - username to create in composite
			password - password of the user
			forcePassword - 1=force a reset of the password even if the user exists, 0=if user exists, then don&apos;t force a change to the password
			domainName - domain which the user will belong to.  default is &apos;composite&apos;
			groupNameAndDomainList - a space separate list of group|domain pairs where the pairs are separated by a pipe (|)
					   groupName|groupDomain groupName|groupDomain groupName|groupDomain			     
				e.g.  comp_admin|composite    comp_dev|composite   comp_user|composite
	Output:

	Exceptions:  Exception may be thrown.

	Author:      Mike Tinius
	Date:        1/18/2011
	CSW Version: 5.2.0

    Â© 2011, 2014 Cisco and/or its affiliates. All rights reserved.
*/
PROCEDURE createUser(
	IN debug 					CHAR(1),-- e.g. Y or N
	IN username					VARCHAR(255), 
	IN password 				VARCHAR(255), 
	IN forcePassword			CHAR(1),
	IN domainName 				VARCHAR(255),
	IN groupNameAndDomainList 	LONGVARCHAR
)
BEGIN
	DECLARE moduleName 			VARCHAR DEFAULT &apos;createUser&apos;;
	DECLARE request 			VARCHAR(4096);
	DECLARE response 			XML;
	DECLARE fault 				XML;
    DECLARE user_exists 		BOOLEAN;
	DECLARE padChar				CHAR(1) DEFAULT &apos; &apos;;
    DECLARE i,j					INTEGER;
	DECLARE groupName			VARCHAR(255);
	DECLARE groupDomain			VARCHAR(255);
	DECLARE tmp 				VARCHAR(2000);
    DECLARE ex					EXCEPTION;
    DECLARE createUserException	EXCEPTION;
   /*
    * userAssignments is an array of users.  If the user does not exist, it will be created
    * with the specified password.  If the force_password flag is &apos;1&apos; the password will
    * be reset even if the user exists.  In all cases, the group membership of the user will
    * be updated to reflect the specified membership.
    */
	DECLARE TYPE groupMembershipRow	 ROW(groupname VARCHAR, groupdomain VARCHAR);
	DECLARE groupMembershipVect VECTOR(groupMembershipRow) DEFAULT VECTOR[(null)];
    DECLARE userAssignments VECTOR(
        ROW(username VARCHAR, password VARCHAR, domain_name VARCHAR, force_password CHAR(1), group_membership VECTOR(groupMembershipRow) ) 
		)
        DEFAULT VECTOR[(username, password, domainName, forcePassword, VECTOR[(null)])];
/*
        (&apos;user1&apos;, &apos;password1&apos;, &apos;composite&apos;, &apos;0&apos;, VECTOR[ (&apos;comp_admin&apos;, &apos;composite&apos;),(&apos;comp_dev&apos;, &apos;composite&apos;),&apos;comp_user&apos;, &apos;composite&apos;) ]),
        (&apos;user2&apos;, &apos;password2&apos;, &apos;composite&apos;, &apos;0&apos;, VECTOR[(&apos;comp_dev&apos;, &apos;composite&apos;),  (&apos;comp_user&apos;, &apos;composite&apos;)  ]),
        (&apos;user3&apos;, &apos;password3&apos;, &apos;composite&apos;, &apos;1&apos;, VECTOR[(&apos;comp_user&apos;, &apos;composite&apos;)  ])
    ];
*/

	-- Extract the group Name and Domain pairs and populate the userAssignments vector
	-- Iterate over the groupNameAndDomainList and separate out the groupName and groupDomain
	set j = 1;
	for pair as
		select * from /shared/ASAssets/Utilities/string/entityExtractToPipe(groupNameAndDomainList, &apos; &apos;,0,0,0)
	do
		set i = 1;
		for item as
			select * from /shared/ASAssets/Utilities/string/entityExtractToPipe(pair.keyword, &apos;|&apos;,0,0,0)
		do
			case i
				when 1 then set groupName = item.keyword;
				when 2 then set groupDomain = item.keyword;
				else
			end case;
			set i = i + 1;
		end for;
		 call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug, &apos;Extract~groupName=&apos;||groupName ||&apos;  groupDomain=&apos;||groupDomain);
		set groupMembershipVect[j].groupname = groupName;
		set groupMembershipVect[j].groupdomain = groupDomain;
		set groupMembershipVect = EXTEND(groupMembershipVect, 1);
		set j = j + 1;
	end for;
	set groupMembershipVect = TRUNCATE(groupMembershipVect, 1);
	set userAssignments[1].group_membership = groupMembershipVect;

    SET i = 1;
    WHILE i &lt;= cardinality(userAssignments)
    DO
       /*
        * Step four: make sure the appropriate users exist or create if needed
        */
        BEGIN
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;Checking if user (&apos; || userAssignments[i].username || &apos;) exists&apos;);
			set request =
	           &apos;&lt;ns1:getUsers xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/user&quot;
     	            xmlns:ns2=&quot;http://www.compositesw.com/services/system/util/common&quot;
        	         xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;
            	     xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
	               &lt;ns1:domainName&gt;&apos; || userAssignments[i].domain_name || &apos;&lt;/ns1:domainName&gt;
    	           &lt;ns1:names&gt;
        	         &lt;ns2:name&gt;&apos; || userAssignments[i].username || &apos;&lt;/ns2:name&gt;
            	   &lt;/ns1:names&gt;
	            &lt;/ns1:getUsers&gt;&apos;;
			CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, request);
			CALL /services/webservices/system/admin/&quot;user&quot;/operations/getUsers(request, response, fault);
			SET user_exists = TRUE;
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug, &apos;User (&apos; || userAssignments[i].username || &apos;) exists&apos;);
        EXCEPTION
			WHEN System.SOAPFaultException THEN
				IF CURRENT_EXCEPTION.TRACE LIKE &apos;%userName%does NOT exist%&apos; THEN
					call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug, &apos;USER does NOT exist&apos;);
					SET user_exists = FALSE;
				ELSE
					RAISE;                                   
				END IF;
        END;
        IF NOT user_exists
        THEN
            IF userAssignments[i].domain_name != &apos;composite&apos;
            THEN
                RAISE createUserException VALUE &apos;User (&apos; || userAssignments[i].username || &apos;) in domain (&apos; || userAssignments[i].domain_name || &apos;) does not exist&apos;;
            END IF;
            BEGIN
				call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug, &apos;Creating user (&apos; || userAssignments[i].username||&apos;)&apos;);
				set request =
                  &apos;&lt;ns1:createUser xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/user&quot;
                         xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;
                         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
                       &lt;ns1:domainName&gt;&apos; || userAssignments[i].domain_name || &apos;&lt;/ns1:domainName&gt;
                       &lt;ns1:userName&gt;&apos; || userAssignments[i].username || &apos;&lt;/ns1:userName&gt;
                       &lt;ns1:password&gt;&apos; || userAssignments[i].password || &apos;&lt;/ns1:password&gt;
                    &lt;/ns1:createUser&gt;&apos;;
				CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, request);
				CALL /services/webservices/system/admin/&quot;user&quot;/operations/createUser(request, response, fault);
            EXCEPTION                 
				WHEN System.SOAPFaultException THEN
					RAISE;                                   
            END;
        END IF;        
       /*
        * Step five: make sure the users have the appropriate password and group assignments.
        */
        BEGIN
			set tmp = &apos;&apos;;       
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug, &apos;apply groups TO USER (&apos; || userAssignments[i].username||&apos;)&apos;);
			SET tmp = tmp || &apos;
                    &lt;ns1:groupNames&gt;
                                      &lt;ns1:entry&gt;
                                        &lt;ns1:name&gt;all&lt;/ns1:name&gt;
                                        &lt;ns1:domain&gt;composite&lt;/ns1:domain&gt;
                                      &lt;/ns1:entry&gt;&apos;;
 			set j = 1;
            WHILE j &lt;= cardinality(userAssignments[i].group_membership)
			DO
				SET tmp = tmp || &apos;
                                      &lt;ns1:entry&gt;
                                        &lt;ns1:name&gt;&apos; || emptyStr(userAssignments[i].group_membership[j].groupname) || &apos;&lt;/ns1:name&gt;
                                        &lt;ns1:domain&gt;&apos; || emptyStr(userAssignments[i].group_membership[j].groupdomain) || &apos;&lt;/ns1:domain&gt;
                                      &lt;/ns1:entry&gt;&apos;;
                SET j = j + 1;
			END WHILE;
            SET tmp = tmp || &apos;
                    &lt;/ns1:groupNames&gt;&apos;;
 
            IF userAssignments[i].force_password = &apos;1&apos; AND userAssignments[i].domain_name = &apos;composite&apos; THEN
                SET tmp = &apos;
                   &lt;ns1:password&gt;&apos; || emptyStr(userAssignments[i].password) || &apos;&lt;/ns1:password&gt;&apos; || tmp;
            END IF;
                        
			set request =
               &apos;&lt;ns1:updateUser xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/user&quot;
                     xmlns:ns2=&quot;http://www.compositesw.com/services/system/util/common&quot;
                     xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;
                     xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
                   &lt;ns1:domainName&gt;&apos; || emptyStr(userAssignments[i].domain_name) || &apos;&lt;/ns1:domainName&gt;
                   &lt;ns1:userName&gt;&apos; || emptyStr(userAssignments[i].username) || &apos;&lt;/ns1:userName&gt;&apos; ||
                   tmp || &apos;
                &lt;/ns1:updateUser&gt;&apos;;
				CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, request);
				CALL /services/webservices/system/admin/&quot;user&quot;/operations/updateUser(request, response, fault);
        EXCEPTION
				WHEN System.SOAPFaultException THEN
					RAISE;                                   
        END;
        SET i = i + 1;
    END WHILE;

    EXCEPTION
		ELSE
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug, emptyStr(CURRENT_EXCEPTION.TRACE));
			raise ex value CURRENT_EXCEPTION.TRACE;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1397495870437</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">10/142</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/115</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/188</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
  </attribute>
</metadata>