<?xml version="1.1" encoding="UTF-8"?>
<metadata name="deleteUser" path="/shared/ASAssets/Utilities/repository/user/deleteUser" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>deleteUser:

	This procedure is used to delete a composite user.  It does not delete ldap users.
 
	Input:
    	debug - Y=debug on, N=debug off 
		username - username to create in composite
		domainName - domain which the user will belong to.  default is &apos;composite&apos;
	Output:
		success - 1=success otherwise an exception is thrown

	Exceptions:  Exception may be thrown.

	Modified Date:	Modified By:		CSW Version:	Reason:
	10/20/2014		Mike Tinius			6.2.6			Created new.
	11/07/2014		Mike Tinius			6.2.6			Updated to insure username and groups are lower case when domain=composite.

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="userName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="userDomain" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/debug/Log" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToLog" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="MessageValue" type="STRING" maxLength="64000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="MessageValue" type="STRING" maxLength="64000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/user/operations/destroyUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="destroyUser" direction="IN">
        <datatype name="destroyUser" extendedName="{http://www.compositesw.com/services/system/admin/user}destroyUser" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}destroyUser" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}destroyUser">
          <schemaDatatype>
            <datatype name="destroyUser" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="destroyUserRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="userName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="destroyUserResponse" direction="OUT">
        <datatype name="destroyUserResponse" extendedName="{http://www.compositesw.com/services/system/admin/user}destroyUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}destroyUserResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}destroyUserResponse">
          <schemaDatatype>
            <datatype name="destroyUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="destroyUserResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="3"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="4">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/user/getUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="userName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="userDomain" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="userExists" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="userExplicitRights" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="userEffectiveRights" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="userInheritedRights" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* deleteUser:

	This procedure is used to delete a composite user.  It does not delete ldap users.
 
	Input:
    	debug - Y=debug on, N=debug off 
		username - username to create in composite
		domainName - domain which the user will belong to.  default is &apos;composite&apos;
	Output:
		success - 1=success otherwise an exception is thrown

	Exceptions:  Exception may be thrown.

	Modified Date:	Modified By:		CSW Version:	Reason:
	10/20/2014		Mike Tinius			6.2.6			Created new.
	11/07/2014		Mike Tinius			6.2.6			Updated to insure username and groups are lower case when domain=composite.

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE deleteUser(
	IN debug 					CHAR(1),-- e.g. Y or N
	IN userName					VARCHAR(255), 
	IN userDomain 				VARCHAR(255)
)
BEGIN
	DECLARE moduleName 			VARCHAR DEFAULT &apos;deleteUser&apos;;
	DECLARE userName_			VARCHAR DEFAULT TRIM(userName);
	DECLARE userDomain_ 		VARCHAR(255) DEFAULT TRIM(NVL(userDomain, &apos;composite&apos;));
	DECLARE request 			VARCHAR(4096);
	DECLARE response 			XML;
	DECLARE fault 				XML;
    DECLARE userExists 			BIT;
	DECLARE message				LONGVARCHAR;
    DECLARE ex					EXCEPTION;
	DECLARE userExplicitRights	VARCHAR(255);
	DECLARE userEffectiveRights	VARCHAR(255);
	DECLARE userInheritedRights	VARCHAR(255);

   /*
    * Step one: make sure the appropriate user exists
    */
    BEGIN
		if (userName_ is null or LENGTH(userName_) = 0) then
			raise ex value &apos;The &quot;userName&quot; parameter may not be null or empty.&apos;;
		end if;
		if (userDomain_ is null or LENGTH(userDomain_) = 0) then
			raise ex value &apos;The &quot;userDomain&quot; parameter may not be null or empty.&apos;;
		end if;

		-- when the domain is composite use all lower case for domains and group names
		if (LOWER(userDomain_) = &apos;composite&apos;) then
			set userName_ = LOWER(userName_);
		end if;
		if (LOWER(userDomain_) = &apos;composite&apos;) then
			set userDomain_ = LOWER(userDomain_);
		end if;

		call /shared/ASAssets/Utilities/repository/&quot;user&quot;/getUser(debug, userName_, userDomain_, userExists, userExplicitRights, userEffectiveRights, userInheritedRights);

		IF userExists = 1 AND userDomain_ = &apos;composite&apos; THEN
            BEGIN
				set request =
                   &apos;&lt;ns1:destroyUser xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/user&quot;
                         xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;
                         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
                       &lt;ns1:domainName&gt;&apos; || userDomain_ || &apos;&lt;/ns1:domainName&gt;
                       &lt;ns1:userName&gt;&apos; || userName_ || &apos;&lt;/ns1:userName&gt;
                    &lt;/ns1:destroyUser&gt;&apos;;

				IF (debug IS NOT NULL AND UPPER(debug) = &apos;Y&apos;) THEN
		           	set message = &apos;Delete User.  request: &apos;||request;
					call log  (moduleName || &apos; : &apos; || message);
					call print(moduleName || &apos; : &apos; || message);
				END IF;
   /*
    * Step two: delete the user if it exists
    */
				CALL /services/webservices/system/admin/&quot;user&quot;/operations/destroyUser(request, response, fault);
            EXCEPTION                 
				WHEN System.SOAPFaultException THEN
					RAISE;
            END;
		END IF;

    EXCEPTION
		ELSE
			set message = &apos;EXCEPTION: &apos;||CURRENT_EXCEPTION.TRACE;
			call log  (moduleName || &apos; : &apos; || message);
			call print(moduleName || &apos; : &apos; || message);
			raise ex value CURRENT_EXCEPTION.TRACE;
	END;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">10/94</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/102</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/87</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/103</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">11/86</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Log</item>
      </value>
    </item>
  </attribute>
</metadata>