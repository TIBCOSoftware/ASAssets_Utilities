<?xml version="1.1" encoding="UTF-8"?>
<metadata name="getBasicResourceCursor_XSLT_TEXT" path="/shared/ASAssets/Utilities/repository/getBasicResourceCursor_XSLT_TEXT" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>getBasicResourceCursor_XSLT_TEXT:
	-- CIS Repository Helper Procedure --
	This procedure retrieves the resource metadata for a given resource that is an XSLT procedure.  
	A cursor of metadata is returned. This procedure invokes 2 lower level API procedures:
		getBasicResourceXML - this performs the actual invocation to the CIS repository API and returns XML
		getBasicResourceXSLT_XSLT_TEXT - this procedure takes the XML response from getBasicResourceXML 
			and turns it into a cursor which is more usable by other CIS procedures.

	Input:
		fullResourcePath - Full resource path which includes the path and the resource name  
			Values: e.g. /shared/Utilities/repository/lowerLevelProcedures/resourceExistsXSLT
		resourceType - Type of CIS resource to be created
			Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. PROCEDURE
	Output:
		resourceCursor - XML response containing the resource metadata
			CURSOR (
        			name VARCHAR(255), 
        			&quot;path&quot; VARCHAR(32768), 
        			&quot;type&quot; VARCHAR(255), 
        			subtype VARCHAR(255), 
        			enabled BIT, 
        			explicitlyDesigned BIT, 
        			transformSourcePath VARCHAR(32768), 
        			transformSourceType VARCHAR(255), 
        			xsltText VARCHAR(2147483647), 
        			proprietaryModel VARCHAR(2147483647)
				)
	Modified Date:	Modified By:		CSW Version:	Reason:
	08/02/2010		Mike Tinius			5.1.0			created new
    08/28/2012		Calvin Goodrich		5.2.0			Added proprietary model to output
	03/23/2015		Calvin Goodrich		7.0.1			Moved defintion of output cursor to public custom type

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.


	TYPES / SUBTYPES:
	=================
	The following resource types/subtypes are supported by this operation.  Resources
	cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
	within a physical data source.  

	(Basic CIS folder)
	* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
	* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
	(Database)
	* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
	* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
	(Web Services)
	* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
	* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
	* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
	(Connectors)
	* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

	* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
	* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

	* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
	* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
	* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
	* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
	* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
	* DATA_SOURCE / NONE - A custom java procedure data source.

	* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
	* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
	* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
	* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
	* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

	* LINK / unknown at this time

	(CIS procedures)
	* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
	(Custom procedures)
	* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
	(Database procedures)
	* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
	* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
	(XML procedures)
	* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
	(Misc procedures)
	* PROCEDURE / OPERATION_PROCEDURE - 

	* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
	* TABLE / DATABASE_TABLE - A Composite database table.
	* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
	* TABLE / SYSTEM_TABLE - A Composite system table view.

	* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

	* TRIGGER / NONE - A Composite trigger.   Created disabled.</annotation>
  <parameters>
    <parameter name="fullResourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="resourceCursor" direction="OUT" nullable="true">
      <datatype name="resourceCursor" type="TABLE" refId="1">
        <element name="name">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="path">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="type">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="subtype">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="enabled">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="explicitlyDesigned">
          <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
        </element>
        <element name="transformSourcePath">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="transformSourceType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="xsltText">
          <datatype name="VARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
        <element name="proprietaryModel">
          <datatype name="VARCHAR" type="STRING" maxLength="2147483647"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/getBasicResourceXML" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/getBasicResourceXSLT_XSLT_TEXT" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="transformSourcePath">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="transformSourceType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="xsltText">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="proprietaryModel">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
      <element name="inXML" direction="IN">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="3"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getBasicResourceCursor_XSLT_TEXT:
	-- CIS Repository Helper Procedure --
	This procedure retrieves the resource metadata for a given resource that is an XSLT procedure.  
	A cursor of metadata is returned. This procedure invokes 2 lower level API procedures:
		getBasicResourceXML - this performs the actual invocation to the CIS repository API and returns XML
		getBasicResourceXSLT_XSLT_TEXT - this procedure takes the XML response from getBasicResourceXML 
			and turns it into a cursor which is more usable by other CIS procedures.

	Input:
		fullResourcePath - Full resource path which includes the path and the resource name  
			Values: e.g. /shared/Utilities/repository/lowerLevelProcedures/resourceExistsXSLT

		resourceType - Type of CIS resource to be created
			Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. PROCEDURE


	Output:
		resourceCursor - XML response containing the resource metadata
			CURSOR (
        			name VARCHAR(255), 
        			&quot;path&quot; VARCHAR(32768), 
        			&quot;type&quot; VARCHAR(255), 
        			subtype VARCHAR(255), 
        			enabled BIT, 
        			explicitlyDesigned BIT, 
        			transformSourcePath VARCHAR(32768), 
        			transformSourceType VARCHAR(255), 
        			xsltText VARCHAR(2147483647), 
        			proprietaryModel VARCHAR(2147483647)
				)


	Exceptions:  none


	Modified Date:	Modified By:		CSW Version:	Reason:
	08/02/2010		Mike Tinius			5.1.0			created new
    08/28/2012		Calvin Goodrich		5.2.0			Added proprietary model to output
	03/23/2015		Calvin Goodrich		7.0.1			Moved defintion of output cursor to public custom type

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.


	TYPES / SUBTYPES:
	=================
	The following resource types/subtypes are supported by this operation.  Resources
	cannot be created under &quot;/services&quot; unless otherwise noted, and cannot be created
	within a physical data source.  

	(Basic CIS folder)
	* CONTAINER / FOLDER_CONTAINER - A Composite folder.   Cannot be created anywhere under /services except in another FOLDER under /services/webservices.
	* CONTAINER / DIRECTORY_CONTAINER - A Composite directory.
	(Database)
	* CONTAINER / CATALOG_CONTAINER - A Composite catalog folder under a data source.  Can only be created within a data source under /services/databases.
	* CONTAINER / SCHEMA_CONTAINER - A Composite schema container.  Can only be created within a CATALOG that is under /services/databases.
	(Web Services)
	* CONTAINER / SERVICE_CONTAINER - A web service container for the service.  Can only be created within a Composite Web Services data source that is under /services/webservices.
	* CONTAINER / OPERATIONS_CONTAINER - A web service container for the operations
	* CONTAINER / PORT_CONTAINER - A Composite web service container for port.   Can only be created within a SERVICE under /services/webservices.
	(Connectors)
	* CONTAINER / CONNECTOR_CONTAINER - A Composite container for connectors.

	* CONNECTOR / JMS - A Composite JMS Connector.  Created with no connection information
	* CONNECTOR / HTTP - A Composite HTTP Connector.  Created with no connection information

	* DATA_SOURCE / RELATIONAL_DATA_SOURCE - A relational database source.
	* DATA_SOURCE / FILE_DATA_SOURCE - A comma separate file data source.
	* DATA_SOURCE / XML_FILE_DATA_SOURCE - An XML file data source.
	* DATA_SOURCE / WSDL_DATA_SOURCE - A Composite web service data source.
	* DATA_SOURCE / XML_HTTP_DATA_SOURCE - An HTTP XML data source.
	* DATA_SOURCE / NONE - A custom java procedure data source.

	* DEFINITION_SET / SQL_DEFINITION_SET - A Composite SQL Definition set.
	* DEFINITION_SET / XML_SCHEMA_DEFINITION_SET - A Composite XML Schema Defintion set.
	* DEFINITION_SET / WSDL_DEFINITION_SET - A Composite WSDL Definition set.
	* DEFINITION_SET / ABSTRACT_WSDL_DEFINITION_SET - A Composite Abstract WSDL Definition set such as the ones imported from Designer.
	* DEFINITION_SET / SCDL_DEFINITION_SET - A Composite SCA composite Definition set imported from Designer.

	* LINK / unknown at this time

	(CIS procedures)
	* PROCEDURE / SQL_SCRIPT_PROCEDURE - A Composite SQL Procedure.  Created with a simple default script body that is runnable.
	(Custom procedures)
	* PROCEDURE / JAVA_PROCEDURE - A Composite java data source procedure.  Created from a java data source (jar file).
	(Database procedures)
	* PROCEDURE / EXTERNAL_SQL_PROCEDURE - A Composite Packaged Query.  Created with no SQL text, so it is not runnable.  
	* PROCEDURE / DATABASE_PROCEDURE - A database stored procedure.
	(XML procedures)
	* PROCEDURE / BASIC_TRANSFORM_PROCEDURE - A Composite Basic XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / XSLT_TRANSFORM_PROCEDURE - A Composite XSLT Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / STREAM_TRANSFORM_PROCEDURE - A Composite XSLT Streaming Transformation procedure.  Created with no target procedure and no output columns, so it is not runnable.
	* PROCEDURE / XQUERY_TRANSFORM_PROCEDURE - A Composite XQUERY Transformation Procedure.  Created with no target schema and no model, so it is not runnable.
	(Misc procedures)
	* PROCEDURE / OPERATION_PROCEDURE - 

	* TABLE / SQL_TABLE - A Composite View.  Created with no SQL text or model, so it is not runnable.  
	* TABLE / DATABASE_TABLE - A Composite database table.
	* TABLE / DELIMITED_FILE_TABLE - A Composite delimited file table
	* TABLE / SYSTEM_TABLE - A Composite system table view.

	* TREE / XML_FILE_TREE - The XML tree structure associated with a file-XML data source.

	* TRIGGER / NONE - A Composite trigger.   Created disabled.
*/
PROCEDURE getBasicResourceCursor_XSLT_TEXT(
    IN fullResourcePath 	/shared/ASAssets/Utilities/TypeDefinitions.pathType,  
    IN resourceType 		VARCHAR, 
    OUT resourceCursor      CURSOR ResultRowType
)
BEGIN
    DECLARE PUBLIC TYPE ResultRowType ROW (
        name VARCHAR(255), 
        &quot;path&quot; VARCHAR(32768), 
        &quot;type&quot; VARCHAR(255), 
        subtype VARCHAR(255), 
        enabled BIT, 
        explicitlyDesigned BIT, 
        transformSourcePath VARCHAR(32768), 
        transformSourceType VARCHAR(255), 
        xsltText VARCHAR(2147483647), 
        proprietaryModel VARCHAR(2147483647)
    );
	DECLARE moduleName		VARCHAR DEFAULT &apos;getBasicResourceCursor_XSLT_TEXT&apos;;
	DECLARE debug			CHAR(1) DEFAULT /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug;

    DECLARE resourceResponse XML;
	call /shared/ASAssets/Utilities/repository/lowerLevelProcedures/getBasicResourceXML(fullResourcePath, resourceType, resourceResponse);

	call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, CAST(resourceResponse AS LONGVARCHAR));

    OPEN resourceCursor FOR 
        SELECT * FROM /shared/ASAssets/Utilities/repository/lowerLevelProcedures/getBasicResourceXSLT_XSLT_TEXT(resourceResponse);
END</attribute>
  <attribute name="creationDate" type="LONG">1369417729293</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1430320471989</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="public_types" type="MAP">
    <item>
      <key type="STRING">ResultRowType</key>
      <value type="BYTE_ARRAY">EB8GAgANAFIAZQBzAHUAbAB0AFIAbwB3AFQAeQBwAGUGKQBGAC8AcwBoAGEAcgBlAGQALwBBAFMA
QQBzAHMAZQB0AHMALwBVAHQAaQBsAGkAdABpAGUAcwAvAHIAZQBwAG8AcwBpAHQAbwByAHkALwBn
AGUAdABCAGEAcwBpAGMAUgBlAHMAbwB1AHIAYwBlAEMAdQByAHMAbwByAF8AWABTAEwAVABfAFQA
RQBYAFQGKgANAFIAZQBzAHUAbAB0AFIAbwB3AFQAeQBwAGUDEgAAAAEDEgAAAAEBEwEJFAAAAAoQ
IQYVAAQAbgBhAG0AZQMvAAAAAQMWAAAAAAMaAAAAAQMbAAAAAQMg/////wMiAAAAAAgZEBsGAgAH
AFYAQQBSAEMASABBAFIDEgAAAAIEBAAAAAAAAAD/ARMB/////xAhBhUABABwAGEAdABoAy8AAAAB
AxYAAAAAAxoAAAABAxsAAAABAyD/////AyIAAAAACBkQGwYCAAcAVgBBAFIAQwBIAEEAUgMSAAAA
AwQEAAAAAAAAgAABEwH/////ECEGFQAEAHQAeQBwAGUDLwAAAAEDFgAAAAADGgAAAAEDGwAAAAED
IP////8DIgAAAAADEgAAAAL//xAhBhUABwBzAHUAYgB0AHkAcABlAy8AAAABAxYAAAAAAxoAAAAB
AxsAAAABAyD/////AyIAAAAAAxIAAAAC//8QIQYVAAcAZQBuAGEAYgBsAGUAZAMvAAAAAQMWAAAA
AAMaAAAAAQMbAAAAAQMg/////wMiAAAAAAgZEBkGAgADAEIASQBUAxIAAAAEBAcAAAAAAAAAAAQG
AAAAAAAAAAH/////ECEGFQASAGUAeABwAGwAaQBjAGkAdABsAHkARABlAHMAaQBnAG4AZQBkAy8A
AAABAxYAAAAAAxoAAAABAxsAAAABAyD/////AyIAAAAAAxIAAAAE//8QIQYVABMAdAByAGEAbgBz
AGYAbwByAG0AUwBvAHUAcgBjAGUAUABhAHQAaAMvAAAAAQMWAAAAAAMaAAAAAQMbAAAAAQMg////
/wMiAAAAAAMSAAAAA///ECEGFQATAHQAcgBhAG4AcwBmAG8AcgBtAFMAbwB1AHIAYwBlAFQAeQBw
AGUDLwAAAAEDFgAAAAADGgAAAAEDGwAAAAEDIP////8DIgAAAAADEgAAAAL//xAhBhUACAB4AHMA
bAB0AFQAZQB4AHQDLwAAAAEDFgAAAAADGgAAAAEDGwAAAAEDIP////8DIgAAAAAIGRAbBgIABwBW
AEEAUgBDAEgAQQBSAxIAAAAFBAQAAAAAf////wETAf////8QIQYVABAAcAByAG8AcAByAGkAZQB0
AGEAcgB5AE0AbwBkAGUAbAMvAAAAAQMWAAAAAAMaAAAAAQMbAAAAAQMg/////wMiAAAAAAMSAAAA
Bf////8=</value>
    </item>
  </attribute>
  <attribute name="references" type="NULL"/>
</metadata>