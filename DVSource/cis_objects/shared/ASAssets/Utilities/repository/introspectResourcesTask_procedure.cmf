<?xml version="1.1" encoding="UTF-8"?>
<metadata name="introspectResourcesTask" path="/shared/ASAssets/Utilities/repository/introspectResourcesTask" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>introspectResourcesTask:

	This procedure begins an asynchronous thread that introspects a data source and adds objects
    to the CIS repository. This asynchronous thread will survive server restarts. Use 
    introspectResourcesResult to retrieve the results. 

    See /shared/Utilities/repository/getIntrospectableResourceIdsTask for the list of resources
    in a data source that CAN be introspected (whether they&apos;re in the CIS repository or not.)

    See /shared/Utilities/repository/getIntrospectedResourceIdsTask for the list of resources that
    in a data source that already ARE introspected.


    Input:
        dsPath                         - The path to the data source to be modified.  
            Values: Any path to a data source

        updateAllIntrospectedResources - Indicates whether all currently introspected resources 
                                         should be updated.  
            Values: 1 or 0 (NULL indicates FALSE)

        failFast                       - Indicates whether the introspection task should halt on 
                                         first error or continue on a best effort basis.  
            Values: 1 or 0 (NULL indicates FALSE)

        commitOnFailure                - Indicates whether the introspection should commit 
                                         whatever it can. If fastFail is also TRUE, then only 
                                         the successfully introspected resources, up to that 
                                         point, will be committed.
            Values: 1 or 0 (NULL indicates FALSE)

        autoRollback                   - Indicates whether the introspection task will rollback
                                         back rather than committing.  This supersedes all commit 
                                         options.  This allows you to perform a dry run of resource 
                                         introspection. The &quot;introspectResourcesResult&quot; procedure 
                                         is usable if autoRollback is TRUE.  If autoRollback is 
                                         FALSE or NULL, then the introspection will not automatically 
                                         be rolled back.  
            Values: 1 or 0 (NULL indicates FALSE)

        scanForNewResourcesToAutoAdd   - Indicates whether the introspection task will scan for native 
                                         resources that have been newly added to the data source.  If 
                                         newly added resources are found and their parent container 
                                         has the &quot;autoAddChildren&quot; introspection attribute set, then 
                                         that child will automatically be introspected.  
            Values: 1 or 0 (NULL indicates FALSE)

        runInBackgroundTransaction     - Indicates that the introspection task should run as a background
                                         transaction.  
            Values: 1 or 0 (NULL indicates FALSE)

        entries                        - The list of resources to introspect and their respective
                                         introspection actions. Optionally (rare) includes introspection
                                         attributes. (See /services/webservices/system/admin/resource/
                                         operations/getIntrospectionAttributeDefs for details.)
            Values: A vector of type /shared/Utilities/TypeDefinitions.IntrospectionPlanVectorType.
                    For example, when introspecting /shared/examples/ds_orders the entities vector 
                    might look like:

                        VECTOR [
                            (&apos;orders&apos;,    &apos;TABLE&apos;, &apos;DATABASE_TABLE&apos;, &apos;ADD_OR_UPDATE&apos;, NULL),
                            (&apos;customers&apos;, &apos;TABLE&apos;, &apos;DATABASE_TABLE&apos;, &apos;REMOVE&apos;,        NULL)
                        ]

                    For an Oracle database, the entities vector might look like (notice the attribute 
                    vector on the SCOTT schema entry):

                        VECTOR [
                            (&apos;SCOTT&apos;,      &apos;CONTAINER&apos;, &apos;SCHEMA_CONTAINER&apos;, &apos;ADD_OR_UPDATE&apos;, VECTOR [(&apos;tablePatterns&apos;, &apos;STRING&apos;, &apos;E%, D%&apos;)]),
                            (&apos;SCOTT/EMP&apos;,  &apos;TABLE&apos;,     &apos;DATABASE_TABLE&apos;,   &apos;ADD_OR_UPDATE&apos;, NULL),
                            (&apos;SCOTT/DEPT&apos;, &apos;TABLE&apos;,     &apos;DATABASE_TABLE&apos;,   &apos;ADD_OR_UPDATE&apos;, NULL)
                        ]

        dsAttributes                   - The list of introspection attributes to set at the data source level.
            Values: A vector of type /shared/Utilities/TypeDefinitions.AttributesVectorType. See /services/
                    webservices/system/admin/resource/operations/getIntrospectionAttributeDefs for details.
                    For example, when introspecting /shared/examples/ds_orders the dsAttributes vector 
                    might look like:

                        VECTOR [
                            (&apos;autoAddChildren&apos;,  &apos;BOOLEAN&apos;, &apos;true&apos;),
                            (&apos;patternSeparator&apos;, &apos;STRING&apos;,  &apos;,&apos;)
                        ]


    Output:
        taskId       - The introspection task ID. Use this with getIntrospectableResourceIdsResult.
            Values: A task ID

        totalResults - Total size of the result set (if known.)
            Values: A positive integer or NULL.

        completed    - Indicates whether the introspection task has already finished (if known.)
            Values: 1, 0, or NULL (indicating completion status unknown.)


    Exceptions:
        System.NotFoundException        - Thrown when input data source does not exist.

        System.IllegalArgumentException - Thrown when an input can&apos;t be validated.


    Author:      Calvin Goodrich
    Date:        10/10/2012
    CSW Version: 6.2.0

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="dsPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="updateAllIntrospectedResources" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="failFast" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="commitOnFailure" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="autoRollback" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="scanForNewResourcesToAutoAdd" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="runInBackgroundTransaction" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="entries" direction="IN" nullable="true">
      <datatype name="IntrospectionPlanVectorType" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="IntrospectionPlanVectorType" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="IntrospectionPlanEntry" type="TREE" refId="1">
            <element name="path">
              <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
            </element>
            <element name="type">
              <datatype name="ResourceType" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
            </element>
            <element name="subtype">
              <datatype name="ResourceType" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
            </element>
            <element name="action">
              <datatype name="VARCHAR" type="STRING" maxLength="40"/>
            </element>
            <element name="attributes">
              <datatype name="AttributesVectorType" type="ARRAY" maxLength="0">
                <itemDatatype>
                  <datatype name="Attribute" type="TREE" refId="2">
                    <element name="name">
                      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                    </element>
                    <element name="type">
                      <datatype name="VARCHAR" type="STRING" maxLength="40"/>
                    </element>
                    <element name="value">
                      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                    </element>
                  </datatype>
                </itemDatatype>
              </datatype>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="dsAttributes" direction="IN" nullable="true">
      <datatype name="AttributesVectorType" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="AttributesVectorType" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="Attribute" type="TREE" refId="1">
            <element name="name">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="type">
              <datatype name="VARCHAR" type="STRING" maxLength="40"/>
            </element>
            <element name="value">
              <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="taskId" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="totalResults" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="completed" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/resource" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/introspectResourcesTaskXSLT" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="introspectResourcesTask" direction="IN">
        <datatype name="introspectResourcesTask" extendedName="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesTask" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesTask" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}introspectResourcesTask">
          <schemaDatatype>
            <datatype name="introspectResourcesTask" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="introspectResourcesTaskRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="plan" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="introspectionPlan" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="updateAllIntrospectedResources" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="failFast" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="commitOnFailure" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="autoRollback" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="scanForNewResourcesToAutoAdd" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="entries" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="introspectionPlanEntries" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                      <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                        <datatype name="introspectionPlanEntry" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                          <element name="resourceId" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="pathTypeSubtype" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="subtype" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="resourceSubType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                          <element name="action" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="introspectionPlanAction" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                              <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                    <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                  </element>
                                  <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="9">
                                      <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                        <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="10">
                                          <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                            <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                          <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                          <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                            <reference refId="9"/>
                                          </element>
                                          <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                            <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="11">
                                              <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="12">
                                                  <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                    <reference refId="10"/>
                                                  </element>
                                                  <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                    <reference refId="10"/>
                                                  </element>
                                                </datatype>
                                              </element>
                                            </datatype>
                                          </element>
                                          <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                            <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="13">
                                              <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                  <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <reference refId="11"/>
                                  </element>
                                  <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <reference refId="13"/>
                                  </element>
                                  <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                                  </element>
                                </datatype>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="runInBackgroundTransaction" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
              <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <reference refId="7"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="14">
          <element name="taskId">
            <datatype namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
          <element name="totalResults">
            <datatype namespace="http://www.w3.org/2001/XMLSchema" superTypeName="decimal" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
          </element>
          <element name="completed">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    introspectResourcesTask:

	This procedure begins an asynchronous thread that introspects a data source and adds objects
    to the CIS repository. This asynchronous thread will survive server restarts. Use 
    introspectResourcesResult to retrieve the results. 

    See /shared/Utilities/repository/getIntrospectableResourceIdsTask for the list of resources
    in a data source that CAN be introspected (whether they&apos;re in the CIS repository or not.)

    See /shared/Utilities/repository/getIntrospectedResourceIdsTask for the list of resources
    in a data source that already ARE introspected.


    Input:
        dsPath                         - The path to the data source to be modified.  
            Values: Any path to a data source

        updateAllIntrospectedResources - Indicates whether all currently introspected resources 
                                         should be updated.  
            Values: 1 or 0 (NULL indicates FALSE)

        failFast                       - Indicates whether the introspection task should halt on 
                                         first error or continue on a best effort basis.  
            Values: 1 or 0 (NULL indicates FALSE)

        commitOnFailure                - Indicates whether the introspection should commit 
                                         whatever it can. If fastFail is also TRUE, then only 
                                         the successfully introspected resources, up to that 
                                         point, will be committed.
            Values: 1 or 0 (NULL indicates FALSE)

        autoRollback                   - Indicates whether the introspection task will rollback
                                         back rather than committing.  This supersedes all commit 
                                         options.  This allows you to perform a dry run of resource 
                                         introspection. The &quot;introspectResourcesResult&quot; procedure 
                                         is usable if autoRollback is TRUE.  If autoRollback is 
                                         FALSE or NULL, then the introspection will not automatically 
                                         be rolled back.  
            Values: 1 or 0 (NULL indicates FALSE)

        scanForNewResourcesToAutoAdd   - Indicates whether the introspection task will scan for native 
                                         resources that have been newly added to the data source.  If 
                                         newly added resources are found and their parent container 
                                         has the &quot;autoAddChildren&quot; introspection attribute set, then 
                                         that child will automatically be introspected.  
            Values: 1 or 0 (NULL indicates FALSE)

        runInBackgroundTransaction     - Indicates that the introspection task should run as a background
                                         transaction.  
            Values: 1 or 0 (NULL indicates FALSE)

        entries                        - The list of resources to introspect and their respective
                                         introspection actions. Optionally (rare) includes introspection
                                         attributes. (See /services/webservices/system/admin/resource/
                                         operations/getIntrospectionAttributeDefs for details.)
            Values: A vector of type /shared/Utilities/TypeDefinitions.IntrospectionPlanVectorType.
                    For example, when introspecting /shared/examples/ds_orders the entities vector 
                    might look like:

                        VECTOR [
                            (&apos;orders&apos;,    &apos;TABLE&apos;, &apos;DATABASE_TABLE&apos;, &apos;ADD_OR_UPDATE&apos;, NULL),
                            (&apos;customers&apos;, &apos;TABLE&apos;, &apos;DATABASE_TABLE&apos;, &apos;REMOVE&apos;,        NULL)
                        ]

                    For an Oracle database, the entities vector might look like (notice the attribute 
                    vector on the SCOTT schema entry):

                        VECTOR [
                            (&apos;SCOTT&apos;,      &apos;CONTAINER&apos;, &apos;SCHEMA_CONTAINER&apos;, &apos;ADD_OR_UPDATE&apos;, VECTOR [(&apos;tablePatterns&apos;, &apos;STRING&apos;, &apos;E%, D%&apos;)]),
                            (&apos;SCOTT/EMP&apos;,  &apos;TABLE&apos;,     &apos;DATABASE_TABLE&apos;,   &apos;ADD_OR_UPDATE&apos;, NULL),
                            (&apos;SCOTT/DEPT&apos;, &apos;TABLE&apos;,     &apos;DATABASE_TABLE&apos;,   &apos;ADD_OR_UPDATE&apos;, NULL)
                        ]

        dsAttributes                   - The list of introspection attributes to set at the data source level.
            Values: A vector of type /shared/Utilities/TypeDefinitions.AttributesVectorType. See /services/
                    webservices/system/admin/resource/operations/getIntrospectionAttributeDefs for details.
                    For example, when introspecting /shared/examples/ds_orders the dsAttributes vector 
                    might look like:

                        VECTOR [
                            (&apos;autoAddChildren&apos;,  &apos;BOOLEAN&apos;, &apos;true&apos;),
                            (&apos;patternSeparator&apos;, &apos;STRING&apos;,  &apos;,&apos;)
                        ]


    Output:
        taskId       - The introspection task ID. Use this with getIntrospectableResourceIdsResult.
            Values: A task ID

        totalResults - Total size of the result set (if known.)
            Values: A positive integer or NULL.

        completed    - Indicates whether the introspection task has already finished (if known.)
            Values: 1, 0, or NULL (indicating completion status unknown.)


    Exceptions:
        System.NotFoundException        - Thrown when input data source does not exist.

        System.IllegalArgumentException - Thrown when an input can&apos;t be validated.


    Author:      Calvin Goodrich
    Date:        10/10/2012
    CSW Version: 6.2.0

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE introspectResourcesTask(
    IN dsPath                         /lib/resource/ResourceDefs.ResourcePath,
    IN updateAllIntrospectedResources BIT,
    IN failFast                       BIT,
    IN commitOnFailure                BIT,
    IN autoRollback                   BIT,
    IN scanForNewResourcesToAutoAdd   BIT,
    IN runInBackgroundTransaction     BIT,
    IN entries                        /shared/ASAssets/Utilities/TypeDefinitions.IntrospectionPlanVectorType,
    IN dsAttributes                   /shared/ASAssets/Utilities/TypeDefinitions.AttributesVectorType,
    OUT taskId                        LONGVARCHAR,
    OUT totalResults                  INTEGER,
    OUT completed                     BIT
)
BEGIN
    PATH /lib/resource;
    PATH /shared/ASAssets/Utilities;

    DECLARE PROC_NAME CONSTANT VARCHAR(255) DEFAULT &apos;introspectResourcesTask&apos;;
    DECLARE dataSourceExists BOOLEAN DEFAULT FALSE;
    DECLARE i, j INTEGER;
    DECLARE planEntry /shared/ASAssets/Utilities/TypeDefinitions.IntrospectionPlanEntry;
    DECLARE attributes /shared/ASAssets/Utilities/TypeDefinitions.AttributesVectorType;
    DECLARE attribute /shared/ASAssets/Utilities/TypeDefinitions.Attribute;
    DECLARE requestXML LONGVARCHAR;

    IF (dsPath IS NULL) THEN
        RAISE System.IllegalArgumentException VALUE PROC_NAME || &apos;: The input &quot;dsPath&quot; may not be NULL.&apos;;
    END IF;

    IF (entries IS NULL OR CARDINALITY(entries) = 0) THEN
        RAISE System.IllegalArgumentException VALUE PROC_NAME || &apos;: The input &quot;entries&quot; may not be NULL or an empty vector.&apos;;
    END IF;

    CALL ResourceExists (
        dsPath,
        ResourceDefs.RESOURCE_TYPE_DATA_SOURCE,
        NULL,
        dataSourceExists
    );
    IF (NOT dataSourceExists) THEN
        RAISE System.NotFoundException VALUE PROC_NAME || &apos;: input data source, &quot;&apos; || dsPath || &apos;&quot; does not exist or is not a data source.&apos;;
    END IF;

    SET requestXML = 
&apos;&lt;resource:introspectResourcesTask xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:common=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
  &lt;resource:path&gt;&apos; || dsPath || &apos;&lt;/resource:path&gt;
  &lt;resource:plan&gt;
&apos;;

    IF (updateAllIntrospectedResources IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:updateAllIntrospectedResources&gt;&apos; || updateAllIntrospectedResources || &apos;&lt;/resource:updateAllIntrospectedResources&gt;
&apos;;
    END IF;

    IF (failFast IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:failFast&gt;&apos; || failFast || &apos;&lt;/resource:failFast&gt;
&apos;;
    END IF;

    IF (commitOnFailure IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:commitOnFailure&gt;&apos; || commitOnFailure || &apos;&lt;/resource:commitOnFailure&gt;
&apos;;
    END IF;

    IF (autoRollback IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:autoRollback&gt;&apos; || autoRollback || &apos;&lt;/resource:autoRollback&gt;
&apos;;
    END IF;

    IF (scanForNewResourcesToAutoAdd IS NOT NULL) THEN
        SET requestXML = requestXML ||
&apos;    &lt;resource:scanForNewResourcesToAutoAdd&gt;&apos; || scanForNewResourcesToAutoAdd || &apos;&lt;/resource:scanForNewResourcesToAutoAdd&gt;
&apos;;
    END IF;

    SET requestXML = requestXML ||
&apos;    &lt;resource:entries&gt;
&apos;;

    SET i = 1;
    WHILE (i &lt;= CARDINALITY(entries)) DO
        SET planEntry = entries[i];
        SET attributes = planEntry.attributes;

        SET requestXML = requestXML ||
&apos;      &lt;resource:entry&gt;
        &lt;resource:resourceId&gt;
          &lt;resource:path&gt;&apos; || CAST(XMLTEXT(COALESCE(planEntry.&quot;path&quot;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/resource:path&gt;
          &lt;resource:type&gt;&apos; || CAST(XMLTEXT(COALESCE(planEntry.&quot;type&quot;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/resource:type&gt;
          &lt;resource:subtype&gt;&apos; || CAST(XMLTEXT(COALESCE(planEntry.&quot;subtype&quot;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/resource:subtype&gt;
        &lt;/resource:resourceId&gt;
        &lt;resource:action&gt;&apos; || CAST(XMLTEXT(COALESCE(planEntry.&quot;action&quot;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/resource:action&gt;
&apos;;

        IF (attributes IS NOT NULL AND CARDINALITY(attributes) &gt; 0) THEN
            SET requestXML = requestXML ||
&apos;        &lt;resource:attributes&gt;
&apos;;

            SET j = 1;
            WHILE (j &lt;= CARDINALITY(attributes)) DO
                SET attribute = attributes[j];
                SET requestXML = requestXML ||
&apos;          &lt;common:attribute&gt;
            &lt;common:name&gt;&apos; || CAST(XMLTEXT(COALESCE(attribute.name, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/common:name&gt;
            &lt;common:type&gt;&apos; || CAST(XMLTEXT(COALESCE(attribute.&quot;type&quot;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/common:type&gt;
            &lt;common:value&gt;&apos; || CAST(XMLTEXT(COALESCE(attribute.&quot;value&quot;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/common:value&gt;
          &lt;/common:attribute&gt;
&apos;;
                SET j = j + 1;
            END WHILE;
            SET requestXML = requestXML ||
&apos;        &lt;/resource:attributes&gt;
&apos;;
        END IF;
 
        SET requestXML = requestXML ||
&apos;      &lt;/resource:entry&gt;
&apos;;

        SET i = i + 1;
    END WHILE;

    SET requestXML = requestXML ||
&apos;    &lt;/resource:entries&gt;
  &lt;/resource:plan&gt;
  &lt;resource:runInBackgroundTransaction&gt;&apos; || runInBackgroundTransaction || &apos;&lt;/resource:runInBackgroundTransaction&gt;
&apos;;

    IF (dsAttributes IS NOT NULL AND CARDINALITY(dsAttributes) &gt; 0) THEN
        SET requestXML = requestXML ||
&apos;  &lt;resource:attributes&gt;
&apos;;
        SET j = 1;
        WHILE (j &lt;= CARDINALITY(dsAttributes)) DO
            SET attribute = dsAttributes[j];
            SET requestXML = requestXML ||
&apos;    &lt;common:attribute&gt;
      &lt;common:name&gt;&apos; || CAST(XMLTEXT(COALESCE(attribute.name, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/common:name&gt;
      &lt;common:type&gt;&apos; || CAST(XMLTEXT(COALESCE(attribute.&quot;type&quot;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/common:type&gt;
      &lt;common:value&gt;&apos; || CAST(XMLTEXT(COALESCE(attribute.&quot;value&quot;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/common:value&gt;
    &lt;/common:attribute&gt;
&apos;;
            SET j = j + 1;
        END WHILE;

        SET requestXML = requestXML ||
&apos;  &lt;/resource:attributes&gt;
&apos;;
    END IF;

    SET requestXML = requestXML ||
&apos;&lt;/resource:introspectResourcesTask&gt;&apos;;

    --CALL PRINT (requestXML);

    SELECT
        taskId,
        totalResults,
        completed
    INTO
        taskId,
        totalResults,
        completed
    FROM
        /shared/ASAssets/Utilities/repository/lowerLevelProcedures/introspectResourcesTaskXSLT(requestXML); 

END</attribute>
  <attribute name="creationDate" type="LONG">1348767065304</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1446756505551</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:1:Customized" type="STRING">datatype.changed;datatype.changed</attribute>
  <attribute name="p:3:Customized" type="STRING">datatype.changed;datatype.changed</attribute>
  <attribute name="p:7:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:8:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">10/158</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceExists</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/155</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/160</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/165</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/151</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
  </attribute>
</metadata>