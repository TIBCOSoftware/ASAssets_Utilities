<?xml version="1.1" encoding="UTF-8"?>
<metadata name="updateDefSetDef" path="/shared/ASAssets/Utilities/repository/updateDefSetDef" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>updateDefSetDef:
	Description:
	  Programmatically updates an entry in a definition set
	
	  Usage note: Calling procedure&apos;s thread&apos;s user must have ACCESS_TOOLS right.
	
	  Usage note 2: TEST this on a definition set you don&apos;t care about before trying it on something you can&apos;t replace.
	  (This uses the Admin API to execute the update. The Admin API is not set in stone and engineers LOVE to change things.)
	
	Inputs:
	  defSetPath - path to the definition set
	  updateType - operation type: one of &apos;INSERT&apos;, &apos;UPDATE&apos;, or &apos;DELETE&apos;
	  defName    - name of the definition entry
	  defType    - definition type (&apos;TYPE_DEFINITION&apos;, &apos;EXCEPTION_DEFINITION&apos;, or &apos;CONSTANT_DEFINITION&apos;)
	  dataType   - data type (should be NULL for exception definitions)
	  defValue   - value of the definition (should be NULL for type and exception definitions)
	
	Outputs:
	  None (throws exception if there is an error.)
	
	Exceptions:
	  /lib/util/System.IllegalArgumentException - If any of the inputs can not be validated.
	
	Author:      Calvin Goodrich
	Date:        8/11/2010
	CSW Version: 5.1.0

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="defSetPath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="updateType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="defName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="defType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="dataType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="defValue" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getDefSetDefs" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="defSetPath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="defname">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="deftype">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="datatype">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="defvalue">
            <datatype type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/lowerLevelProcedures/updateSQLDefSetXForm" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="updateDefinitionSet" direction="IN">
        <datatype name="updateDefinitionSet" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateDefinitionSet" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateDefinitionSet" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateDefinitionSet">
          <schemaDatatype>
            <datatype name="updateDefinitionSet" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateDefinitionSetRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="sourceDocument" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="xmlDocumentSet" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="contents" namespace="http://www.compositesw.com/services/system/admin/resource">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="charset" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="targetNamespace" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="anyURI" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="locationURI" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="anyURI" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="schemaLocation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
              <element name="definitions" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                  <element name="definition" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="definition" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="definitionType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="namespace" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="anyURI" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="dataType" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="dataType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                          <element name="sqlType" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                              <element name="definition" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="nativeType" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="referencePath" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="referenceTypeName" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="proprietaryModel" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="base64Binary" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="BINARY"/>
                              </element>
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="trailingSpaces" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                          <element name="xmlType" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="namespace" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="schema" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="referencePath" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="proprietaryModel" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="base64Binary" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="BINARY"/>
                              </element>
                            </datatype>
                          </element>
                          <element name="pseudoType" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="9">
                              <element name="definition" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="pseudoType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="attributeList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="10">
                          <element name="attribute" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="attribute" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="11">
                              <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeTypeValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="12">
                                  <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                    <datatype name="attributeTypeValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="13">
                                      <element name="type" namespace="http://www.compositesw.com/services/system/util/common">
                                        <datatype name="attributeType" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="value" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                      </element>
                                      <element name="valueList" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <reference refId="12"/>
                                      </element>
                                      <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="14">
                                          <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="15">
                                              <element name="key" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="13"/>
                                              </element>
                                              <element name="value" namespace="http://www.compositesw.com/services/system/util/common">
                                                <reference refId="13"/>
                                              </element>
                                            </datatype>
                                          </element>
                                        </datatype>
                                      </element>
                                      <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                        <datatype name="attributeSimpleValueList" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="16">
                                          <element name="item" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                            <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                                          </element>
                                        </datatype>
                                      </element>
                                    </datatype>
                                  </element>
                                </datatype>
                              </element>
                              <element name="valueMap" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="attributeTypeValueMap" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="attributeComplexValue" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="COMPLEX_TYPE" type="TREE" refId="17">
                                  <element name="entry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                                    <reference refId="15"/>
                                  </element>
                                </datatype>
                              </element>
                              <element name="valueArray" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <reference refId="16"/>
                              </element>
                              <element name="unset" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                      <element name="value" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="attributeSimpleValue" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="attributes" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <reference refId="10"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="outputs" direction="OUT" nullable="false">
        <datatype type="TABLE" refId="18">
          <element name="name">
            <datatype namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="32768"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* updateDefSetDef:
	Description:
	  Programmatically updates an entry in a definition set
	
	  Usage note: Calling procedure&apos;s thread&apos;s user must have ACCESS_TOOLS right.
	
	  Usage note 2: TEST this on a definition set you don&apos;t care about before trying it on something you can&apos;t replace.
	  (This uses the Admin API to execute the update. The Admin API is not set in stone and engineers LOVE to change things.)
	
	Inputs:
	  defSetPath - path to the definition set
	  updateType - operation type: one of &apos;INSERT&apos;, &apos;UPDATE&apos;, or &apos;DELETE&apos;
	  defName    - name of the definition entry
	  defType    - definition type (&apos;TYPE_DEFINITION&apos;, &apos;EXCEPTION_DEFINITION&apos;, or &apos;CONSTANT_DEFINITION&apos;)
	  dataType   - data type (should be NULL for exception definitions)
	  defValue   - value of the definition (should be NULL for type and exception definitions)
	
	Outputs:
	  None (throws exception if there is an error.)
	
	Exceptions:
	  /lib/util/System.IllegalArgumentException - If any of the inputs can not be validated.
	
	Author:      Calvin Goodrich
	Date:        8/11/2010
	CSW Version: 5.1.0

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE updateDefSetDef(
    IN defSetPath /lib/resource/ResourceDefs.ResourcePath,
    IN updateType VARCHAR(255),
    IN defName VARCHAR(255),
    IN defType VARCHAR(255),
    IN dataType VARCHAR(255),
    IN defValue VARCHAR(255)
)
BEGIN
    DECLARE requestText /lib/util/System.Text;
    DECLARE defLocated BOOLEAN DEFAULT FALSE;
    DECLARE myDataType VARCHAR(32768);
    DECLARE otherDataType VARCHAR(32768);
    DECLARE myValue VARCHAR(32768);
    DECLARE otherValue VARCHAR(32768);
    DECLARE result CURSOR (
        name VARCHAR(32768)
    );
    DECLARE rName VARCHAR(32768);

    -- sanity check the inputs
    --
    IF (defSetPath IS NULL OR defName IS NULL OR defType IS NULL) THEN
        RAISE /lib/util/System.IllegalArgumentException VALUE &apos;defSetPath, defName, and defType may not be NULL&apos;;
    END IF;
    
    IF (defType NOT IN (&apos;TYPE_DEFINITION&apos;, &apos;EXCEPTION_DEFINITION&apos;, &apos;CONSTANT_DEFINITION&apos;)) THEN
        RAISE /lib/util/System.IllegalArgumentException VALUE &apos;defType must be one of &quot;TYPE_DEFINITION&quot;, &quot;EXCEPTION_DEFINITION&quot;, or &quot;CONSTANT_DEFINITION&quot;&apos;;
    END IF;

    IF (updateType NOT IN (&apos;INSERT&apos;, &apos;UPDATE&apos;, &apos;DELETE&apos;)) THEN
        RAISE /lib/util/System.IllegalArgumentException VALUE &apos;updateType must be one of &quot;INSERT&quot;, &quot;UPDATE&quot;, or &quot;DELETE&quot;&apos;;
    END IF;


    -- updates to exception definitions will fail if they include the &lt;ns1:dataType&gt; element
    --
    IF (defType = &apos;EXCEPTION_DEFINITION&apos;) THEN
        SET myDataType = &apos;&apos;;
    ELSE
        SET myDataType = &apos;&lt;ns1:dataType&gt;
                            &lt;ns2:sqlType xmlns:ns2=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
                                 &lt;ns2:definition&gt;&apos; || CAST(XMLTEXT(COALESCE(dataType, &apos;&apos;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/ns2:definition&gt;
                                 &lt;ns2:name&gt;&apos; || CAST(XMLTEXT(defName) AS VARCHAR(2147483647)) || &apos;&lt;/ns2:name&gt;
                             &lt;/ns2:sqlType&gt;
                         &lt;/ns1:dataType&gt;&apos;;
    END IF;
    
    -- similarly, updates to exception and type definitions will fail if they include the &lt;ns1:value&gt; element
    --
    IF (defType = &apos;CONSTANT_DEFINITION&apos;) THEN
        SET myValue = &apos;&lt;ns1:value&gt;&apos; || CAST(XMLTEXT(COALESCE(defValue, &apos;&apos;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:value&gt;&apos;;
    ELSE
        SET myValue = &apos;&apos;;
    END IF;

    -- build out the header of the &lt;ns1:updateDefinitionSet&gt; request element
    --
    SET requestText = &apos;&lt;ns1:updateDefinitionSet xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
                          &lt;ns1:path&gt;&apos; || CAST(XMLTEXT(defSetPath) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:path&gt;
                          &lt;ns1:detail&gt;NONE&lt;/ns1:detail&gt;
                          &lt;ns1:definitions&gt;&apos;;

    -- the updateDefintionSet() Admin API completely replaces the def set&apos;s contents, so we
    -- have to reconstruct each of the existing definitions and slip in our changes.
    --
    FOR d AS 
        SELECT * FROM /shared/ASAssets/Utilities/repository/getDefSetDefs(defSetPath) 
    DO

        -- updates to exception definitions will fail if they include the &lt;ns1:dataType&gt; element
        --
        IF (d.deftype = &apos;EXCEPTION_DEFINITION&apos;) THEN
            SET otherDataType = &apos;&apos;;
        ELSE
            SET otherDataType = &apos;&lt;ns1:dataType&gt;
                                   &lt;ns2:sqlType xmlns:ns2=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
                                        &lt;ns2:definition&gt;&apos; || CAST(XMLTEXT(COALESCE(d.datatype, &apos;&apos;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/ns2:definition&gt;
                                        &lt;ns2:name&gt;&apos; || CAST(XMLTEXT(d.defname) AS VARCHAR(2147483647)) || &apos;&lt;/ns2:name&gt;
                                    &lt;/ns2:sqlType&gt;
                                &lt;/ns1:dataType&gt;&apos;;
        END IF;

        -- similarly, updates to exception and type definitions will fail if they include the &lt;ns1:value&gt; element
        --
        IF (d.deftype = &apos;CONSTANT_DEFINITION&apos;) THEN
            SET otherValue = &apos;&lt;ns1:value&gt;&apos; || CAST(XMLTEXT(COALESCE(d.defvalue, &apos;&apos;, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:value&gt;&apos;;
        ELSE
            SET otherValue = &apos;&apos;;
        END IF;
    
        IF (d.defname = defName) THEN
            IF (updateType IN (&apos;INSERT&apos;,&apos;UPDATE&apos;)) THEN -- insert will replace an existing definition (like an upsert)
                SET requestText = requestText || &apos;&lt;ns1:definition&gt;
                                                     &lt;ns1:name&gt;&apos; || CAST(XMLTEXT(d.defname) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:name&gt;
                                                     &lt;ns1:type&gt;&apos; || CAST(XMLTEXT(d.deftype) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:type&gt;
                                                     &apos; || myDataType || &apos;
                                                     &apos; || myValue || &apos;
                                                 &lt;/ns1:definition&gt;&apos;;
            END IF;

            SET defLocated = TRUE;
        ELSE
            SET requestText = requestText || &apos;&lt;ns1:definition&gt;
                                                 &lt;ns1:name&gt;&apos; || CAST(XMLTEXT(d.defname) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:name&gt;
                                                 &lt;ns1:type&gt;&apos; || CAST(XMLTEXT(d.deftype) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:type&gt;
                                                 &apos; || otherDataType || &apos;
                                                 &apos; || otherValue || &apos;
                                             &lt;/ns1:definition&gt;&apos;;
        END IF;

    END FOR;
    
    -- if the user requested an INSERT operation and the definition wasn&apos;t located and updated earlier, paste it on to the end of the definition list
    --
    IF (NOT defLocated AND updateType = &apos;INSERT&apos;) THEN
        SET requestText = requestText || &apos;&lt;ns1:definition&gt;
                                             &lt;ns1:name&gt;&apos; || CAST(XMLTEXT(defName) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:name&gt;
                                             &lt;ns1:type&gt;&apos; || CAST(XMLTEXT(defType) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:type&gt;
                                             &apos; || myDataType || &apos;
                                             &apos; || myValue || &apos;
                                         &lt;/ns1:definition&gt;&apos;;
    END IF;

    -- paste the footer of the request
    --
    SET requestText = requestText || &apos;&lt;/ns1:definitions&gt;
                                 &lt;/ns1:updateDefinitionSet&gt;&apos;;

    -- execute the request
    --
    OPEN result FOR 
        SELECT 
            *
        FROM      
            /shared/ASAssets/Utilities/repository/lowerLevelProcedures/updateSQLDefSetXForm(requestText) updateSQLDefSetXForm;
    FETCH result INTO rName;
    CLOSE result;
END
</attribute>
  <attribute name="creationDate" type="LONG">1369417729294</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>