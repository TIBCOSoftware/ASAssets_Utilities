<?xml version="1.1" encoding="UTF-8"?>
<metadata name="getResourcesByDate" path="/shared/ASAssets/Utilities/repository/getResourcesByDate" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>getResourcesByDate
	-- CIS Repository Helper Procedure --

	This procedure is only valid when used with CIS 6.2.1 and higher and using the options 5-6 for creation date.
	This procedure is only valid when used with CIS 6.2.2 and higher and using the options 1-4 for modification date.

	This procedure is used to return a list of resources from a given starting folder based on the options described in in the 
	&quot;optionType&quot; input parameter.  Depending on the option type selected, it may use the creation date attribute or the modification
	date attribute when determining the result set.  The starting resource is included in the output list if applicable for the option
	and parameters passed in.

	Because the results are not ordered, the user of this method may wish to execute the procedure with an order by.  
	For example:
		1. To select the 5 most recent modified resources in descending order:
			select * form /shared/Utilities/repository/getResourcesByDate(1,&apos;/shared/Utilities&apos;,&apos;CONTAINER&apos;,5,null) r
				order by r.lastModifiedDate DESC
		2. To select the 5 least recent modified resources in ascending order:
			select * form /shared/Utilities/repository/getResourcesByDate(2,&apos;/shared/Utilities&apos;,&apos;CONTAINER&apos;,5,null) r
				order by r.lastModifiedDate ASC
	Input:
		optionType
			-- 1: Find the n most recent modified resources in the path (default of n is 1 if left null or 0). Results are not ordered.
			-- 2: Find the n least recent modified resources in the path (default of n is 1 if left null or 0). Results are not ordered.
			-- 3: Find all resources modified after the passed in resource timestamp
			-- 4: Find all resources modified before the passed in resource timestamp
			-- 5: Find all resources created after the passed in resource timestamp
			-- 6: Find all resources created before the passed in resource timestamp
  		resourcePath - CIS source folder path to begin deriving a list of resources
			Values: e.g. /shared/Utilities [this folder]
		resourceNum - The number of resources to return in the list for optionType 1 or 2.  The default is 1
			Values: e.g. 5 (return the 5 resources in the list)
		resourceDate - A timestamp to compare with the various resources for optionType 3-6.
			Values: e.g. 2013-08-06 14:10:00
 	Output:
		resourceTreeType2 - Cursor result set
			PIPE (
				name					VARCHAR(255),				name of the CIS resource
				resPath					TypeDefinitions.pathType,	full path of the CIS resource
				resType					VARCHAR(255),				resource type
				subType					VARCHAR(255),				resource sub type
				creationDate			TIMESTAMP,
				creationDateBigint		BIGINT,
				creatorUserDomain		VARCHAR(255),
				creatorUserName			VARCHAR(255),
				lastModifiedDate		TIMESTAMP,
				lastModifiedDateBigint	BIGINT,
				lastModifiedUserDomain	VARCHAR(255),
				lastModifiedUserName	VARCHAR(255)
			)

	Exceptions:  ex

	Modified Date:	Modified By:		CSW Version:	Reason:
	08/06/2013		Mike Tinius			6.1.0			Created new

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="optionType" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="resourceNum" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="resourceDate" direction="IN" nullable="true">
      <datatype name="TIMESTAMP" type="DATETIME"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="resourceTreeType" type="TABLE" refId="1">
        <element name="name">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="resPath">
          <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
        </element>
        <element name="resType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="subType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="creationDate">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="creationDateBigint">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="creatorUserDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="creatorUserName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="lastModifiedDate">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="lastModifiedDateBigint">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="lastModifiedUserDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="lastModifiedUserName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="path">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="32768"/>
          </element>
          <element name="subtype">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="enabled">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="id">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="changeid">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
          <element name="ownerDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="ownerName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="impactLevel">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="annotation">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="explicitlyDesigned">
            <datatype type="INTEGER" minValue="0" maxValue="1"/>
          </element>
          <element name="tableType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="sqlText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="scriptText">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor_ResourceAttributes" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceCursor" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="type">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="value">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="valueList">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="valueMap">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor_ResourceAttributes" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getCisVersion" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="15"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getCisVersion" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/time/DateUtils/BigintToTimestamp" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inBigint" direction="IN">
        <datatype type="INTEGER"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="DATETIME"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/time/DateUtils/BigintToTimestamp" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/time/DateUtils/TimestampToBigint" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inTimestamp" direction="IN">
        <datatype type="DATETIME"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="INTEGER"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/time/DateUtils/TimestampToBigint" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getResourcesByDate
	-- CIS Repository Helper Procedure --

	This procedure is only valid when used with CIS 6.2.1 and higher and using the options 5-6 for creation date.
	This procedure is only valid when used with CIS 6.2.2 and higher and using the options 1-4 for modification date.

	This procedure is used to return a list of resources from a given starting folder based on the options described in in the 
	&quot;optionType&quot; input parameter.  Depending on the option type selected, it may use the creation date attribute or the modification
	date attribute when determining the result set.  The starting resource is included in the output list if applicable for the option
	and parameters passed in.

	Because the results are not ordered, the user of this method may wish to execute the procedure with an order by.  
	For example:
		1. To select the 5 most recent modified resources in descending order:
			select * form /shared/Utilities/repository/getResourcesByDate(1,&apos;/shared/Utilities&apos;,&apos;CONTAINER&apos;,5,null) r
				order by r.lastModifiedDate DESC
		2. To select the 5 least recent modified resources in ascending order:
			select * form /shared/Utilities/repository/getResourcesByDate(2,&apos;/shared/Utilities&apos;,&apos;CONTAINER&apos;,5,null) r
				order by r.lastModifiedDate ASC
	Input:
		optionType
			-- 1: Find the n most recent modified resources in the path (default of n is 1 if left null or 0). Results are not ordered.
			-- 2: Find the n least recent modified resources in the path (default of n is 1 if left null or 0). Results are not ordered.
			-- 3: Find all resources modified after the passed in resource timestamp
			-- 4: Find all resources modified before the passed in resource timestamp
			-- 5: Find all resources created after the passed in resource timestamp
			-- 6: Find all resources created before the passed in resource timestamp
  		resourcePath - CIS source folder path to begin deriving a list of resources
			Values: e.g. /shared/Utilities [this folder]
		resourceNum - The number of resources to return in the list for optionType 1 or 2.  The default is 1
			Values: e.g. 5 (return the 5 resources in the list)
		resourceDate - A timestamp to compare with the various resources for optionType 3-6.
			Values: e.g. 2013-08-06 14:10:00
 	Output:
		resourceTreeType2 - Cursor result set
			PIPE (
				name					VARCHAR(255),				name of the CIS resource
				resPath					TypeDefinitions.pathType,	full path of the CIS resource
				resType					VARCHAR(255),				resource type
				subType					VARCHAR(255),				resource sub type
				creationDate			TIMESTAMP,
				creationDateBigint		BIGINT,
				creatorUserDomain		VARCHAR(255),
				creatorUserName			VARCHAR(255),
				lastModifiedDate		TIMESTAMP,
				lastModifiedDateBigint	BIGINT,
				lastModifiedUserDomain	VARCHAR(255),
				lastModifiedUserName	VARCHAR(255)
			)

	Exceptions:  ex

	Modified Date:	Modified By:		CSW Version:	Reason:
	08/06/2013		Mike Tinius			6.1.0			Created new

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE getResourcesByDate(
	IN  optionType		INTEGER,
			-- 1: Find the n most recent modified resources in the path (default of n is 1).  results are not ordered
			-- 2: Find the n least recent modified resources in the path (default of n is 1). results are not ordered
			-- 3: Find all resources modified after the passed in resource date
			-- 4: Find all resources modifed before the passed in resource date
			-- 5: Find all resources created after the passed in resource date
			-- 6: Find all resources created before the passed in resource date
	IN  resourcePath	/shared/ASAssets/Utilities/TypeDefinitions.pathType,
	IN  resourceType	VARCHAR,
	IN  resourceNum		INTEGER,
	IN  resourceDate	TIMESTAMP,
	OUT	result			PIPE /shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive.resourceTreeType
)
BEGIN
    -- public constants used for &quot;optionType&quot; input. improves readability
    --
    DECLARE PUBLIC OPTION_N_MOST_RECENT   CONSTANT INTEGER DEFAULT 1;
    DECLARE PUBLIC OPTION_N_LEAST_RECENT  CONSTANT INTEGER DEFAULT 2;
    DECLARE PUBLIC OPTION_MODIFIED_AFTER  CONSTANT INTEGER DEFAULT 3;
    DECLARE PUBLIC OPTION_MODIFIED_BEFORE CONSTANT INTEGER DEFAULT 4;
    DECLARE PUBLIC OPTION_CREATED_AFTER   CONSTANT INTEGER DEFAULT 5;
    DECLARE PUBLIC OPTION_CREATED_BEFORE  CONSTANT INTEGER DEFAULT 6;

	DECLARE moduleName				VARCHAR DEFAULT &apos;getResourcesByDate&apos;;
	DECLARE debug					CHAR(1) DEFAULT /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug;
	DECLARE i						INTEGER DEFAULT 1;
	DECLARE cisVersion				VARCHAR;
	DECLARE resourceNum_			INTEGER DEFAULT NVL(resourceNum, 1); -- used with options 1-2
	DECLARE nextResourceNum			INTEGER DEFAULT 1;	-- used with options 1-2
	DECLARE resourceRec				/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive.resourceTreeType; -- used with all options
	DECLARE resourceVect			VECTOR(/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive.resourceTreeType) DEFAULT VECTOR[(null)]; -- used with options 1-2
	DECLARE resourceDateBigint		BIGINT;		-- used with options 3-6
	DECLARE smallestModifiedDateBigint BIGINT; 	-- used with option 1
	DECLARE smallestModifiedDateRow	INTEGER;	-- used with option 1
	DECLARE largestModifiedDateBigint BIGINT;	-- used with option 2
	DECLARE largestModifiedDateRow	INTEGER;	-- used with option 2
	DECLARE ex						EXCEPTION;
		
	call /shared/ASAssets/Utilities/repository/getCisVersion(cisVersion);

	call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;optionType=[&apos;||emptyStr(optionType)||&apos;  resourcePath=[&apos;||emptyStr(resourcePath)||&apos;]  resourceType=[&apos;||emptyStr(resourceType)||&apos;]&apos;);
	set resourceRec = null;

		-- Get the resource information for incoming parent resource
		FOR r as select * from /shared/ASAssets/Utilities/repository/getBasicResourceCursor(resourcePath, resourceType) DO
			set resourceRec.name = r.name;
			set resourceRec.resPath = r.&quot;path&quot;;
			set resourceRec.resType = r.&quot;type&quot;;
			set resourceRec.subType = r.subtype;
		END FOR;

		-- Obtain the resource attributes to located creation and modified attributes (starting with 6.2.1 and higher)
		FOR attr AS SELECT * FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor_ResourceAttributes(resourcePath, resourceType) DO
--			call print(&apos;attr.name=&apos;||emptyStr(attr.name)||&apos;  attr.value=[&apos;||emptyStr(attr.&quot;value&quot;)||&apos;]&apos;);
			CASE attr.name
				WHEN &apos;creationDate&apos; THEN 
					if (attr.&quot;value&quot; is not null and attr.&quot;value&quot; &gt; 0) then
						set resourceRec.creationDateBigint = attr.&quot;value&quot;;
						call /shared/ASAssets/Utilities/&quot;time&quot;/DateUtils/BigintToTimestamp(resourceRec.creationDateBigint, resourceRec.creationDate);
					end if;
				WHEN &apos;creatorUserDomain&apos; THEN set resourceRec.creatorUserDomain = attr.&quot;value&quot;;
				WHEN &apos;creatorUserName&apos; THEN set resourceRec.creatorUserName = attr.&quot;value&quot;;
				WHEN &apos;lastModifiedDate&apos; THEN 
					if (attr.&quot;value&quot; is not null and attr.&quot;value&quot; &gt; 0) then
						set resourceRec.lastModifiedDateBigint = attr.&quot;value&quot;;
						call /shared/ASAssets/Utilities/&quot;time&quot;/DateUtils/BigintToTimestamp(resourceRec.lastModifiedDateBigint, resourceRec.lastModifiedDate);
					end if;
				WHEN &apos;lastModifiedUserDomain&apos; THEN set resourceRec.lastModifiedUserDomain = attr.&quot;value&quot;;
				WHEN &apos;lastModifiedUserName&apos; THEN set resourceRec.lastModifiedUserName = attr.&quot;value&quot;;
				ELSE
			END CASE;
		END FOR;

		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;    resourceRec.creationDateBigint=&apos;||emptyStr(resourceRec.creationDateBigint));
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;          resourceRec.creationDate=&apos;||emptyStr(resourceRec.creationDate));
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;     resourceRec.creatorUserDomain=&apos;||emptyStr(resourceRec.creatorUserDomain));
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;       resourceRec.creatorUserName=&apos;||emptyStr(resourceRec.creatorUserName));
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceRec.lastModifiedDateBigint=&apos;||emptyStr(resourceRec.lastModifiedDateBigint));
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;      resourceRec.lastModifiedDate=&apos;||emptyStr(resourceRec.lastModifiedDate));
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceRec.lastModifiedUserDomain=&apos;||emptyStr(resourceRec.lastModifiedUserDomain));
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;   resourceRec.lastModifiedUserName=&apos;||emptyStr(resourceRec.lastModifiedUserName));

	-- 1: Find the n most recent modified resources in the path
	if (optionType = OPTION_N_MOST_RECENT) then
		-- CIS must be at least 6.2.2 for modification date attributes to be present
		if (cisVersion &lt; &apos;6.2.2.00.00&apos;) then
			raise ex value &apos;Minimum release required for this capability is 6.2.2.  The current release is &apos;||cisVersion;
		end if;

		-- Initialize the resource vector
		while (i &lt; resourceNum_) do
			set resourceVect = EXTEND(resourceVect, 1);
			set i = i + 1;
		end while;
		-- check the parent path that was passed in
		if (resourceRec.lastModifiedDate is not null) then
			set resourceVect[nextResourceNum] =  resourceRec;
			set smallestModifiedDateBigint = resourceRec.lastModifiedDateBigint;
			set smallestModifiedDateRow = nextResourceNum;
			set nextResourceNum = nextResourceNum + 1;
		end if;

		-- Get a list of all resources for a starting path
		for r as select * from /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) do
--			call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;modified=&apos;||emptyStr(r.lastModifiedDate)||&apos;   path=&apos;||emptyStr(r.resPath)||&apos;  type=&apos;||r.resType);

			-- First time finding a valid resource
			if (r.lastModifiedDateBigint is not null and smallestModifiedDateBigint is null) then
				set resourceVect[nextResourceNum] =  r;
				set smallestModifiedDateBigint = r.lastModifiedDateBigint;
				set smallestModifiedDateRow = nextResourceNum;
				set nextResourceNum = nextResourceNum + 1;
--				call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;1.modified Bigint=&apos;||emptyStr(r.lastModifiedDateBigint)||&apos;  date=&apos;||emptyStr(r.lastModifiedDate)||&apos;   path=&apos;||emptyStr(r.resPath)||&apos;  type=&apos;||r.resType);
--				call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;1.Row=&apos;||emptyStr(smallestModifiedDateRow)||&apos;   smallestModifiedDateBigint=&apos;||emptyStr(smallestModifiedDateBigint));
			-- Subsequent valid resources
			elseif (r.lastModifiedDateBigint is not null and smallestModifiedDateBigint is not null) then -- and r.lastModifiedDateBigint &gt; smallestModifiedDateBigint) then
				-- Add to vector if there is room
				if (nextResourceNum &lt;= resourceNum_) then
--					call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;2.modified Bigint=&apos;||emptyStr(r.lastModifiedDateBigint)||&apos;  date=&apos;||emptyStr(r.lastModifiedDate)||&apos;   path=&apos;||emptyStr(r.resPath)||&apos;  type=&apos;||r.resType);
--					call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;2.Row=&apos;||emptyStr(smallestModifiedDateRow)||&apos;   smallestModifiedDateBigint=&apos;||emptyStr(smallestModifiedDateBigint));
					set resourceVect[nextResourceNum] =  r;
					if (r.lastModifiedDateBigint &lt; smallestModifiedDateBigint) then
						set smallestModifiedDateBigint = r.lastModifiedDateBigint;
						set smallestModifiedDateRow = nextResourceNum;
					end if;
					set nextResourceNum = nextResourceNum + 1;
				-- otherwse look for the the smallest date and replace it
				else
					if (r.lastModifiedDateBigint &gt; smallestModifiedDateBigint) then
						set resourceVect[smallestModifiedDateRow] =  r;
						set smallestModifiedDateBigint = null;				
						set i = 1;
						while (i &lt;= CARDINALITY(resourceVect)) do
							if (resourceVect[i] is not null) then
								if (smallestModifiedDateBigint is null) then
									set smallestModifiedDateBigint = resourceVect[i].lastModifiedDateBigint;
									set smallestModifiedDateRow = i;
								else
									if (resourceVect[i].lastModifiedDateBigint &lt; smallestModifiedDateBigint) then
										set smallestModifiedDateBigint = resourceVect[i].lastModifiedDateBigint;
										set smallestModifiedDateRow = i;
									end if;
								end if;
							end if;
							set i = i + 1;
						end while;
--						call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;3.modified Bigint=&apos;||emptyStr(r.lastModifiedDateBigint)||&apos;  date=&apos;||emptyStr(r.lastModifiedDate)||&apos;   path=&apos;||emptyStr(r.resPath)||&apos;  type=&apos;||r.resType);
--						call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;3.Row=&apos;||emptyStr(smallestModifiedDateRow)||&apos;   smallestModifiedDateBigint=&apos;||emptyStr(smallestModifiedDateBigint));
					end if;
				end if;
			end if;
		end for;

		set i = 1;
		while (i &lt;= CARDINALITY(resourceVect)) do
			if (resourceVect[i] is not null) then
				set resourceRec = resourceVect[i];
				insert into result values (resourceRec);
			end if;
			set i = i + 1;
		end while;
	end if;

	-- 2: Find the n least recent modified resources in the path
	if (optionType = OPTION_N_LEAST_RECENT) then
		-- CIS must be at least 6.2.2 for modification date attributes to be present
		if (cisVersion &lt; &apos;6.2.2.00.00&apos;) then
			raise ex value &apos;Minimum release required for this capability is 6.2.2.  The current release is &apos;||cisVersion;
		end if;

		-- Initialize the resource vector
		while (i &lt; resourceNum_) do
			set resourceVect = EXTEND(resourceVect, 1);
			set i = i + 1;
		end while;
		-- check the parent path that was passed in
		if (resourceRec.lastModifiedDate is not null) then
			set resourceVect[nextResourceNum] =  resourceRec;
			set nextResourceNum = nextResourceNum + 1;
		end if;

		-- Get a list of all resources for a starting path
		for r as select * from /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) do
			if (r.lastModifiedDateBigint is not null and resourceRec is null) then
				set resourceRec = r;
			elseif (r.lastModifiedDateBigint is not null and resourceRec.lastModifiedDateBigint is not null and r.lastModifiedDateBigint &gt; 0 and r.lastModifiedDateBigint &gt; resourceRec.lastModifiedDateBigint) then
				set resourceRec = r;
			end if;
			-- First time finding a valid resource
			if (r.lastModifiedDateBigint is not null and largestModifiedDateBigint is null) then
				set resourceVect[nextResourceNum] =  r;
				set largestModifiedDateBigint = r.lastModifiedDateBigint;
				set largestModifiedDateRow = nextResourceNum;
				set nextResourceNum = nextResourceNum + 1;
--				call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;1.modified Bigint=&apos;||emptyStr(r.lastModifiedDateBigint)||&apos;  date=&apos;||emptyStr(r.lastModifiedDate)||&apos;   path=&apos;||emptyStr(r.resPath)||&apos;  type=&apos;||r.resType);
--				call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;1.Row=&apos;||emptyStr(largestModifiedDateRow)||&apos;   largestModifiedDateBigint=&apos;||emptyStr(largestModifiedDateBigint));
			-- Subsequent valid resources
			elseif (r.lastModifiedDateBigint is not null and largestModifiedDateBigint is not null) then
				-- Add to vector if there is room
				if (nextResourceNum &lt;= resourceNum_) then
--					call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;2.modified Bigint=&apos;||emptyStr(r.lastModifiedDateBigint)||&apos;  date=&apos;||emptyStr(r.lastModifiedDate)||&apos;   path=&apos;||emptyStr(r.resPath)||&apos;  type=&apos;||r.resType);
--					call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;2.Row=&apos;||emptyStr(largestModifiedDateRow)||&apos;   largestModifiedDateBigint=&apos;||emptyStr(largestModifiedDateBigint));
					set resourceVect[nextResourceNum] =  r;
					if (r.lastModifiedDateBigint &gt; largestModifiedDateBigint) then
						set largestModifiedDateBigint = r.lastModifiedDateBigint;
						set largestModifiedDateRow = nextResourceNum;
					end if;
					set nextResourceNum = nextResourceNum + 1;
				-- otherwse look for the the largest date and replace it
				else
					if (r.lastModifiedDateBigint &lt; largestModifiedDateBigint) then
						set resourceVect[largestModifiedDateRow] =  r;
						set largestModifiedDateBigint = null;				
						set i = 1;
						while (i &lt;= CARDINALITY(resourceVect)) do
							if (resourceVect[i] is not null) then
								if (largestModifiedDateBigint is null) then
									set largestModifiedDateBigint = resourceVect[i].lastModifiedDateBigint;
									set largestModifiedDateRow = i;
								else
									if (resourceVect[i].lastModifiedDateBigint &gt; largestModifiedDateBigint) then
										set largestModifiedDateBigint = resourceVect[i].lastModifiedDateBigint;
										set largestModifiedDateRow = i;
									end if;
								end if;
							end if;
							set i = i + 1;
						end while;
--						call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;3.modified Bigint=&apos;||emptyStr(r.lastModifiedDateBigint)||&apos;  date=&apos;||emptyStr(r.lastModifiedDate)||&apos;   path=&apos;||emptyStr(r.resPath)||&apos;  type=&apos;||r.resType);
--						call /shared/Utilities/log/logDebugMessage(moduleName,debug,&apos;3.Row=&apos;||emptyStr(largestModifiedDateRow)||&apos;   largestModifiedDateBigint=&apos;||emptyStr(largestModifiedDateBigint));
					end if;
				end if;
			end if;
		end for;

		set i = 1;
		while (i &lt;= CARDINALITY(resourceVect)) do
			if (resourceVect[i] is not null) then
				set resourceRec = resourceVect[i];
				insert into result values (resourceRec);
			end if;
			set i = i + 1;
		end while;
	end if;

	-- 3: Find all resources modified after the passed in resource date
	if (optionType = OPTION_MODIFIED_AFTER) then
		-- CIS must be at least 6.2.2 for modification date attributes to be present
		if (cisVersion &lt; &apos;6.2.2.00.00&apos;) then
			raise ex value &apos;Minimum release required for this capability is 6.2.2.  The current release is &apos;||cisVersion;
		end if;

		-- A resource date must be provided
		if (resourceDate is null) then
			raise ex value &apos;A resource date must be provided for option &apos;|| optionType||&apos;.&apos;;
		end if;
		call /shared/ASAssets/Utilities/&quot;time&quot;/DateUtils/TimestampToBigint(resourceDate, resourceDateBigint);
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceDate=[&apos;||emptyStr(resourceDate)||&apos;  resourceDateBigint=[&apos;||emptyStr(resourceDateBigint)||&apos;]&apos;);

		-- Insert the parent record if the modificaiton date is not null and greater than or equal to the resource date
		if (resourceRec.lastModifiedDateBigint is not null and resourceRec.lastModifiedDateBigint &gt;= resourceDateBigint) then
			insert into result values (resourceRec);
		end if;

		for r as select * from /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) do
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceDateBigint=[&apos;||emptyStr(resourceDateBigint)||&apos;  r.lastModifiedDateBigint=[&apos;||emptyStr(r.lastModifiedDateBigint)||&apos;]&apos;);
			if (r.lastModifiedDateBigint is not null and r.lastModifiedDateBigint &gt; 0  and resourceDateBigint is not null and r.lastModifiedDateBigint &gt;= resourceDateBigint) then
				insert into result values (r);
			end if;
		end for;
	end if;

	-- 4: Find all resources modifed before the passed in resource date
	if (optionType = OPTION_MODIFIED_BEFORE) then
		-- CIS must be at least 6.2.2 for modification date attributes to be present
		if (cisVersion &lt; &apos;6.2.2.00.00&apos;) then
			raise ex value &apos;Minimum release required for this capability is 6.2.2.  The current release is &apos;||cisVersion;
		end if;

		-- A resource date must be provided
		if (resourceDate is null) then
			raise ex value &apos;A resource date must be provided for option &apos;|| optionType||&apos;.&apos;;
		end if;
		call /shared/ASAssets/Utilities/&quot;time&quot;/DateUtils/TimestampToBigint(resourceDate, resourceDateBigint);
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceDate=[&apos;||emptyStr(resourceDate)||&apos;  resourceDateBigint=[&apos;||emptyStr(resourceDateBigint)||&apos;]&apos;);

		-- Insert the parent record if the modification date is not null and less than or equal to the resource date
		if (resourceRec.lastModifiedDateBigint is not null and resourceRec.lastModifiedDateBigint &lt;= resourceDateBigint) then
			insert into result values (resourceRec);
		end if;

		for r as select * from /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) do
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceDateBigint=[&apos;||emptyStr(resourceDateBigint)||&apos;  r.lastModifiedDateBigint=[&apos;||emptyStr(r.lastModifiedDateBigint)||&apos;]&apos;);
			if (r.lastModifiedDateBigint is not null and r.lastModifiedDateBigint &gt; 0  and resourceDateBigint is not null and r.lastModifiedDateBigint &lt;= resourceDateBigint) then
				insert into result values (r);
			end if;
		end for;
	end if;

	-- 5: Find all resources created after the passed in resource date
	if (optionType = OPTION_CREATED_AFTER) then
		-- CIS must be at least 6.2.1 for creation date attributes to be present
		if (cisVersion &lt; &apos;6.2.1.00.00&apos;) then
			raise ex value &apos;Minimum release required for this capability is 6.2.1.  The current release is &apos;||cisVersion;
		end if;

		-- A resource date must be provided
		if (resourceDate is null) then
			raise ex value &apos;A resource date must be provided for option &apos;|| optionType||&apos;.&apos;;
		end if;
		call /shared/ASAssets/Utilities/&quot;time&quot;/DateUtils/TimestampToBigint(resourceDate, resourceDateBigint);
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceDate=[&apos;||emptyStr(resourceDate)||&apos;  resourceDateBigint=[&apos;||emptyStr(resourceDateBigint)||&apos;]&apos;);

		-- Insert the parent record if the creation date is not null and greater than or equal to the resource date
		if (resourceRec.creationDateBigint is not null and resourceRec.creationDateBigint &gt;= resourceDateBigint) then
			insert into result values (resourceRec);
		end if;

		for r as select * from /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) do
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceDateBigint=[&apos;||emptyStr(resourceDateBigint)||&apos;  r.creationDateBigint=[&apos;||emptyStr(r.creationDateBigint)||&apos;]&apos;);
			if (r.creationDateBigint is not null and r.creationDateBigint &gt; 0  and resourceDateBigint is not null and r.creationDateBigint &gt;= resourceDateBigint) then
				insert into result values (r);
			end if;
		end for;
	end if;

	-- 6: Find all resources created before the passed in resource date
	if (optionType = OPTION_CREATED_BEFORE) then
		-- CIS must be at least 6.2.1 for creation date attributes to be present
		if (cisVersion &lt; &apos;6.2.1.00.00&apos;) then
			raise ex value &apos;Minimum release required for this capability is 6.2.1.  The current release is &apos;||cisVersion;
		end if;

		-- A resource date must be provided
		if (resourceDate is null) then
			raise ex value &apos;A resource date must be provided for option &apos;|| optionType||&apos;.&apos;;
		end if;
		call /shared/ASAssets/Utilities/&quot;time&quot;/DateUtils/TimestampToBigint(resourceDate, resourceDateBigint);
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceDate=[&apos;||emptyStr(resourceDate)||&apos;  resourceDateBigint=[&apos;||emptyStr(resourceDateBigint)||&apos;]&apos;);

		-- Insert the parent record if the creation date is not null and less than or equal to the resource date
		if (resourceRec.creationDateBigint is not null and resourceRec.creationDateBigint &lt;= resourceDateBigint) then
			insert into result values (resourceRec);
		end if;

		for r as select * from /shared/ASAssets/Utilities/repository/getResourceListRecursive(resourcePath, resourceType) do
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,debug,&apos;resourceDateBigint=[&apos;||emptyStr(resourceDateBigint)||&apos;  r.creationDateBigint=[&apos;||emptyStr(r.creationDateBigint)||&apos;]&apos;);
			if (r.creationDateBigint is not null and r.creationDateBigint &gt; 0 and resourceDateBigint is not null and r.creationDateBigint &lt;= resourceDateBigint) then
				insert into result values (r);
			end if;
		end for;
	end if;

END</attribute>
  <attribute name="creationDate" type="LONG">1375813277582</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="public_constants" type="MAP">
    <item>
      <key type="STRING">OPTION_CREATED_BEFORE</key>
      <value type="BYTE_ARRAY">EBkGAgAHAEkATgBUAEUARwBFAFIDEgAAAAEEBwAAAAAAAAAGBAYAAAAAAAAABv//</value>
    </item>
    <item>
      <key type="STRING">OPTION_MODIFIED_AFTER</key>
      <value type="BYTE_ARRAY">EBkGAgAHAEkATgBUAEUARwBFAFIDEgAAAAEEBwAAAAAAAAADBAYAAAAAAAAAA///</value>
    </item>
    <item>
      <key type="STRING">OPTION_N_LEAST_RECENT</key>
      <value type="BYTE_ARRAY">EBkGAgAHAEkATgBUAEUARwBFAFIDEgAAAAEEBwAAAAAAAAACBAYAAAAAAAAAAv//</value>
    </item>
    <item>
      <key type="STRING">OPTION_MODIFIED_BEFORE</key>
      <value type="BYTE_ARRAY">EBkGAgAHAEkATgBUAEUARwBFAFIDEgAAAAEEBwAAAAAAAAAEBAYAAAAAAAAABP//</value>
    </item>
    <item>
      <key type="STRING">OPTION_N_MOST_RECENT</key>
      <value type="BYTE_ARRAY">EBkGAgAHAEkATgBUAEUARwBFAFIDEgAAAAEEBwAAAAAAAAABBAYAAAAAAAAAAf//</value>
    </item>
    <item>
      <key type="STRING">OPTION_CREATED_AFTER</key>
      <value type="BYTE_ARRAY">EBkGAgAHAEkATgBUAEUARwBFAFIDEgAAAAEEBwAAAAAAAAAFBAYAAAAAAAAABf//</value>
    </item>
  </attribute>
  <attribute name="references" type="NULL"/>
</metadata>