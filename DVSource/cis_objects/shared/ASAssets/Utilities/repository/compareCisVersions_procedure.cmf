<?xml version="1.1" encoding="UTF-8"?>
<metadata name="compareCisVersions" path="/shared/ASAssets/Utilities/repository/compareCisVersions" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0" isFunction="true">
  <annotation>compareCisVersions

    This method compares two CIS version (baseline and current).  It converts the version string to an integer 
	and performs a comparison. The following is returned based on the comparison:
		-1 - if the current version is less than the baseline version.
		 0 - if the current version is equal to the baseline version.
		 1 - if the current version is greater than the baseline version.

	Input:
        baseCisVersion - Base CIS version used for comparison
            Values: e.g. 5.2.0.01.40

        currentCisVersion - Current CIS version.  The invoking program should call /Utilities/repository/getCisVersion()
            Values: e.g. 5.2.0.01.42
    Output:
        status	- 
		-1 - if the current version is less than the baseline version.
		 0 - if the current version is equal to the baseline version.
		 1 - if the current version is greater than the baseline version.

	Exception: throws an exception if either of the versions are null or blank
   
    Author:      Mike Tinius
    Date:        5/11/2012
    CSW Version: 5.2.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="baseCisVersion" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="currentCisVersion" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="status" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/isEmpty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="request" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="response" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/isEmpty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/isEmpty" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* compareCisVersions

    This method compares two CIS version (baseline and current).  It converts the version string to an integer 
	and performs a comparison. The following is returned based on the comparison:
		-1 - if the current version is less than the baseline version.
		 0 - if the current version is equal to the baseline version.
		 1 - if the current version is greater than the baseline version.

	Input:
        baseCisVersion - Base CIS version used for comparison
            Values: e.g. 5.2.0.01.40

        currentCisVersion - Current CIS version.  The invoking program should call /Utilities/repository/getCisVersion()
            Values: e.g. 5.2.0.01.42
    Output:
        status	- 
		-1 - if the current version is less than the baseline version.
		 0 - if the current version is equal to the baseline version.
		 1 - if the current version is greater than the baseline version.

	Exception: throws an exception if either of the versions are null or blank
   
    Author:      Mike Tinius
    Date:        5/11/2012
    CSW Version: 5.2.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE compareCisVersions(
	IN baseCisVersion		VARCHAR,
	IN currentCisVersion	VARCHAR,
	OUT status				INTEGER
)
BEGIN
	DECLARE moduleName				VARCHAR DEFAULT &apos;compareCisVersions&apos;;
	DECLARE debug					CHAR(1) DEFAULT &apos;N&apos;;
	DECLARE baseCisVersionInt		INTEGER;
	DECLARE currentCisVersionInt	INTEGER;
	DECLARE ex						EXCEPTION;

	-- continue if both versions are not null and not empty
	if (isEmpty(baseCisVersion) = 0 and isEmpty(currentCisVersion) = 0) then
		set baseCisVersionInt = REPLACE(baseCisVersion, &apos;.&apos;, &apos;&apos;);
		set currentCisVersionInt = REPLACE(currentCisVersion, &apos;.&apos;, &apos;&apos;);
		if (currentCisVersionInt &lt; baseCisVersionInt) then
			set status = -1;
		end if;
		if (currentCisVersionInt = baseCisVersionInt) then
			set status = 0;
		end if;
		if (currentCisVersionInt &gt; baseCisVersionInt) then
			set status = 1;
		end if;
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;baseCisVersionInt=&apos;||emptyStr(baseCisVersionInt)||&apos;  currentCisVersionInt=&apos;||emptyStr(currentCisVersionInt)||&apos;  status=&apos;||emptyStr(status));
	else
		raise ex value &apos;The base CIS version and/or current CIS version input parameters cannot be null or blank.&apos;;
	end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>