<?xml version="1.1" encoding="UTF-8"?>
<metadata name="rebindResourceImpl" path="/shared/ASAssets/Utilities/repository/rebind/rebindResourceImpl" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>rebindResource:

	-- CIS Repository Helper Procedure --
	This procedure provides the capability to rebind the resources inside of the requested resource.  
	For example, if a View points to a data source table, you may want to rebind to a different data source
	that has the same strucutre.  This may be useful when redeploying from Dev to Test to Production or
	simply rebinding to a different development instance of the database.

 
	Input:
		resourcePath - Full resource path which includes the path and the resource name  
			Values: e.g. /shared/Utilities/repository/examples/source/PRODUCT_VIEW

		resourceType - Type of CIS resource to be created
			Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE

		rebindVector - a vector that provides the rules for rebinding each of the associate resources
			within the given resource.
			VECTOR (rebindRow ROW (
				oldPath		TypeDefinitions.pathType,
				oldType		VARCHAR(255),
				newPath		TypeDefinitions.pathType,
				newType		VARCHAR(255)
			));
			Values: example:  rebind a data source resource from /shared/examples... to /shared/Utilities...
				(&apos;/shared/examples/ds_inventory/products&apos;, 				
				&apos;TABLE&apos;,
				&apos;/shared/Utilities/repository/examples/source/ds_inventory/products&apos;,	
				&apos;TABLE&apos; )


	Output:
		success	- true(1) or false(0)
			Values: 1 or 0

		createResponse - XML response representing what was created.
			Values: Create Response XML value

		faultResponse - null if succesful otherwise contains a fault resposne.
			Values: Fault Resposne XML value

	Exceptions:
        System.SOAPFaultException - thrown if there is a fault


	Modified Date:	Modified By:		CSW Version:	Reason:
	04/25/2013		Mike Tinius			5.2.0			create new


    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="rebindVector" direction="IN" nullable="true">
      <datatype name="rebindVector" referenceDefinitionSet="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" referenceType="rebindVector" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="rebindRow" type="TREE" refId="1">
            <element name="oldPath">
              <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
            </element>
            <element name="oldType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
            <element name="newPath">
              <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
            </element>
            <element name="newType">
              <datatype name="VARCHAR" type="STRING" maxLength="255"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="createResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/rebindResources" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="rebindResources" direction="IN">
        <datatype name="rebindResources" extendedName="{http://www.compositesw.com/services/system/admin/resource}rebindResources" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}rebindResources" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}rebindResources">
          <schemaDatatype>
            <datatype name="rebindResources" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="rebindResourcesRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="entries" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="pathTypePair" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                      <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="rebindRules" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="rebindRuleList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                  <element name="rebindRule" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="rebindRule" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                      <element name="oldPath" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="oldType" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="newPath" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="newType" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="rebindResourcesResponse" direction="OUT">
        <datatype name="rebindResourcesResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}rebindResourcesResponse">
          <schemaDatatype>
            <datatype name="rebindResourcesResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="rebindResourcesResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="7"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="8">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="9">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/rebind/rebindCheckPathExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="rebindVector" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="rebindRow" type="TREE" refId="2">
              <element name="oldPath">
                <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
              </element>
              <element name="oldType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="newPath">
                <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
              </element>
              <element name="newType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="outRebindVector" direction="OUT">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <reference refId="2"/>
          </itemDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/rebind/rebindReplaceText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fromFolder" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="toFolder" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/resourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceExists" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/resourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    rebindResource:

	-- CIS Repository Helper Procedure --
	This procedure provides the capability to rebind the resources inside of the requested resource.  
	For example, if a View points to a data source table, you may want to rebind to a different data source
	that has the same strucutre.  This may be useful when redeploying from Dev to Test to Production or
	simply rebinding to a different development instance of the database.

 
	Input:
		resourcePath - Full resource path which includes the path and the resource name  
			Values: e.g. /shared/Utilities/repository/examples/source/PRODUCT_VIEW

		resourceType - Type of CIS resource to be created
			Values: see &quot;TYPES / SUBTYPES&quot; listing below.  e.g. TABLE

		rebindVector - a vector that provides the rules for rebinding each of the associate resources
			within the given resource.
			VECTOR (rebindRow ROW (
				oldPath		TypeDefinitions.pathType,
				oldType		VARCHAR(255),
				newPath		TypeDefinitions.pathType,
				newType		VARCHAR(255)
			));
			Values: example:  rebind a data source resource from /shared/examples... to /shared/Utilities...
				(&apos;/shared/examples/ds_inventory/products&apos;, 				
				&apos;TABLE&apos;,
				&apos;/shared/Utilities/repository/examples/source/ds_inventory/products&apos;,	
				&apos;TABLE&apos; )


	Output:
		success	- true(1) or false(0)
			Values: 1 or 0

		createResponse - XML response representing what was created.
			Values: Create Response XML value

		faultResponse - null if succesful otherwise contains a fault resposne.
			Values: Fault Resposne XML value


	Exceptions:
        System.SOAPFaultException - thrown if there is a fault


	Modified Date:	Modified By:		CSW Version:	Reason:
	04/25/2013		Mike Tinius			5.2.0			create new


    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE rebindResourceImpl(
	IN resourcePath			/shared/ASAssets/Utilities/TypeDefinitions.pathType, 	-- full folder path of the resource requiring a rebind of it&apos;s sources.
	IN resourceType			VARCHAR,
	IN rebindVector 		/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.rebindVector,	-- newDataSource
	IN debug				CHAR(1),
	OUT success				BIT,
	OUT createResponse 		XML,
	OUT faultResponse		XML
)
BEGIN
    PATH /shared/ASAssets/Utilities/log;
    PATH /shared/ASAssets/Utilities/repository;

    DECLARE moduleName      VARCHAR DEFAULT &apos;repository/rebindResource&apos;;
	DECLARE createInput 	LONGVARCHAR;
	DECLARE rebindRules 	LONGVARCHAR DEFAULT &apos;&apos;;
	DECLARE i 				INTEGER DEFAULT 1;
	DECLARE rebindVector_	/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.rebindVector;
	DECLARE rebindFromFolder /shared/ASAssets/Utilities/TypeDefinitions.pathType;
	DECLARE rebindToFolder	/shared/ASAssets/Utilities/TypeDefinitions.pathType;
	DECLARE tempName		VARCHAR;

	set success = 0;
    if (resourceExists(resourcePath, resourceType) = 1) then

		call /shared/ASAssets/Utilities/repository/rebind/rebindCheckPathExists(rebindVector, debug, rebindVector_);

		if (rebindVector_ is not null and CARDINALITY(rebindVector_) &gt; 0) then

			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INVOKE rebindResources()&apos;);

			while (i &lt;= CARDINALITY(rebindVector)) do
				set rebindRules = rebindRules || &apos;
					&lt;resource:rebindRule&gt;
						&lt;resource:oldPath&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindVector[i].oldPath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:oldPath&gt;
						&lt;resource:oldType&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindVector[i].oldType, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:oldType&gt;
						&lt;resource:newPath&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindVector[i].newPath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:newPath&gt;
						&lt;resource:newType&gt;&apos;|| CAST(XMLTEXT(REPLACE(rebindVector[i].newType, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) ||&apos;&lt;/resource:newType&gt;
					&lt;/resource:rebindRule&gt;
					&apos;;
				set i = i + 1;
			end while;

			set createInput = 
			&apos;&lt;resource:rebindResources 
				xmlns:resource=&quot;http://www.compositesw.com/services/system/admin/resource&quot;
				xmlns:ns1=&quot;http://www.compositesw.com/services/system/util/common&quot;&gt;
				&lt;resource:entries&gt;
					&lt;resource:entry&gt;
						&lt;resource:path&gt;&apos; || CAST(XMLTEXT(REPLACE(resourcePath, &apos;&quot;&apos;, &apos;&apos;)) AS LONGVARCHAR) || &apos;&lt;/resource:path&gt;
						&lt;resource:type&gt;&apos; || resourceType || &apos;&lt;/resource:type&gt;
					&lt;/resource:entry&gt;
				&lt;/resource:entries&gt;
				&lt;resource:rebindRules&gt;
				&apos; || rebindRules || &apos;
				&lt;/resource:rebindRules&gt;
			&lt;/resource:rebindResources&gt;&apos;;

			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, createInput);
			Call /services/webservices/system/admin/resource/operations/rebindResources(createInput, createResponse, faultResponse);
			if (faultResponse is not null) then
				raise System.SOAPFaultException value CAST(faultResponse as LONGVARCHAR);
			end if;
			set success = 1;
		else

/*****************************
This section rebinds a TABLE or PROCEDURE resource when the original source for the rebind old folder cannot be found.
*******************************/
			set i = 1;
			while (i &lt;= CARDINALITY(rebindVector)) do
				set success = 1;

				-- Get the old folder path only from the actual path
				if (rebindVector[i].oldType = &apos;DATA_SOURCE&apos;) then
					set rebindFromFolder = rebindVector[i].oldPath;
				else
					call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(rebindVector[i].oldPath, &apos;E&apos;, tempName, rebindFromFolder);
				end if;

				-- Get the old folder path only from the actual path
				if (rebindVector[i].newType = &apos;DATA_SOURCE&apos;) then
					set rebindToFolder = rebindVector[i].newPath;
				else
					call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(rebindVector[i].newPath, &apos;E&apos;, tempName, rebindToFolder);
				end if;

				-- Invoke the procedure to replace the script text or data source path
				call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INVOKE rebindReplaceText()&apos;);
				call /shared/ASAssets/Utilities/repository/rebind/rebindReplaceText(resourcePath, resourceType, rebindFromFolder, rebindToFolder, debug, success);

				set i = i + 1;
			end while;
		end if;
	else
		set success = 0;
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;Resource does not exist.&apos;);
    end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1446754792505</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:5:Customized" type="STRING">datatype.changed;datatype.changed</attribute>
  <attribute name="p:6:Customized" type="STRING">datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">11/129</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
  </attribute>
</metadata>