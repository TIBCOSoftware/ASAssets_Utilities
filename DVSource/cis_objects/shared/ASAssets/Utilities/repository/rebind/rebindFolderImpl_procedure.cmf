<?xml version="1.1" encoding="UTF-8"?>
<metadata name="rebindFolderImpl" path="/shared/ASAssets/Utilities/repository/rebind/rebindFolderImpl" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>rebindFolderImpl:

	-- CIS Repository Helper Procedure --

	This procedure provides the capability to rebind all the resources in a folder.
	For example, if a View points to a data source table, you may want to rebind to a different data source
	that has the same strucutre.  This may be useful when redeploying from Dev to Test to Production or
	simply rebinding to a different development instance of the database.

 
	Input:
		startingResourceFolder - Full resource path to the starting folder to begin rebinding
			Values: e.g. /shared/Utilities/repository/examples

		rebindFromFolder - The source &quot;used&quot; resource folder to rebind from

		rebindToFolder - The target &quot;used&quot; resource folder to rebind to


	Output:
		success	- true(1) or false(0)
			Values: 1 or 0

		faultResponse - null if succesful otherwise contains a fault resposne.
			Values: Fault Resposne XML value


	Exceptions:
        System.SOAPFaultException - thrown if there is a fault


	Modified Date:	Modified By:		CSW Version:	Reason:
	04/24/2013		Mike Tinius			5.2.0			Created new

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="startingResourceFolder" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="rebindFromFolder" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="rebindToFolder" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/rebind/getRebindableResources" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fromFolder" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="toFolder" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="rebindVector" direction="OUT">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="rebindRow" type="TREE" refId="2">
              <element name="oldPath">
                <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
              </element>
              <element name="oldType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="newPath">
                <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
              </element>
              <element name="newType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/rebind/rebindReplaceText" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="fromFolder" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="toFolder" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/rebindResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="rebindVector" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="rebindRow" type="TREE" refId="2">
              <element name="oldPath">
                <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
              </element>
              <element name="oldType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="newPath">
                <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
              </element>
              <element name="newType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="3"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="3"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/resourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceExists" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/isEmpty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="request" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="response" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/isEmpty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/resourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
    rebindFolderImpl:

	-- CIS Repository Helper Procedure --

	This procedure provides the capability to rebind all the resources in a folder.
	For example, if a View points to a data source table, you may want to rebind to a different data source
	that has the same strucutre.  This may be useful when redeploying from Dev to Test to Production or
	simply rebinding to a different development instance of the database.

 
	Input:
		startingResourceFolder - Full resource path to the starting folder to begin rebinding
			Values: e.g. /shared/Utilities/repository/examples

		rebindFromFolder - The source &quot;used&quot; resource folder to rebind from

		rebindToFolder - The target &quot;used&quot; resource folder to rebind to


	Output:
		success	- true(1) or false(0)
			Values: 1 or 0

		faultResponse - null if succesful otherwise contains a fault resposne.
			Values: Fault Resposne XML value


	Exceptions:
        System.SOAPFaultException - thrown if there is a fault


	Modified Date:	Modified By:		CSW Version:	Reason:
	04/24/2013		Mike Tinius			5.2.0			Created new

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.


*/
PROCEDURE rebindFolderImpl(
	IN startingResourceFolder 	/shared/ASAssets/Utilities/TypeDefinitions.pathType,
	IN rebindFromFolder			/shared/ASAssets/Utilities/TypeDefinitions.pathType,
	IN rebindToFolder			/shared/ASAssets/Utilities/TypeDefinitions.pathType,
	IN debug					CHAR(1),
	OUT success					BIT,
	OUT faultResponse			XML
)
BEGIN
    DECLARE moduleName      VARCHAR DEFAULT &apos;repository/rebind/rebindFolderImpl&apos;;
	DECLARE resourcePath	/shared/ASAssets/Utilities/TypeDefinitions.pathType;
	DECLARE resourceType	VARCHAR;
	DECLARE subtype			VARCHAR;
	DECLARE rebindVector 	/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.rebindVector;
	DECLARE notEmpty		INTEGER DEFAULT 0;
	DECLARE eol				VARCHAR DEFAULT CHR(13)||CHR(10);
	DECLARE message			LONGVARCHAR;
	DECLARE createResponse 	XML;
	-- Place a folder separator &apos;/&apos; at the end of the fromFolder and toFolder to insure that no partial paths are replaced
	-- by accident.  Paths must be complete paths.
	DECLARE rebindFromFolder_	/shared/ASAssets/Utilities/TypeDefinitions.pathType DEFAULT REPLACE(rebindFromFolder||&apos;/&apos;,&apos;//&apos;,&apos;/&apos;);
	DECLARE rebindToFolder_		/shared/ASAssets/Utilities/TypeDefinitions.pathType DEFAULT REPLACE(rebindToFolder||&apos;/&apos;,&apos;//&apos;,&apos;/&apos;);
	DECLARE debug2			CHAR(1) DEFAULT /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug2;

	set success = 1;
	if (resourceExists(startingResourceFolder, &apos;CONTAINER&apos;) = 1) then
		FOR r AS 
			SELECT * FROM /shared/ASAssets/Utilities/repository/getResourceListRecursive(startingResourceFolder, &apos;CONTAINER&apos;)
		DO
			set resourcePath = r.respath;
			set resourceType = r.resType;
			set subtype = r.subtype;

			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, 
							eol||&apos;        resource path: &apos; || resourcePath  || 
							eol||&apos;        resource type: &apos; || resourceType || 
							eol||&apos;              subtype: &apos; || subtype || 
							eol||&apos;            from path: &apos; || rebindFromFolder_ ||
							eol||&apos;              to path: &apos; || rebindToFolder_
				);

			call /shared/ASAssets/Utilities/repository/rebind/getRebindableResources(resourcePath, resourceType, rebindFromFolder_, rebindToFolder_, debug2, rebindVector);
/*
	IN resourcePath		/shared/Utilities/TypeDefinitions.pathType, 
	IN resourceType		VARCHAR,
	IN fromFolder		/shared/Utilities/TypeDefinitions.pathType, 
	IN toFolder			/shared/Utilities/TypeDefinitions.pathType, 
	OUT rebindVector 	/shared/Utilities/repository/definitions/RepositoryDefinitions.rebindVector
*/
			if (rebindVector is not null and CARDINALITY(rebindVector) &gt; 0) then

				call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INVOKE rebindResource()&apos;);

				call /shared/ASAssets/Utilities/repository/rebindResource(resourcePath, resourceType, rebindVector, success, createResponse, faultResponse);

				if (isEmpty(faultResponse) = notEmpty or success = 0) then
					raise System.SOAPFaultException value cast(faultResponse as longvarchar);
				end if;
/*
	IN fullResourcePath		/shared/Utilities/TypeDefinitions.pathType, 	-- full folder path of the resource requiring a rebind of it&apos;s sources.
	IN resourceType			VARCHAR,
	IN rebindVector 		/shared/Utilities/repository/definitions/RepositoryDefinitions.rebindVector,	-- newDataSource
	OUT success			BIT,
	OUT createResponse 		XML,
	OUT faultResponse		XML
*/
			else
				call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;INVOKE rebindReplaceText()&apos;);
				call /shared/ASAssets/Utilities/repository/rebind/rebindReplaceText(resourcePath, resourceType, rebindFromFolder_, rebindToFolder_, debug2, success);
/*
	IN resourcePath		/shared/Utilities/TypeDefinitions.pathType, 
	IN resourceType		VARCHAR,
	IN subtype			VARCHAR,
	IN fromFolder		/shared/Utilities/TypeDefinitions.pathType, 
	IN toFolder			/shared/Utilities/TypeDefinitions.pathType
*/
			end if;
		END FOR;
	else
		set success = 0;
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;Resource does not exist.  Starting folder=[&apos;||emptyStr(startingResourceFolder)||&apos;]&apos;);
	end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1446754792505</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:5:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">12/109</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
  </attribute>
</metadata>