<?xml version="1.1" encoding="UTF-8"?>
<metadata name="removeAllFolders" path="/shared/ASAssets/Utilities/repository/removeAllFolders" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>removeAllFolders:
	-- CIS Repository Helper Procedure --
	This procedure is used to remove a folder and all of its contents.

	This may be useful to perform prior to importing a car file.
	The issue being solved is that importing a car file does not remove resources that were removed 
	from the source system.  To do a clean import, you first have to remove the base folder that you
	are importing.
 
	Input:
    		fullResourcePath - a comma separated list of fully qualified paths to a CIS folder.  
								It is assumed to be a folder as the resource type will be defaulted to &quot;CONTAINER&quot;.
			Values: e.g. /shared/folder1,/shared/folder2,/shared/folder with spaces
	Output:

	Exceptions:  Exception may be thrown.

	Author:      Mike Tinius
	Date:        10/6/2010
	CSW Version: 5.1.0

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="fullResourcePathList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="version" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceVersion" type="STRING" maxLength="255"/>
      </element>
      <element name="exists" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/destroyResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="destroyResource" direction="IN">
        <datatype name="destroyResource" extendedName="{http://www.compositesw.com/services/system/admin/resource}destroyResource" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}destroyResource" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}destroyResource">
          <schemaDatatype>
            <datatype name="destroyResource" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="destroyResourceRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="force" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="destroyResourceResponse" direction="OUT">
        <datatype name="destroyResourceResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}destroyResourceResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}destroyResourceResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}destroyResourceResponse">
          <schemaDatatype>
            <datatype name="destroyResourceResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="destroyResourceResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="3">
              <element name="destroyedAll" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="4">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/p_DelimitedStringToCursor" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inStr" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inDelimiter" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inIncludeDelimiter" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="outTokens" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="strToken">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* removeAllFolders:
	-- CIS Repository Helper Procedure --
	This procedure is used to remove a folder and all of its contents.

	This may be useful to perform prior to importing a car file.
	The issue being solved is that importing a car file does not remove resources that were removed 
	from the source system.  To do a clean import, you first have to remove the base folder that you
	are importing.
 
	Input:
    		fullResourcePath - a comma separated list of fully qualified paths to a CIS folder.  
								It is assumed to be a folder as the resource type will be defaulted to &quot;CONTAINER&quot;.
			Values: e.g. /shared/folder1,/shared/folder2,/shared/folder with spaces
	Output:

	Exceptions:  Exception may be thrown.

	Author:      Mike Tinius
	Date:        10/6/2010
	CSW Version: 5.1.0

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE removeAllFolders(
	IN debug 					CHAR(1),-- e.g. Y or N
	IN fullResourcePathList 	LONGVARCHAR
)
BEGIN
	DECLARE moduleName			VARCHAR(255) DEFAULT &apos;removeAllFolders&apos;;
	DECLARE error 				VARCHAR(1024);
	DECLARE request 			VARCHAR(4096);
	DECLARE response 			XML;
	DECLARE fault 				XML;
	DECLARE resourceType		VARCHAR;
	DECLARE delimiter			CHAR(1) DEFAULT &apos;,&apos;;
	DECLARE resourceExists		BOOLEAN;
	DECLARE ex					EXCEPTION;

    for curs as 
	select strToken from /shared/ASAssets/Utilities/string/p_DelimitedStringToCursor(REPLACE(fullResourcePathList,&apos;&quot;&apos;,&apos;&apos;), delimiter, 0) 
    do
--		call print(&apos;Path=&apos;||curs.strToken);
		if (POSITION(&apos;/services/databases&apos; IN curs.strToken)  &gt; 0) then
			set resourceType = &apos;DATA_SOURCE&apos;;
		else
			set resourceType = &apos;CONTAINER&apos;;
		end if;
--		call print(&apos;resourceType=&apos;||resourceType);
		call /lib/resource/ResourceExists(curs.strToken, resourceType, null, resourceExists);
--		call print(&apos;resourceExists=&apos;||resourceExists);
		if (resourceExists) then
       		set request = 
				&apos;&lt;ns1:destroyResource 
					xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/resource&quot; 
					xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; 
					xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
						&lt;ns1:path&gt;&apos; || CAST(XMLTEXT(curs.strToken) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:path&gt;
						&lt;ns1:type&gt;&apos; || CAST(XMLTEXT(resourceType) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:type&gt;
						&lt;ns1:force&gt;1&lt;/ns1:force&gt;
				&lt;/ns1:destroyResource&gt;&apos;;
			CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, request);
			set fault = null;
 			call /services/webservices/system/admin/resource/operations/destroyResource(request, response, fault);
			if (fault is not null) then
				raise ex value cast(fault as longvarchar);
			end if;
		end if;
     end for;

	EXCEPTION
	  ELSE
		CALL /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, CURRENT_EXCEPTION.TRACE);
		raise ex value CURRENT_EXCEPTION.TRACE;
END</attribute>
  <attribute name="creationDate" type="LONG">1369417729293</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>