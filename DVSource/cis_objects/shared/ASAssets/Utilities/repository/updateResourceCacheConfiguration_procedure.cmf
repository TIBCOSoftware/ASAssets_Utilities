<?xml version="1.1" encoding="UTF-8"?>
<metadata name="updateResourceCacheConfiguration" path="/shared/ASAssets/Utilities/repository/updateResourceCacheConfiguration" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>updateResourceCacheConfiguration:
    -- CIS Repository Helper Procedure --
    This procedure sets a resource&apos;s cache configuration. Other than &quot;inResourcePath&quot; and &quot;inResourceType&quot;, 
    any value can be set to NULL.

    NOTE: Only supports configuring resources with a single cursor or a set of scalar outputs.
          Use /services/webservices/system/admin/resource/operations/updateResourceCacheConfig()
          directly, otherwise.
 
    Input:
        inResourcePath - Full resource path which includes the path and the resource name  
            Values: e.g. /shared/Utilities/repository/examples/source/proc1

        inResourceType - Type of CIS resource to be created
            Values: see /lib/resource/ResourceDefs for constants beginning with RESOURCE_TYPE

        inConfigured - Indicates whether the resource has a cache configured or not.
            Values: &apos;true&apos;=cache configured, &apos;false&apos;=cache not configured

        inEnabled - Indicates enabled state of cache
            Values: &apos;true&apos;=cache enabled, &apos;false&apos;=cache disabled

        inStorageMode - Storage type used for the cache. 
            Values: May be either &quot;AUTOMATIC&quot;, &quot;DATA_SOURCE&quot;, &quot;DATA_SOURCE_OTPS&quot;

        inStorageDataSourcePath - If the mode is &quot;DATA_SOURCE&quot;, this identifies the path to the data source being used to store cache data.
            Values: Path to a cache configured data source

        inStorageTargets - The list of database tables used as storage targets.
            Values: A vector containing the list of target resources.

        inRefreshMode - How the cache should be refreshed.  
            Values: May be &quot;MANUAL&quot; or &quot;SCHEDULED&quot;.

        inScheduleMode - Scheduling mode
            Values: If &apos;inRefreshMode&quot; is &quot;SCHEDULED&quot;, this should always be &quot;INTERVAL&quot;.

        inStartTime - Start timestamp for the schedule
            Values: If &apos;inRefreshMode&quot; is &quot;SCHEDULED&quot;, A timestamp;

        inPeriod - The units of measure for the interval between cache refreshes
            Values: SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, or YEAR

        inCount - The number of inPeriod units in the interval between cache refreshes
            Values: Any positive integ

        inExpirationPeriod - The amount of time in milliseconds that the cache will be cleared after it is refreshed.  
            Values: If less than zero, the period will be set to zero.  If zero then the cache will never expire.  
                    If set to NULL, the enable setting will be left unaltered.

        inClearRule - Indicates when old cache data should be cleared.
            Values: One of &quot;NONE&quot;, &quot;ON_LOAD&quot;, or &quot;ON_FAILURE&quot;.  Normally old cache data is cleared on expiration and when 
                    a cache refresh successfully completes. In the latter case the old cache data is replaced by the new cached data.
                    If &quot;NONE&quot;, then the normal behavior will be used.  If &quot;ON_LOAD&quot;, in addition to the normal behavior 
                    the old cache data will be cleared when a refresh is started.  If &quot;ON_FAILURE&quot;, in addition to the 
                    normal behavior the old cache data will be cleared when a refresh fails.  If set to NULL, the
                    setting will be left unaltered.

        inIncremental* - Indicates whether the cache refresh is full or incremental
            Values: 1 (incremental) or 0 (full). Defaults to 0 if NULL.

        inStorageBucketMode* - Indicates storage mode for multi-table storage. Ignored if storage mode is not &apos;DATA_SOURCE_OTPS&apos;
            Values: May be &quot;AUTO_GEN&quot; or &quot;MANUAL&quot; for multi-table storage. NULL for single-table storage.

        inStorageBucketCatalog* - Indicates the catalog to use for auto-generated multi-table storage. Ignored
                                 if bucket mode isn&apos;t &quot;AUTO_GEN&quot;.
            Values: A valid catalog name in the cache target database.

        inStorageBucketSchema* - Indicates the catalog to use for auto-generated multi-table storage. Ignored
                                if bucket mode isn&apos;t &quot;AUTO_GEN&quot;.
            Values: A valid schema name in the cache target database.

        inStorageBucketPrefix* - The string to use as the base table name (CIS appends numeric suffixes starting with
                                0 to each storage target table name.) Ignored if bucket mode isn&apos;t &quot;AUTO_GEN&quot;.
            Values: Any legal table name.

        inStorageBucketNumBuckets* - The number of storage target tables to use (CIS then round robin&apos;s across
                                    each target table in turn. Ignored if bucket mode isn&apos;t &quot;AUTO_GEN&quot;.
            Values: Any positive integer

        inStorageDropCreateIdx* - Indicates whether or not to drop indexes before the refresh and recreate them afterwards.
            Values: 1 (true) or 0 (false)

        inFirstRefreshCallback* - With full cache refreshes, this is the procedure to run before the refresh.
                                 With incremental refreshes, this is the procedure that performs a full refresh.
            Values: The path to a procedure

        inSecondRefreshCallback* - With full cache refreshes, this is the procedure to run after the refresh.
                                 With incremental refreshes, this is the procedure that performs an incremental refresh.
            Values: The path to a procedure

        * These inputs are ignored if not running in CIS 6.2.1 or greater


    Output:
        success	- true(1) or false(0)

        createResponse - XML response representing what was created.
            Values: Create Response XML value

        faultResponse - null if succesful otherwise contains a fault resposne.
            Values: Fault Resposne XML value

    Exceptions:  none


	Modified Date:	Modified By:		CSW Version:	Reason:
	09/14/2010		Calvin Goodrich		5.1.0			Created new
    01/29/2013      Calvin Goodrich     6.2.1           Updated to support new caching features
    04/10/2013      Calvin Goodrich     6.2.6           Updated for new scheduled interval specification and added support for multiple storage targets
	09/05/2014		Mike Tinius			6.2.6			Fixed issue for configuring multi-table caching when inStorageMode=&apos;DATA_SOURCE_OTPS&apos;.  Added debug statements.
	10/20/2014		Mike Tinius			6.2.6			Fixed issue with mode.  When mode=INTERVAL use &lt;interval&gt;.  When mode=CALENDAR use &lt;period&gt; and &lt;count&gt;

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="inResourcePath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="inResourceType" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="inConfigured" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="inEnabled" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="inStorageMode" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inStorageDataSourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="inStorageTargets" direction="IN" nullable="true">
      <datatype name="inStorageTargets" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="StorageTargetType" type="TREE" refId="1">
            <element name="stName">
              <datatype name="ResourceName" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceName" type="STRING" maxLength="255"/>
            </element>
            <element name="stPath">
              <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
            </element>
            <element name="stType">
              <datatype name="ResourceType" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
            </element>
          </datatype>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="inRefreshMode" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inScheduleMode" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inStartTime" direction="IN" nullable="true">
      <datatype name="TIMESTAMP" type="DATETIME"/>
    </parameter>
    <parameter name="inPeriod" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="10"/>
    </parameter>
    <parameter name="inCount" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="inExpirationPeriod" direction="IN" nullable="true">
      <datatype name="BIGINT" type="INTEGER"/>
    </parameter>
    <parameter name="inClearRule" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inIncremental" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="inStorageBucketMode" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inStorageBucketCatalog" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
    <parameter name="inStorageBucketSchema" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
    <parameter name="inStorageBucketPrefix" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inStorageBucketNumBuckets" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="inStorageDropCreateIdx" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="inFirstRefreshCallback" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
    </parameter>
    <parameter name="inSecondRefreshCallback" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
    <parameter name="updateResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/resource" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/resource/operations/updateResourceCacheConfig" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="updateResourceCacheConfig" direction="IN">
        <datatype name="updateResourceCacheConfig" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateResourceCacheConfig" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateResourceCacheConfig" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateResourceCacheConfig">
          <schemaDatatype>
            <datatype name="updateResourceCacheConfig" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateResourceCacheConfigRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="detail" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="detailLevel" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="cacheConfig" namespace="http://www.compositesw.com/services/system/admin/resource">
                <datatype name="cacheConfig" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="allOrNothing" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="configured" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="enabled" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="incremental" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                  </element>
                  <element name="storage" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                      <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="storageMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="bucketMode" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="bucketModeType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="bucketProperties" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="bucketPropertiesType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="5">
                          <element name="bucketCatalog" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="bucketSchema" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="bucketPrefix" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="numBuckets" namespace="http://www.compositesw.com/services/system/admin/resource">
                            <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2207" maxValue="2147483647"/>
                          </element>
                        </datatype>
                      </element>
                      <element name="dropCreateIdx" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                      </element>
                      <element name="storageDataSourcePath" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="storageTargets" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="targetPathTypePairList" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="6">
                          <element name="entry" namespace="http://www.compositesw.com/services/system/admin/resource" maxOccurs="2147483647" minOccurs="0">
                            <datatype name="targetPathTypePair" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                              <element name="targetName" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="path" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                              </element>
                              <element name="type" namespace="http://www.compositesw.com/services/system/admin/resource">
                                <datatype name="resourceType" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                              </element>
                            </datatype>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                  <element name="refresh" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="8">
                      <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource">
                        <datatype name="refreshMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="schedule" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                        <datatype name="schedule" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="9">
                          <element name="mode" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="scheduleMode" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="startTime" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="dateTime" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="DATETIME"/>
                          </element>
                          <element name="fromTimeInADay" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="long" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="integer" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER"/>
                          </element>
                          <element name="endTimeInADay" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="long" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="integer" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER"/>
                          </element>
                          <element name="recurringDay" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2207" maxValue="2147483647"/>
                          </element>
                          <element name="interval" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2207" maxValue="2147483647"/>
                          </element>
                          <element name="period" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="calendarPeriod" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                          </element>
                          <element name="count" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="int" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="long" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="-2207" maxValue="2147483647"/>
                          </element>
                          <element name="isCluster" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                            <datatype name="boolean" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER" minValue="0" maxValue="1"/>
                          </element>
                        </datatype>
                      </element>
                    </datatype>
                  </element>
                  <element name="expirationPeriod" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="long" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="integer" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="INTEGER"/>
                  </element>
                  <element name="firstRefreshCallback" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="secondRefreshCallback" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="clearRule" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                    <datatype name="clearRule" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="updateResourceCacheConfigResponse" direction="OUT">
        <datatype name="updateResourceCacheConfigResponse" extendedName="{http://www.compositesw.com/services/system/admin/resource}updateResourceCacheConfigResponse" namespace="http://www.compositesw.com/services/system/admin/resource" referenceDefinitionSet="/services/webservices/system/admin/resource/operations/ResourceSchema" referenceType="{http://www.compositesw.com/services/system/admin/resource}updateResourceCacheConfigResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/resource}updateResourceCacheConfigResponse">
          <schemaDatatype>
            <datatype name="updateResourceCacheConfigResponse" namespace="http://www.compositesw.com/services/system/admin/resource" superTypeName="updateResourceCacheConfigResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/resource" subType="ELEMENT_DECL" type="TREE" refId="10">
              <element name="cacheConfig" namespace="http://www.compositesw.com/services/system/admin/resource" minOccurs="0">
                <reference refId="3"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="11">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="12">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/conversions/convertBoolean" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="request" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="response" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getCisVersion" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="15"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/TextUtils/RegexPosition" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="Input Text" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="Regular Expression" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="Occurrence" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/RegexPosition" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/convertBoolean" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/getCisVersion" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
updateResourceCacheConfiguration:
    -- CIS Repository Helper Procedure --
    This procedure sets a resource&apos;s cache configuration. Other than &quot;inResourcePath&quot; and &quot;inResourceType&quot;, 
    any value can be set to NULL.

    NOTE: Only supports configuring resources with a single cursor or a set of scalar outputs.
          Use /services/webservices/system/admin/resource/operations/updateResourceCacheConfig()
          directly, otherwise.
 
    Input:
        inResourcePath - Full resource path which includes the path and the resource name  
            Values: e.g. /shared/Utilities/repository/examples/source/proc1

        inResourceType - Type of CIS resource to be created
            Values: see /lib/resource/ResourceDefs for constants beginning with RESOURCE_TYPE

        inConfigured - Indicates whether the resource has a cache configured or not.
            Values: &apos;true&apos;=cache configured, &apos;false&apos;=cache not configured

        inEnabled - Indicates enabled state of cache
            Values: &apos;true&apos;=cache enabled, &apos;false&apos;=cache disabled

        inStorageMode - Storage type used for the cache. 
            Values: May be either &quot;AUTOMATIC&quot;, &quot;DATA_SOURCE&quot;, &quot;DATA_SOURCE_OTPS&quot;

        inStorageDataSourcePath - If the mode is &quot;DATA_SOURCE&quot;, this identifies the path to the data source being used to store cache data.
            Values: Path to a cache configured data source

        inStorageTargets - The list of database tables used as storage targets.
            Values: A vector containing the list of target resources.

        inRefreshMode - How the cache should be refreshed.  
            Values: May be &quot;MANUAL&quot; or &quot;SCHEDULED&quot;.

        inScheduleMode - Scheduling mode
            Values: If &apos;inRefreshMode&quot; is &quot;SCHEDULED&quot;, this should always be &quot;INTERVAL&quot;.

        inStartTime - Start timestamp for the schedule
            Values: If &apos;inRefreshMode&quot; is &quot;SCHEDULED&quot;, A timestamp;

        inPeriod - The units of measure for the interval between cache refreshes
            Values: SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, or YEAR

        inCount - The number of inPeriod units in the interval between cache refreshes
            Values: Any positive integ

        inExpirationPeriod - The amount of time in milliseconds that the cache will be cleared after it is refreshed.  
            Values: If less than zero, the period will be set to zero.  If zero then the cache will never expire.  
                    If set to NULL, the enable setting will be left unaltered.

        inClearRule - Indicates when old cache data should be cleared.
            Values: One of &quot;NONE&quot;, &quot;ON_LOAD&quot;, or &quot;ON_FAILURE&quot;.  Normally old cache data is cleared on expiration and when 
                    a cache refresh successfully completes. In the latter case the old cache data is replaced by the new cached data.
                    If &quot;NONE&quot;, then the normal behavior will be used.  If &quot;ON_LOAD&quot;, in addition to the normal behavior 
                    the old cache data will be cleared when a refresh is started.  If &quot;ON_FAILURE&quot;, in addition to the 
                    normal behavior the old cache data will be cleared when a refresh fails.  If set to NULL, the
                    setting will be left unaltered.

        inIncremental* - Indicates whether the cache refresh is full or incremental
            Values: 1 (incremental) or 0 (full). Defaults to 0 if NULL.

        inStorageBucketMode* - Indicates storage mode for multi-table storage. Ignored if storage mode is not &apos;DATA_SOURCE_OTPS&apos;
            Values: May be &quot;AUTO_GEN&quot; or &quot;MANUAL&quot; for multi-table storage. NULL for single-table storage.

        inStorageBucketCatalog* - Indicates the catalog to use for auto-generated multi-table storage. Ignored
                                 if bucket mode isn&apos;t &quot;AUTO_GEN&quot;.
            Values: A valid catalog name in the cache target database.

        inStorageBucketSchema* - Indicates the catalog to use for auto-generated multi-table storage. Ignored
                                if bucket mode isn&apos;t &quot;AUTO_GEN&quot;.
            Values: A valid schema name in the cache target database.

        inStorageBucketPrefix* - The string to use as the base table name (CIS appends numeric suffixes starting with
                                0 to each storage target table name.) Ignored if bucket mode isn&apos;t &quot;AUTO_GEN&quot;.
            Values: Any legal table name.

        inStorageBucketNumBuckets* - The number of storage target tables to use (CIS then round robin&apos;s across
                                    each target table in turn. Ignored if bucket mode isn&apos;t &quot;AUTO_GEN&quot;.
            Values: Any positive integer

        inStorageDropCreateIdx* - Indicates whether or not to drop indexes before the refresh and recreate them afterwards.
            Values: 1 (true) or 0 (false)

        inFirstRefreshCallback* - With full cache refreshes, this is the procedure to run before the refresh.
                                 With incremental refreshes, this is the procedure that performs a full refresh.
            Values: The path to a procedure

        inSecondRefreshCallback* - With full cache refreshes, this is the procedure to run after the refresh.
                                 With incremental refreshes, this is the procedure that performs an incremental refresh.
            Values: The path to a procedure

        * These inputs are ignored if not running in CIS 6.2.1 or greater


    Output:
        success	- true(1) or false(0)

        createResponse - XML response representing what was created.
            Values: Create Response XML value

        faultResponse - null if succesful otherwise contains a fault resposne.
            Values: Fault Resposne XML value

    Exceptions:  none


	Modified Date:	Modified By:		CSW Version:	Reason:
	09/14/2010		Calvin Goodrich		5.1.0			Created new
    01/29/2013      Calvin Goodrich     6.2.1           Updated to support new caching features
    04/10/2013      Calvin Goodrich     6.2.6           Updated for new scheduled interval specification and added support for multiple storage targets
	09/05/2014		Mike Tinius			6.2.6			Fixed issue for configuring multi-table caching when inStorageMode=&apos;DATA_SOURCE_OTPS&apos;.  Added debug statements.
	10/20/2014		Mike Tinius			6.2.6			Fixed issue with mode.  When mode=INTERVAL use &lt;interval&gt;.  When mode=CALENDAR use &lt;period&gt; and &lt;count&gt;

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE updateResourceCacheConfiguration(
    IN inResourcePath            /lib/resource/ResourceDefs.ResourcePath, 
    IN inResourceType            /lib/resource/ResourceDefs.ResourcePath, 
    IN inConfigured              BIT, 
    IN inEnabled                 BIT, 
    IN inStorageMode             VARCHAR(255), 
    IN inStorageDataSourcePath   VARCHAR(4096), 
    IN inStorageTargets          VECTOR (StorageTargetType), 
    IN inRefreshMode             VARCHAR(255), 
    IN inScheduleMode            VARCHAR(255), 
    IN inStartTime               TIMESTAMP, 
    IN inPeriod                  VARCHAR(10),
    IN inCount                   INTEGER, 
    IN inExpirationPeriod        BIGINT, 
    IN inClearRule               VARCHAR(255), 
    IN inIncremental             BIT, 
    IN inStorageBucketMode       VARCHAR(255), 
    IN inStorageBucketCatalog    VARCHAR(255), 
    IN inStorageBucketSchema     VARCHAR(255), 
    IN inStorageBucketPrefix     VARCHAR(255), 
    IN inStorageBucketNumBuckets INTEGER, 
    IN inStorageDropCreateIdx    BIT, 
    IN inFirstRefreshCallback    VARCHAR(32768), 
    in inSecondRefreshCallback   VARCHAR(32768),
    OUT success		             BIT, -- true(1), false(0)
    OUT updateResponse 	         XML,
    OUT faultResponse	         XML
)
BEGIN
    PATH /shared/ASAssets/Utilities/log;
    PATH /shared/ASAssets/Utilities/repository;
    PATH /lib/resource;
	DECLARE debug  CHAR(1) DEFAULT /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug;
    DECLARE PUBLIC TYPE StorageTargetType ROW (
        stName ResourceDefs.ResourceName, 
        stPath ResourceDefs.ResourcePath, 
        stType ResourceDefs.ResourceType
    );

    DECLARE PROC_NAME  CONSTANT VARCHAR DEFAULT &apos;repository/updateResourceCacheConfiguration&apos;;

    DECLARE is621 BOOLEAN DEFAULT FALSE;
    DECLARE requestXML System.Text;
    DECLARE i INTEGER;
	DECLARE inStorageTargetsDebug LONGVARCHAR DEFAULT &apos;&apos;;

    SET success = 1;

    -- see if this is 6.2.1 or greater for new caching features support
    --
    IF (RegexPosition(getCisVersion(), &apos;^(?:6\.2\.[1-9]|[7-9]|[1-9][0-9])&apos;, 1) = 1) THEN
       SET is621 = TRUE;
    END IF;

	IF (UPPER(debug) = &apos;Y&apos; OR UPPER(debug) = &apos;T&apos;) THEN
		SET i = 1;
		SET inStorageTargetsDebug = inStorageTargetsDebug || &apos;VECTOR[&apos;||CHR(10);
		WHILE (i &lt;= CARDINALITY(inStorageTargets)) DO
			IF (i &gt; 1) THEN
				SET inStorageTargetsDebug = inStorageTargetsDebug || &apos;,&apos;;
			END IF;
			SET inStorageTargetsDebug = inStorageTargetsDebug || &apos;(&apos;;
			SET inStorageTargetsDebug = inStorageTargetsDebug || inStorageTargets[i].stName ||&apos;, &apos;;
			SET inStorageTargetsDebug = inStorageTargetsDebug || inStorageTargets[i].stPath ||&apos;, &apos;;
			SET inStorageTargetsDebug = inStorageTargetsDebug || inStorageTargets[i].stType;
			SET inStorageTargetsDebug = inStorageTargetsDebug || &apos;)&apos; ||CHR(10);
			SET i = i + 1;
		END WHILE;
		SET inStorageTargetsDebug = inStorageTargetsDebug || &apos;]&apos;;
	END IF;
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;is621=&apos;||emptyStr(is621));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inResourcePath=&apos;||emptyStr(inResourcePath));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inResourceType=&apos;||emptyStr(inResourceType));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inConfigured=&apos;||emptyStr(inConfigured));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inEnabled=&apos;||emptyStr(inEnabled));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageMode=&apos;||emptyStr(inStorageMode));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageDataSourcePath=&apos;||emptyStr(inStorageDataSourcePath));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageTargets=&apos;||emptyStr(inStorageTargetsDebug));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inRefreshMode=&apos;||emptyStr(inRefreshMode));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inScheduleMode=&apos;||emptyStr(inScheduleMode));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStartTime=&apos;||emptyStr(inStartTime));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inPeriod=&apos;||emptyStr(inPeriod));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inCount=&apos;||emptyStr(inCount));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inExpirationPeriod=&apos;||emptyStr(inExpirationPeriod));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inClearRule=&apos;||emptyStr(inClearRule));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inIncremental=&apos;||emptyStr(inIncremental));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageBucketMode=&apos;||emptyStr(inStorageBucketMode));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageBucketCatalog=&apos;||emptyStr(inStorageBucketCatalog));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageBucketSchema=&apos;||emptyStr(inStorageBucketSchema));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageBucketPrefix=&apos;||emptyStr(inStorageBucketPrefix));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageBucketNumBuckets=&apos;||emptyStr(inStorageBucketNumBuckets));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inStorageDropCreateIdx=&apos;||emptyStr(inStorageDropCreateIdx));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inFirstRefreshCallback=&apos;||emptyStr(inFirstRefreshCallback));
    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, &apos;inSecondRefreshCallback=&apos;||emptyStr(inSecondRefreshCallback));

    SET requestXML = 
&apos;&lt;ns1:updateResourceCacheConfig xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/resource&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
    &lt;ns1:path&gt;&apos; || CAST(XMLTEXT(inResourcePath) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:path&gt;
    &lt;ns1:type&gt;&apos; || CAST(XMLTEXT(inResourceType) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:type&gt;
    &lt;ns1:detail&gt;NONE&lt;/ns1:detail&gt;
    &lt;ns1:cacheConfig&gt;&apos;;

    IF (inConfigured IS NOT NULL) THEN
        SET requestXML =  requestXML || &apos;
        &lt;ns1:configured&gt;&apos; || CAST(XMLTEXT(inConfigured) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:configured&gt;&apos;;
    END IF;

    IF (inEnabled IS NOT NULL) THEN
        SET requestXML = requestXML || &apos;
        &lt;ns1:enabled&gt;&apos; || CAST(XMLTEXT(inEnabled) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:enabled&gt;&apos;;
    END IF;

    IF (is621 AND inIncremental IS NOT NULL) THEN
        SET requestXML = requestXML || &apos;
        &lt;ns1:incremental&gt;&apos; || CAST(XMLTEXT(inIncremental) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:incremental&gt;&apos;;
    END IF;

    IF (inStorageMode IS NOT NULL OR 
        inStorageDataSourcePath IS NOT NULL OR
        (inStorageMode = &apos;DATA_SOURCE_OTPS&apos; AND inStorageBucketMode IS NOT NULL)) THEN

        SET requestXML = requestXML || &apos;
        &lt;ns1:storage&gt;&apos;;

        IF (inStorageMode IS NOT NULL) THEN
            SET requestXML = requestXML || &apos;
            &lt;ns1:mode&gt;&apos; || CAST(XMLTEXT(inStorageMode) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:mode&gt;&apos;;
        END IF;

        IF (is621 AND inStorageMode = &apos;DATA_SOURCE_OTPS&apos; AND inStorageBucketMode IS NOT NULL) THEN
            SET requestXML = requestXML || &apos;
            &lt;ns1:bucketMode&gt;&apos; || CAST(XMLTEXT(inStorageBucketMode) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:bucketMode&gt;&apos;;

            IF (inStorageBucketCatalog IS NOT NULL OR
                inStorageBucketSchema IS NOT NULL OR
                inStorageBucketPrefix IS NOT NULL OR
                inStorageBucketNumBuckets IS NOT NULL) THEN

            	SET requestXML = requestXML || &apos;
            &lt;ns1:bucketProperties&gt;&apos;;

                IF (inStorageBucketCatalog IS NOT NULL) THEN
                    SET requestXML = requestXML || &apos;
                &lt;ns1:bucketCatalog&gt;&apos; || CAST(XMLTEXT(inStorageBucketCatalog) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:bucketCatalog&gt;&apos;;
                END IF;

                IF (inStorageBucketSchema IS NOT NULL) THEN
                    SET requestXML = requestXML || &apos;
                &lt;ns1:bucketSchema&gt;&apos; || CAST(XMLTEXT(inStorageBucketSchema) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:bucketSchema&gt;&apos;;
                END IF;

                -- these two fields are required if the bucketProperties element is used.
                --
                SET requestXML = requestXML || &apos;
                &lt;ns1:bucketPrefix&gt;&apos; || CAST(XMLTEXT(COALESCE(inStorageBucketPrefix, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:bucketPrefix&gt;
                &lt;ns1:numBuckets&gt;&apos; || CAST(XMLTEXT(COALESCE(inStorageBucketNumBuckets, &apos;&apos;)) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:numBuckets&gt;
            &lt;/ns1:bucketProperties&gt;&apos;;
            END IF;

        END IF;

         IF (is621 AND inStorageDropCreateIdx IS NOT NULL) THEN
            SET requestXML = requestXML || &apos;
            &lt;ns1:dropCreateIdx&gt;&apos; || CAST(XMLTEXT(convertBoolean(inStorageDropCreateIdx)) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:dropCreateIdx&gt;&apos;;
        END IF;

       IF (inStorageMode = &apos;DATA_SOURCE&apos; OR inStorageMode = &apos;DATA_SOURCE_OTPS&apos;) THEN
            SET requestXML = requestXML || &apos;
            &lt;ns1:storageDataSourcePath&gt;&apos; || CAST(XMLTEXT(inStorageDataSourcePath) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:storageDataSourcePath&gt;&apos;;
        END IF;

        IF (inStorageTargets IS NOT NULL AND 
            CARDINALITY(inStorageTargets) &gt; 0) THEN
            SET requestXML = requestXML || &apos;
            &lt;ns1:storageTargets&gt;
&apos;;
            SET i = 1;
            WHILE (i &lt;= CARDINALITY(inStorageTargets)) DO
                IF (inStorageTargets[i].stName IS NOT NULL AND 
                    inStorageTargets[i].stPath IS NOT NULL AND
                    inStorageTargets[i].stType IS NOT NULL
                ) THEN
	                SET requestXML = requestXML || &apos;
                &lt;ns1:entry&gt;
                    &lt;ns1:targetName&gt;&apos; || CAST(XMLTEXT(inStorageTargets[i].stName) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:targetName&gt;
                    &lt;ns1:path&gt;&apos; || CAST(XMLTEXT(inStorageTargets[i].stPath) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:path&gt;
                    &lt;ns1:type&gt;&apos; || CAST(XMLTEXT(inStorageTargets[i].stType) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:type&gt;
                &lt;/ns1:entry&gt;
&apos;;
                END IF;
                SET i = i + 1;
            END WHILE;

            SET requestXML = requestXML || &apos;
            &lt;/ns1:storageTargets&gt;&apos;;
        END IF;

        SET requestXML = requestXML || &apos;
        &lt;/ns1:storage&gt;&apos;;
    END IF;

    IF (inRefreshMode IS NOT NULL OR
        inScheduleMode IS NOT NULL OR
        inStartTime IS NOT NULL OR
        inPeriod IS NOT NULL OR
        inCount IS NOT NULL) THEN

        SET requestXML = requestXML || &apos;
        &lt;ns1:refresh&gt;&apos;;

        IF (inRefreshMode IS NOT NULL) THEN
            SET requestXML = requestXML || &apos;
            &lt;ns1:mode&gt;&apos; || CAST(XMLTEXT(inRefreshMode) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:mode&gt;&apos;;
        END IF;

        IF (inScheduleMode IS NOT NULL OR
            inStartTime IS NOT NULL OR
            inPeriod IS NOT NULL OR
            inCount IS NOT NULL) THEN

            SET requestXML = requestXML || &apos;
            &lt;ns1:schedule&gt;&apos;;

            IF (inScheduleMode IS NOT NULL) THEN
                SET requestXML = requestXML || &apos;
                &lt;ns1:mode&gt;&apos; || CAST(XMLTEXT(inScheduleMode) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:mode&gt;&apos;;
            END IF;

            IF (inStartTime IS NOT NULL) THEN
                SET requestXML = requestXML || &apos;
                &lt;ns1:startTime&gt;&apos; || CAST(XMLTEXT(inStartTime) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:startTime&gt;&apos;;
            END IF;

            IF (inPeriod IS NOT NULL) THEN
                SET requestXML = requestXML || &apos;
                &lt;ns1:period&gt;&apos; || CAST(XMLTEXT(inPeriod) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:period&gt;&apos;;
            END IF;

			IF (inScheduleMode = &apos;INTERVAL&apos; AND inCount IS NOT NULL) THEN
                SET requestXML = requestXML || &apos;
                &lt;ns1:interval&gt;&apos; || CAST(XMLTEXT(inCount) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:interval&gt;&apos;;
            ELSEIF (inScheduleMode = &apos;CALENDAR&apos; AND inCount IS NOT NULL) THEN
                SET requestXML = requestXML || &apos;
                &lt;ns1:count&gt;&apos; || CAST(XMLTEXT(inCount) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:count&gt;&apos;;
            END IF;

            SET requestXML = requestXML || &apos;
            &lt;/ns1:schedule&gt;&apos;;
        END IF;

        SET requestXML = requestXML || &apos;
        &lt;/ns1:refresh&gt;&apos;;

        IF (inExpirationPeriod IS NOT NULL) THEN
            SET requestXML = requestXML || &apos;
        &lt;ns1:expirationPeriod&gt;&apos; || CAST(XMLTEXT(inExpirationPeriod) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:expirationPeriod&gt;&apos;;
        END IF;

        IF (is621 AND inFirstRefreshCallback IS NOT NULL) THEN
            SET requestXML = requestXML || &apos;
        &lt;ns1:firstRefreshCallback&gt;&apos; || CAST(XMLTEXT(inFirstRefreshCallback) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:firstRefreshCallback&gt;&apos;;
        END IF;

        IF (is621 AND inSecondRefreshCallback IS NOT NULL) THEN
            SET requestXML = requestXML || &apos;
        &lt;ns1:secondRefreshCallback&gt;&apos; || CAST(XMLTEXT(inSecondRefreshCallback) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:secondRefreshCallback&gt;&apos;;
        END IF;

        IF (inClearRule IS NOT NULL) THEN
            SET requestXML = requestXML || &apos;
        &lt;ns1:clearRule&gt;&apos; || CAST(XMLTEXT(inClearRule) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:clearRule&gt;&apos;;
        END IF;

    END IF;

    SET requestXML = requestXML || &apos;
    &lt;/ns1:cacheConfig&gt;
&lt;/ns1:updateResourceCacheConfig&gt;&apos;;

    CALL /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, debug, requestXML);
    CALL /services/webservices/system/admin/resource/operations/updateResourceCacheConfig(requestXML, updateResponse, faultResponse);

    IF (faultResponse IS NOT NULL) THEN
        SET success = 0;
    END IF;
END</attribute>
  <attribute name="creationDate" type="LONG">1358189884226</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1446754792505</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:16:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="p:17:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="p:23:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="p:24:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:25:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:6:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="public_types" type="MAP">
    <item>
      <key type="STRING">StorageTargetType</key>
      <value type="BYTE_ARRAY">EB8GAgARAFMAdABvAHIAYQBnAGUAVABhAHIAZwBlAHQAVAB5AHAAZQYpAEYALwBzAGgAYQByAGUA
ZAAvAEEAUwBBAHMAcwBlAHQAcwAvAFUAdABpAGwAaQB0AGkAZQBzAC8AcgBlAHAAbwBzAGkAdABv
AHIAeQAvAHUAcABkAGEAdABlAFIAZQBzAG8AdQByAGMAZQBDAGEAYwBoAGUAQwBvAG4AZgBpAGcA
dQByAGEAdABpAG8AbgYqABEAUwB0AG8AcgBhAGcAZQBUAGEAcgBnAGUAdABUAHkAcABlAxIAAAAB
AxIAAAABARMBCRQAAAADECEGFQAGAHMAdABOAGEAbQBlAy8AAAABAxYAAAAAAxoAAAABAxsAAAAB
AyD/////AyIAAAAACBkQGwYCAAwAUgBlAHMAbwB1AHIAYwBlAE4AYQBtAGUGKQAaAC8AbABpAGIA
LwByAGUAcwBvAHUAcgBjAGUALwBSAGUAcwBvAHUAcgBjAGUARABlAGYAcwYqAAwAUgBlAHMAbwB1
AHIAYwBlAE4AYQBtAGUDEgAAAAIEBAAAAAAAAAD/ARMB/////xAhBhUABgBzAHQAUABhAHQAaAMv
AAAAAQMWAAAAAAMaAAAAAQMbAAAAAQMg/////wMiAAAAAAgZEBsGAgAMAFIAZQBzAG8AdQByAGMA
ZQBQAGEAdABoBikAGgAvAGwAaQBiAC8AcgBlAHMAbwB1AHIAYwBlAC8AUgBlAHMAbwB1AHIAYwBl
AEQAZQBmAHMGKgAMAFIAZQBzAG8AdQByAGMAZQBQAGEAdABoAxIAAAADBAQAAAAAAAAQAAETAf//
//8QIQYVAAYAcwB0AFQAeQBwAGUDLwAAAAEDFgAAAAADGgAAAAEDGwAAAAEDIP////8DIgAAAAAI
GRAbBgIADABSAGUAcwBvAHUAcgBjAGUAVAB5AHAAZQYpABoALwBsAGkAYgAvAHIAZQBzAG8AdQBy
AGMAZQAvAFIAZQBzAG8AdQByAGMAZQBEAGUAZgBzBioADABSAGUAcwBvAHUAcgBjAGUAVAB5AHAA
ZQMSAAAABAQEAAAAAAAAACgBEwH///////8=</value>
    </item>
  </attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">24/173</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">16/165</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">16/166</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
    <item>
      <key type="STRING">16/167</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>resource</item>
        <item>ResourceDefs</item>
      </value>
    </item>
  </attribute>
</metadata>