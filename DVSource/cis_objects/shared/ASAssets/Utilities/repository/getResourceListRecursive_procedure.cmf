<?xml version="1.1" encoding="UTF-8"?>
<metadata name="getResourceListRecursive" path="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>getResourceListRecursive:
	-- CIS Repository Helper Procedure --
	Return a list of resources, resource path, type and subtype for a given folder path.  The input to this is a starting
	folder and not an actual resource.  Recursively walk down the tree to identify the list of resources.
	Return all resources including folders (containers) and non-folder resources.
 
	Input:
   		resourcePath - CIS source folder path to begin deriving a list of resources
			Values: e.g. /shared/Utilities [this folder]
	Output:
		resourceTreeType - Cursor result set
			PIPE (
				name					VARCHAR(255),				name of the CIS resource
				resPath					TypeDefinitions.pathType,	full path of the CIS resource
				resType					VARCHAR(255),				resource type
				subType					VARCHAR(255),				resource sub type
				creationDate			TIMESTAMP,
				creationDateBigint		BIGINT,
				creatorUserDomain		VARCHAR(255),
				creatorUserName			VARCHAR(255),
				lastModifiedDate		TIMESTAMP,
				lastModifiedDateBigint	BIGINT,
				lastModifiedUserDomain	VARCHAR(255),
				lastModifiedUserName	VARCHAR(255)
			)

	Exceptions:
		Error:      Maximum Request Depth(30) exceeded.  Check request structure for unbounded recursion.  
		Resoution:  Go to Administration, Configuration, Composite Server, Configuration, Transactions and set &quot;Maximum Request Depth&quot; to a higher number.

	Modified Date:	Modified By:		CSW Version:	Reason:
	08/02/2010		Mike Tinius			5.1.0			Created new
	10/25/2012		Calvin Goodrich		5.2.0			Updated to recurse into data source structures.
	08/01/2013		Mike Tinius			6.1.0			Updated to return creation and modification attributes
	08/27/2013		Mike Tinius			6.1.0			B.P. 7.3: updated with a BEGIN INDEPENDENT TRANSACTION block as random runtime errors were being thrown during code generation.

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="ResourcePath" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="ResourceType" referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
    </parameter>
    <parameter name="resourceTreeList" direction="OUT" nullable="true">
      <datatype name="resourceTreeType" type="TABLE" refId="1">
        <element name="name">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="resPath">
          <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
        </element>
        <element name="resType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="subType">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="creationDate">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="creationDateBigint">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="creatorUserDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="creatorUserName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="lastModifiedDate">
          <datatype name="TIMESTAMP" type="DATETIME"/>
        </element>
        <element name="lastModifiedDateBigint">
          <datatype name="BIGINT" type="INTEGER"/>
        </element>
        <element name="lastModifiedUserDomain">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
        <element name="lastModifiedUserName">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/resource/ResourceDefs" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListChildren" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getResourceListRecursive" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creationDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="creationDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="creatorUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="creatorUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedDate">
            <datatype type="DATETIME"/>
          </element>
          <element name="lastModifiedDateBigint">
            <datatype type="INTEGER"/>
          </element>
          <element name="lastModifiedUserDomain">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="lastModifiedUserName">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* getResourceListRecursive:
	-- CIS Repository Helper Procedure --
	Return a list of resources, resource path, type and subtype for a given folder path.  The input to this is a starting
	folder and not an actual resource.  Recursively walk down the tree to identify the list of resources.
	Return all resources including folders (containers) and non-folder resources.
 
	Input:
   		resourcePath - CIS source folder path to begin deriving a list of resources
			Values: e.g. /shared/Utilities [this folder]
	Output:
		resourceTreeType - Cursor result set
			PIPE (
				name					VARCHAR(255),				name of the CIS resource
				resPath					TypeDefinitions.pathType,	full path of the CIS resource
				resType					VARCHAR(255),				resource type
				subType					VARCHAR(255),				resource sub type
				creationDate			TIMESTAMP,
				creationDateBigint		BIGINT,
				creatorUserDomain		VARCHAR(255),
				creatorUserName			VARCHAR(255),
				lastModifiedDate		TIMESTAMP,
				lastModifiedDateBigint	BIGINT,
				lastModifiedUserDomain	VARCHAR(255),
				lastModifiedUserName	VARCHAR(255)
			)

	Exceptions:
		Error:      Maximum Request Depth(30) exceeded.  Check request structure for unbounded recursion.  
		Resoution:  Go to Administration, Configuration, Composite Server, Configuration, Transactions and set &quot;Maximum Request Depth&quot; to a higher number.

	Modified Date:	Modified By:		CSW Version:	Reason:
	08/02/2010		Mike Tinius			5.1.0			Created new
	10/25/2012		Calvin Goodrich		5.2.0			Updated to recurse into data source structures.
	08/01/2013		Mike Tinius			6.1.0			Updated to return creation and modification attributes
	08/27/2013		Mike Tinius			6.1.0			B.P. 7.3: updated with a BEGIN INDEPENDENT TRANSACTION block as random runtime errors were being thrown during code generation.
	10/23/2014		Calvin Goodrich		6.2.6			Updated to call getResourceListChildren() to eliminate duplicate code.

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/ 
PROCEDURE getResourceListRecursive(
  	IN resourcePath 		/lib/resource/ResourceDefs.ResourcePath, 
 	IN resourceType 		/lib/resource/ResourceDefs.ResourceType, 
	OUT resourceTreeList 	PIPE /shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive.resourceTreeType
)
BEGIN
	DECLARE parentTreeCursor        CURSOR /shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive.resourceTreeType; --parentTreeType;
	DECLARE childLeafCursor 		CURSOR /shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitionsRecursive.resourceTreeType;
	DECLARE	creationDate			TIMESTAMP;
	DECLARE	creationDateBigint		BIGINT;
	DECLARE	creatorUserDomain		VARCHAR(255);
	DECLARE	creatorUserName			VARCHAR(255);
	DECLARE	lastModifiedDate		TIMESTAMP;
	DECLARE	lastModifiedDateBigint	BIGINT;
	DECLARE lastModifiedUserDomain	VARCHAR(255);
	DECLARE	lastModifiedUserName	VARCHAR(255);
	DECLARE ex						EXCEPTION;

	BEGIN INDEPENDENT TRANSACTION

    	OPEN parentTreeCursor FOR
        SELECT * FROM /shared/ASAssets/Utilities/repository/getResourceListChildren (resourcePath, resourceType);
    
    	FOR parent AS parentTreeCursor DO
    		INSERT INTO resourceTreeList VALUES (parent.name, parent.resPath, parent.resType, parent.subType, parent.creationDate, parent.creationDateBigint, parent.creatorUserDomain, parent.creatorUserName, parent.lastModifiedDate, parent.lastModifiedDateBigint, parent.lastModifiedUserDomain, parent.lastModifiedUserName);

        	-- Begin recursive calls
        	-- This methodology allows us to catch all DATA_SOURCES and all CONTAINERS no matter what the subtype is
        	IF (parent.subType = &apos;NONE&apos; OR POSITION(&apos;_DATA_SOURCE&apos; IN parent.subType) &gt; 0 OR POSITION(&apos;_CONTAINER&apos; IN parent.subType) &gt; 0) THEN

/* If an error is encountered in the &apos;TypeDefinitionsRecursive&apos; file and you get a java memory error when trying to save that file,
 it is because CIS cannot save the file due to the recursive nature of this procedure.  Temporarilly, comment the section
 of code below.  Save the &apos;TypeDefinitionsRecursive&apos; file.  Then uncomment and save this file. */
-- Remove -- in front of --/* to create a comment
-- /*
    			OPEN childLeafCursor FOR
    	  			SELECT * FROM /shared/ASAssets/Utilities/repository/getResourceListRecursive(parent.resPath, parent.resType);
    			FOR child AS childLeafCursor DO
--CALL print(&apos;CHILD:  &apos; ||child.name || &apos;, &apos; || child.resPath || &apos;, &apos; || child.resType || &apos;, &apos; || child.subType);

    				INSERT INTO resourceTreeList VALUES (child.name, child.resPath, child.resType, child.subType, child.creationDate, child.creationDateBigint, child.creatorUserDomain, child.creatorUserName, child.lastModifiedDate, child.lastModifiedDateBigint, child.lastModifiedUserDomain, child.lastModifiedUserName);
    			END FOR;
-- Remove -- in front of -- * / to create the end comment for the section
-- */   
    		END IF;
    	END FOR;

	EXCEPTION
		ELSE raise ex value &apos;getResourceListRecursive:  &apos;||cast(CURRENT_EXCEPTION.TRACE as longvarchar);
	END;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>