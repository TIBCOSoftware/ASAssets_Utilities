<?xml version="1.1" encoding="UTF-8"?>
<metadata name="changePassword" path="/shared/ASAssets/Utilities/repository/changePassword" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>changePassword:

	This procedure allows a logged in user to change his/her password. The user must
    be a member of the &apos;composite&apos; domain, since CIS does not have the ability to set
    LDAP or dynamic domain users&apos; passwords. The procedure does not allow the user to
    change other users&apos; passwords.


	Input:
		oldPassword        - The logged in user&apos;s original password.  
			Values: Any text value

		newPassword        - The new password to set.  
			Values: Any text value

		confirmNewPassword - Confirmation of the new password. This needs to be the same
                             as the value for the &apos;newPassword&apos; input field, otherwise
                             the update will fail.
			Values: Any text value


	Output:
		result             - A message stating that the password was successfully updated.
			Values: &apos;Password successfully updated.&apos;


	Exceptions:
        /lib/util/System.IllegalArgumentException - Thrown if the new passwords do not match

        /lib/util/System.IllegalStateException    - Thrown if the user is not a member of the &apos;composite&apos;
                                                    user domain.

        UpdateUserFaultException                  - Thrown if there is an error while updating the user&apos;s password.


	Author:      Calvin Goodrich
	Date:        9/28/2011
	CSW Version: 6.0.0

	Updated By:  Calvin Goodrich
	Date:        9/5/2012
	CSW Version: 6.0.0
    Reason:      Updated documentation and thrown exceptions

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="oldPassword" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="newPassword" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="confirmNewPassword" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/util/GetProperty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="property" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyName" type="STRING" maxLength="255"/>
      </element>
      <element name="result" direction="OUT">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="PropertyValue" type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/services/webservices/system/admin/user/operations/updateUser" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="updateUser" direction="IN">
        <datatype name="updateUser" extendedName="{http://www.compositesw.com/services/system/admin/user}updateUser" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}updateUser" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}updateUser">
          <schemaDatatype>
            <datatype name="updateUser" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="updateUserRequest" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="2">
              <element name="domainName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="userName" namespace="http://www.compositesw.com/services/system/admin/user">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="oldPassword" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="password" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="groupNames" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="domainMemberReferenceList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="3">
                  <element name="entry" namespace="http://www.compositesw.com/services/system/admin/user" maxOccurs="2147483647" minOccurs="0">
                    <datatype name="domainMemberReference" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="4">
                      <element name="name" namespace="http://www.compositesw.com/services/system/admin/user">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                      <element name="domain" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                        <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </element>
                </datatype>
              </element>
              <element name="explicitRights" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="userRightsList" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="annotation" namespace="http://www.compositesw.com/services/system/admin/user" minOccurs="0">
                <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="updateUserResponse" direction="OUT">
        <datatype name="updateUserResponse" extendedName="{http://www.compositesw.com/services/system/admin/user}updateUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" referenceDefinitionSet="/services/webservices/system/admin/user/operations/UserSchema" referenceType="{http://www.compositesw.com/services/system/admin/user}updateUserResponse" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/admin/user}updateUserResponse">
          <schemaDatatype>
            <datatype name="updateUserResponse" namespace="http://www.compositesw.com/services/system/admin/user" superTypeName="updateUserResponse" superTypeNamespace="http://www.compositesw.com/services/system/admin/user" subType="ELEMENT_DECL" type="TREE" refId="5"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="fault" direction="OUT">
        <datatype name="fault" extendedName="{http://www.compositesw.com/services/system/util/common}fault" namespace="http://www.compositesw.com/services/system/util/common" referenceDefinitionSet="/services/webservices/system/util/common/operations/CommonSchema" referenceType="{http://www.compositesw.com/services/system/util/common}fault" subType="ELEMENT_DECL" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="ELEMENT" componentName="{http://www.compositesw.com/services/system/util/common}fault">
          <schemaDatatype>
            <datatype name="fault" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="fault" superTypeNamespace="http://www.compositesw.com/services/system/util/common" subType="ELEMENT_DECL" type="TREE" refId="6">
              <element name="errorEntry" namespace="http://www.compositesw.com/services/system/util/common" maxOccurs="2147483647" minOccurs="0">
                <datatype name="messageEntry" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="anyType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="COMPLEX_TYPE" type="TREE" refId="7">
                  <element name="code" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="name" namespace="http://www.compositesw.com/services/system/util/common">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="message" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="detail" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="string" namespace="http://www.w3.org/2001/XMLSchema" superTypeName="anySimpleType" superTypeNamespace="http://www.w3.org/2001/XMLSchema" type="STRING" maxLength="2147483647"/>
                  </element>
                  <element name="severity" namespace="http://www.compositesw.com/services/system/util/common" minOccurs="0">
                    <datatype name="messageSeverity" namespace="http://www.compositesw.com/services/system/util/common" superTypeName="string" superTypeNamespace="http://www.w3.org/2001/XMLSchema" subType="SIMPLE_TYPE" type="STRING" maxLength="2147483647"/>
                  </element>
                </datatype>
              </element>
            </datatype>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* 
  changePassword:

	This procedure allows a logged in user to change his/her password. The user must
    be a member of the &apos;composite&apos; domain, since CIS does not have the ability to set
    LDAP or dynamic domain users&apos; passwords. The procedure does not allow the user to
    change other users&apos; passwords.


	Input:
		oldPassword        - The logged in user&apos;s original password.  
			Values: Any text value

		newPassword        - The new password to set.  
			Values: Any text value

		confirmNewPassword - Confirmation of the new password. This needs to be the same
                             as the value for the &apos;newPassword&apos; input field, otherwise
                             the update will fail.
			Values: Any text value


	Output:
		result             - A message stating that the password was successfully updated.
			Values: &apos;Password successfully updated.&apos;


	Exceptions:
        /lib/util/System.IllegalArgumentException - Thrown if the new passwords do not match

        /lib/util/System.IllegalStateException    - Thrown if the user is not a member of the &apos;composite&apos;
                                                    user domain.

        UpdateUserFaultException                  - Thrown if there is an error while updating the user&apos;s password.


	Author:      Calvin Goodrich
	Date:        9/28/2011
	CSW Version: 6.0.0

	Updated By:  Calvin Goodrich
	Date:        9/5/2012
	CSW Version: 6.0.0
    Reason:      Updated documentation and thrown exceptions

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.


*/
PROCEDURE changePassword(
    IN oldPassword VARCHAR(255), 
    IN newPassword VARCHAR(255), 
    IN confirmNewPassword VARCHAR(255), 
    OUT result VARCHAR(255)
)
BEGIN
    DECLARE userid VARCHAR(255);
    DECLARE domainid VARCHAR(255);
    DECLARE resultXML XML;
    DECLARE faultXML XML;
    DECLARE UpdateUserFaultException EXCEPTION;
    DECLARE NL CONSTANT CHAR(1) DEFAULT &apos;
&apos;;

    CALL GetProperty(&apos;CURRENT_USER_NAME&apos;, userid);
    CALL GetProperty(&apos;CURRENT_USER_DOMAIN&apos;, domainid);

    -- make sure the new password and the confirmation password match
    --
    IF (newPassword &lt;&gt; confirmNewPassword) THEN
        RAISE System.IllegalArgumentException VALUE &apos;The values for newPassword and confirmNewPassword must match.&apos;;
    END IF;

    -- the Admin API can only change passwords for users in the composite domain
    --
    IF (domainid &lt;&gt; &apos;composite&apos;) THEN
        IF (domainid = &apos;dynamic&apos;) THEN
            RAISE System.IllegalStateException VALUE &apos;Only users in the &quot;composite&quot; domain can change their passwords. Users of the pass-through domain &quot;dynamic&quot; must use the password changing mechanism of the data source(s) being queried to change their passwords.&apos;;
        ELSE
            RAISE System.IllegalStateException VALUE &apos;Only users in the &quot;composite&quot; domain can change their passwords. LDAP users in the domain &quot;&apos; || domainid || &apos;&quot; must use the password changing mechanism of the LDAP system to change their passwords.&apos;;
        END IF;
    END IF;

    -- execute the password update
    --
    SELECT 
        updateUserResponse,
        fault
    INTO
        resultXML,
        faultXML
    FROM      
        /services/webservices/system/admin/&quot;user&quot;/operations/updateUser(
            &apos;&lt;ns1:updateUser xmlns:ns1=&quot;http://www.compositesw.com/services/system/admin/user&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
                 &lt;ns1:domainName&gt;composite&lt;/ns1:domainName&gt;
                 &lt;ns1:userName&gt;&apos; || CAST(XMLTEXT(userid) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:userName&gt;
                 &lt;ns1:oldPassword&gt;&apos; || CAST(XMLTEXT(oldPassword) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:oldPassword&gt;
                 &lt;ns1:password&gt;&apos; || CAST(XMLTEXT(newPassword) AS VARCHAR(2147483647)) || &apos;&lt;/ns1:password&gt;
            &lt;/ns1:updateUser&gt;&apos;
        ) updateUser;

    -- check for errors
    --
    IF (faultXML IS NOT NULL) THEN
        RAISE UpdateUserFaultException VALUE &apos;Unable to update password: &apos; || NL || CAST(faultXML AS System.Text);
    END IF;

    SET result = &apos;Password successfully updated.&apos;;
END</attribute>
  <attribute name="creationDate" type="LONG">1369417729294</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">10/79</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>GetProperty</item>
      </value>
    </item>
    <item>
      <key type="STRING">19/91</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/78</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>GetProperty</item>
      </value>
    </item>
    <item>
      <key type="STRING">102/118</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">15/84</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
    <item>
      <key type="STRING">19/93</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>util</item>
        <item>System</item>
      </value>
    </item>
  </attribute>
</metadata>