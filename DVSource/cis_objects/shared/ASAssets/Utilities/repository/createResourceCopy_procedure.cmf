<?xml version="1.1" encoding="UTF-8"?>
<metadata name="createResourceCopy" path="/shared/ASAssets/Utilities/repository/createResourceCopy" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>createResourceCopy:
	-- CIS Repository Helper Procedure --
	This is a procedure is used to create a copy of a resource by adding _Copy_1 and etc.  It looks for existing copies and increments the number.
	The resource can be any resource including folders.
 
	Input:
		mode - C=Copy resource and leave original, R=Rename resource to the &quot;copied&quot; name
				If left null, the default is copy and leave original in place.
		resourcePath - CIS resource to be copied
			Values: e.g. /shared/examples/LookupProduct
		resourceType - the type of resources
			Values: e.g. PROCEDURE
	Output:
		success	- true(1) or false(0)
	Exceptions:  ex

	Modified Date:	Modified By:		CSW Version:	Reason:
	05/23/2013		Mike Tinius			6.0.0			created new for Best Practices 7.1

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="mode" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="resourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="resourceType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/resource/CopyResource" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/lib/resource/CopyResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="targetContainerPath" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="newName" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceName" type="STRING" maxLength="255"/>
      </element>
      <element name="copyMode" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="CopyMode" type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/RenameResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="path" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourcePath" type="STRING" maxLength="4096"/>
      </element>
      <element name="type" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceType" type="STRING" maxLength="40"/>
      </element>
      <element name="newName" direction="IN">
        <datatype referenceDefinitionSet="/lib/resource/ResourceDefs" referenceType="ResourceName" type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/lib/resource/RenameResource" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/resourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceExists" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/resourceExists" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/resourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* createResourceCopy:
	-- CIS Repository Helper Procedure --
	This is a procedure is used to create a copy of a resource by adding _Copy_1 and etc.  It looks for existing copies and increments the number.
	The resource can be any resource including folders.
 
	Input:
		mode - C=Copy resource and leave original, R=Rename resource to the &quot;copied&quot; name
				If left null, the default is copy and leave original in place.
		resourcePath - CIS resource to be copied
			Values: e.g. /shared/examples/LookupProduct
		resourceType - the type of resources
			Values: e.g. PROCEDURE
	Output:
		success	- true(1) or false(0)
	Exceptions:  ex

	Modified Date:	Modified By:		CSW Version:	Reason:
	05/23/2013		Mike Tinius			6.0.0			created new for Best Practices 7.1

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE createResourceCopy(
	IN mode				CHAR(1),
	IN resourcePath		/shared/ASAssets/Utilities/TypeDefinitions.pathType,
	IN resourceType		VARCHAR,
	OUT success			INTEGER
)
BEGIN
    PATH /shared/ASAssets/Utilities/repository;

	DECLARE moduleName				VARCHAR DEFAULT &apos;createResourceCopy&apos;;
	DECLARE debug					CHAR(1) DEFAULT /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug;
	DECLARE resourceNameCopy		VARCHAR;
	DECLARE resourceName			VARCHAR;
	DECLARE parentPath				/shared/ASAssets/Utilities/TypeDefinitions.pathType;
	DECLARE fullResourcePath		/shared/ASAssets/Utilities/TypeDefinitions.pathType;
	DECLARE i						INTEGER DEFAULT 1;

	set success = 0;
	if (resourceExists(resourcePath, resourceType) = 1) then
		call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(resourcePath, &apos;E&apos;, resourceName, parentPath);
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;resourcePath=&apos;||emptyStr(resourcePath));
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;parentPath=&apos;||emptyStr(parentPath));

		-- make a copy of the resource
		set resourceNameCopy = resourceName||&apos;_Copy_&apos;||i;
		set fullResourcePath = parentPath||&apos;/&apos;||resourceNameCopy;
		call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;fullResourcePath=&apos;||emptyStr(fullResourcePath));

		while(resourceExists(fullResourcePath, resourceType) = 1) do  -- Exit the loop if resource not found
			set i = i + 1;
			set resourceNameCopy = resourceName||&apos;_Copy_&apos;||i;
			set fullResourcePath = parentPath||&apos;/&apos;||resourceNameCopy;
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;resourceNameCopy=&apos;||emptyStr(resourceNameCopy));
		end while;

		if (mode is null or UPPER(mode) = &apos;C&apos;) then
			-- Rename the existing resource to a copy of the old name
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;renameResource: resourcePath=&apos;||resourcePath || &apos;...to new name=&apos;||resourceNameCopy);
			call /lib/resource/CopyResource(resourcePath, resourceType, parentPath, resourceNameCopy, &apos;OVERWRITE_REPLACE_IF_EXISTS&apos;);
			set success = 1;
		end if;
		if (mode is not null and UPPER(mode) = &apos;R&apos;) then
			-- Rename the existing resource to a copy of the old name
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName, debug, &apos;renameResource: resourcePath=&apos;||resourcePath || &apos;...to new name=&apos;||resourceNameCopy);
			call /lib/resource/RenameResource(resourcePath, resourceType, resourceNameCopy);
			set success = 1;
		end if;
	end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>