<?xml version="1.1" encoding="UTF-8"?>
<metadata name="ActiveDirectoryInt8ToDate" path="/shared/ASAssets/Utilities/activedirectory/ActiveDirectoryInt8ToDate" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0" isFunction="true">
  <annotation>ActiveDirectoryInt8ToDate:

  Active Directory represents some Date values internally as an Integer8, which 
  translates to a BIGINT. The number represents the number of 100-nanosecond 
  intervals since 12:00 AM January 1, 1601. In addition, the fact that the CIS 
  function UTC_TO_TIMESTAMP() uses 1/1/1970 as its base date must also be accounted 
  for in the conversion.

  
Please note, Active Directory stores dates using Greenwich Mean Time (GMT),
  or a GMT offset of 0. The function supports converting the date value according 
  to the number of hours that the local time zone is offset from GMT.
 

	Input:
		ADInt8 - Active Directory integer8 value  
			Values: Any AD Integer8 (BIGINT) value

		GMTOffsetInHours - Offset (in hours) from GMT  
			Values: -12 to 12


	Output:
		ADDate - The Active Directory date converted to an ANSI date
			Values: Any date value from 1600-12-31 onwards


	Exceptions:  N/A


	Author:      Gordon Rose
	Date:        10/18/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="ADInt8" direction="IN" nullable="true">
      <datatype name="BIGINT" type="INTEGER"/>
    </parameter>
    <parameter name="GMTOffsetInHours" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="ADDate" direction="OUT" nullable="true">
      <datatype name="DATE" type="DATE"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">/* 
  ActiveDirectoryInt8ToDate:

  Active Directory represents some Date values internally as an Integer8, which 
  translates to a BIGINT. The number represents the number of 100-nanosecond 
  intervals since 12:00 AM January 1, 1601. In addition, the fact that the CIS 
  function UTC_TO_TIMESTAMP() uses 1/1/1970 as its base date must also be accounted 
  for in the conversion.

  
Please note, Active Directory stores dates using Greenwich Mean Time (GMT),
  or a GMT offset of 0. The function supports converting the date value according 
  to the number of hours that the local time zone is offset from GMT.
 

	Input:
		ADInt8 - Active Directory integer8 value  
			Values: Any AD Integer8 (BIGINT) value

		GMTOffsetInHours - Offset (in hours) from GMT  
			Values: -12 to 12


	Output:
		ADDate - The Active Directory date converted to an ANSI date
			Values: Any date value from 1600-12-31 onwards


	Exceptions:  N/A


	Author:      Gordon Rose
	Date:        10/18/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE ActiveDirectoryInt8ToDate(

  IN ADInt8 bigint,
  IN GMTOffsetInHours int,
  OUT ADDate date

)

BEGIN

  -- September 21, 2010 = 129296016000000000
  declare NumSeconds bigint;
  declare GMTOffsetInSeconds int;

  declare d1 date;
  declare d2 date;
  declare secsbtw bigint;
  
  /*
     Find number of seconds between AD start date and UTC start date
     AD Integer8 is number of 100-nanosecond intervals since 12:00 AM January 1, 1601 
     UTC_TO_TIMESTAMPE() uses 1/1/1970 as base date
     Result should be 11644473600 
  */
  set d1 = cast(&apos;1601-01-01&apos; as date);
  set d2 = cast(&apos;1970-01-01&apos; as date);
  set secsbtw = (cast(cast( (d2 - d1) as varchar) as bigint)) * 24 * 60 * 60;

  -- create local variable for working with input, validate
  set NumSeconds = ADInt8;
  if NumSeconds &lt; 0 OR NumSeconds &gt; 2147483647 THEN
    begin
      set NumSeconds = 0;
    end;
  end if;

  -- Calculate date value from Integer8
  set GMTOffsetInSeconds = GMTOffsetInHours * 60 * 60;
  -- convert from nano seconds
  set NumSeconds = (ADInt8/10000000);
  -- Handle offset(s)
  set NumSeconds = NumSeconds - secsbtw - GMTOffsetInSeconds;  
  -- convert seconds since 1/1/1970 to date
  set ADDate = cast(UTC_TO_TIMESTAMP(NumSeconds) as date);

END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>