<?xml version="1.1" encoding="UTF-8"?>
<metadata name="generatePDToolDeployableResourcePlanByDate" path="/shared/ASAssets/Utilities/pdtool/generatePDToolDeployableResourcePlanByDate" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>generatePDToolDeployableResourcePlanByDate:
	-- CIS Repository Helper Procedure --

		This procedure forms the basis by which to generate PDTool incremental deployment plans based on a resource date.
		It provides the developers the control to create an deployment plan for only those resources that have changed based
		on resources &gt;= the passed in resource date.  This procedure is only valid for CIS 6.2.2 and higher due to the fact 
		that this release introduced a &quot;lastModifiedDate&quot; and &quot;creationDate&quot; in the metadata.  Prior to this release their
		are no date values to compare with.

		This procedure will automatically insert &quot;createFolder&quot; actions to insure that the necessary folder path will exist
		when the resource is deployed from VCS.  If the folder does not exist on the target server, an error would be thrown.

		Any resource paths found in the exclude paths list &quot;excludePathsList&quot; will be excluded from the result.   
		Any resources that are not inclusive of the include base paths &quot;includeBasePath&quot; will be excluded from the result.

		PDTool (Composite Professional Services Promotion and Deployment Tool) is used to execute generated plan files.  If 
		you do not have PDTool on site, you may obtain it through a Composite/Cisco Professional Services engagement.

	Input:
		planFilePath				VARCHAR(1024)	- The path in the file system where the plan file will be generated on the Composite Server.
		bufferSize					INTEGER 		- Number of rows to buffer before writting out to the file.
		PDToolPlanTemplateVCS		LONGVARCHAR		- This is a template line for the deployment plan for doing a VCS checkout.
													    It shows the use of variables for $RESOURCE_PATH and $RESOURCE_TYPE
			-- example: PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;$RESOURCE_PATH&quot; &quot;$RESOURCE_TYPE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
		PDToolPlanTemplateFolders	LONGVARCHAR		- This is a template line for the deployment plan for creating folders
			-- example: PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;$RESOURCE_PATH&quot; &quot;$MODULE_HOME/servers.xml&quot; true
		resourcePathList			LONGVARCHAR		- A comma separated list of resource paths to generate a plan for based on the lineage of all resources found.
		resourceTimestamp			TIMESTAMP,	 	- resource timestamp value to compare with either the creation date or modified date of a resource with CIS 6.2.2 or higher
		includeBasePath				LONGVARCHAR, 	- If present, then include any resources found in this comma separated list of base paths and exclude all others.
											 		   It is intended to allow the user to specify a base path for published resources and 
											 		   /shared project folder resources that are related project level resources but exclude
											 		   any other resources not associated with those base paths.
		excludePathsList			LONGVARCHAR		- A comma separated list of resource paths or partials paths to exclude
										 				all paths or partial paths should end with a / to insure uniqueness of the path string.
		debug						CHAR(1),	 	- Y or N
	Output:
		success						INTEGER -- 1=success, 0=failure

	Exceptions: none

	Modified Date:	Modified By:		CSW Version:	Reason:
	07/30/2013		Mike Tinius			6.0.0			Created new

	Example Deployment plan:
	# -----------------------------------------
	# VCS Module: VCS Connection Properties version
	# -----------------------------------------

	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/services/databases/MYTEST&quot; &quot;DATA_SOURCE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/services/databases/MYTEST/LookupProduct&quot; &quot;LINK&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/services/databases/MYTEST/ViewSales&quot; &quot;LINK&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/services/databases/MYTEST/ViewSales2&quot; &quot;LINK&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;/shared/examples&quot; &quot;$MODULE_HOME/servers.xml&quot; true
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ds_inventory&quot; &quot;DATA_SOURCE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ds_inventory/products&quot; &quot;TABLE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ds_orders&quot; &quot;DATA_SOURCE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ds_orders/orderdetails&quot; &quot;TABLE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/LookupProduct&quot; &quot;PROCEDURE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/productCatalog_Transformation&quot; &quot;PROCEDURE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ViewSales&quot; &quot;TABLE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;/shared/_regression&quot; &quot;$MODULE_HOME/servers.xml&quot; true
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/_regression/ViewSales2&quot; &quot;TABLE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="planFilePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="1024"/>
    </parameter>
    <parameter name="bufferSize" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="PDToolPlanTemplateVCS" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="PDToolPlanTemplateFolders" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourcePathList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="resourceTimestamp" direction="IN" nullable="true">
      <datatype name="TIMESTAMP" type="DATETIME"/>
    </parameter>
    <parameter name="optionType" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="includeBasePath" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="excludePathsList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="debug" direction="IN" nullable="true">
      <datatype name="CHAR" type="STRING" minLength="1" maxLength="1"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/createFileAscii" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="filePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="append" direction="IN">
        <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
      </element>
      <element name="fileContent" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/pdtool/helpers/getDistinctDeployableResourceListByDate" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePathList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceTimestamp" direction="IN">
        <datatype type="DATETIME"/>
      </element>
      <element name="optionType" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="includeBasePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="resourceTreeList" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="name">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="resPath">
            <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
          </element>
          <element name="resType">
            <datatype type="STRING" maxLength="255"/>
          </element>
          <element name="subType">
            <datatype type="STRING" maxLength="255"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getCisVersion" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="result" direction="OUT">
        <datatype type="STRING" maxLength="15"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*	generatePDToolDeployableResourcePlanByDate:
	-- CIS Repository Helper Procedure --

		This procedure forms the basis by which to generate PDTool incremental deployment plans based on a resource date.
		It provides the developers the control to create an deployment plan for only those resources that have changed based
		on resources &gt;= the passed in resource date.  This procedure is only valid for CIS 6.2.2 and higher due to the fact 
		that this release introduced a &quot;lastModifiedDate&quot; and &quot;creationDate&quot; in the metadata.  Prior to this release their
		are no date values to compare with.

		This procedure will automatically insert &quot;createFolder&quot; actions to insure that the necessary folder path will exist
		when the resource is deployed from VCS.  If the folder does not exist on the target server, an error would be thrown.

		Any resource paths found in the exclude paths list &quot;excludePathsList&quot; will be excluded from the result.   
		Any resources that are not inclusive of the include base paths &quot;includeBasePath&quot; will be excluded from the result.

		PDTool (Composite Professional Services Promotion and Deployment Tool) is used to execute generated plan files.  If 
		you do not have PDTool on site, you may obtain it through a Composite/Cisco Professional Services engagement.

	Input:
		planFilePath				VARCHAR(1024)	- The path in the file system where the plan file will be generated on the Composite Server.
		bufferSize					INTEGER 		- Number of rows to buffer before writting out to the file.
		PDToolPlanTemplateVCS		LONGVARCHAR		- This is a template line for the deployment plan for doing a VCS checkout.
													    It shows the use of variables for $RESOURCE_PATH and $RESOURCE_TYPE
			-- example: PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;$RESOURCE_PATH&quot; &quot;$RESOURCE_TYPE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
		PDToolPlanTemplateFolders	LONGVARCHAR		- This is a template line for the deployment plan for creating folders
			-- example: PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;$RESOURCE_PATH&quot; &quot;$MODULE_HOME/servers.xml&quot; true
		resourcePathList			LONGVARCHAR		- A comma separated list of resource paths to generate a plan for based on the lineage of all resources found.
		resourceTimestamp			TIMESTAMP,	 	- resource timestamp value to compare with either the creation date or modified date of a resource with CIS 6.2.2 or higher
		optionType					INTEGER, 		- 3=Compare with Modified Date, 5=Compare with Creation Date
			-- 1: Find the n most recent modified resources in the path (default of n is 1).  results are not ordered
			-- 2: Find the n least recent modified resources in the path (default of n is 1). results are not ordered
			-- 3: Find all resources modified after the passed in resource date
			-- 4: Find all resources modifed before the passed in resource date
			-- 5: Find all resources created after the passed in resource date
			-- 6: Find all resources created before the passed in resource date
		includeBasePath				LONGVARCHAR, 	- If present, then include any resources found in this comma separated list of base paths and exclude all others.
											 		   It is intended to allow the user to specify a base path for published resources and 
											 		   /shared project folder resources that are related project level resources but exclude
											 		   any other resources not associated with those base paths.
		excludePathsList			LONGVARCHAR		- A comma separated list of resource paths or partials paths to exclude
										 				all paths or partial paths should end with a / to insure uniqueness of the path string.
		debug						CHAR(1),	 	- Y or N
	Output:
		success						INTEGER -- 1=success, 0=failure

	Exceptions: none

	Modified Date:	Modified By:		CSW Version:	Reason:
	07/30/2013		Mike Tinius			6.0.0			Created new
	07/07/2014		Mike Tinius			6.2.0			Modified to use optionType to provide a choice of using Creation Date or Modified Date but not both at the same time.

	Example Deployment plan:
	# -----------------------------------------
	# VCS Module: VCS Connection Properties version
	# -----------------------------------------

	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/services/databases/MYTEST&quot; &quot;DATA_SOURCE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/services/databases/MYTEST/LookupProduct&quot; &quot;LINK&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/services/databases/MYTEST/ViewSales&quot; &quot;LINK&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/services/databases/MYTEST/ViewSales2&quot; &quot;LINK&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;/shared/examples&quot; &quot;$MODULE_HOME/servers.xml&quot; true
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ds_inventory&quot; &quot;DATA_SOURCE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ds_inventory/products&quot; &quot;TABLE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ds_orders&quot; &quot;DATA_SOURCE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ds_orders/orderdetails&quot; &quot;TABLE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/LookupProduct&quot; &quot;PROCEDURE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/productCatalog_Transformation&quot; &quot;PROCEDURE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/examples/ViewSales&quot; &quot;TABLE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;/shared/_regression&quot; &quot;$MODULE_HOME/servers.xml&quot; true
	PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;/shared/_regression/ViewSales2&quot; &quot;TABLE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE generatePDToolDeployableResourcePlanByDate(
	IN planFilePath					VARCHAR(1024),
	IN bufferSize					INTEGER, 		-- number of rows to buffer
	IN PDToolPlanTemplateVCS		LONGVARCHAR,	-- this is a template line from the deployment plan with the use of variables for $RESOURCE_PATH and $RESOURCE_TYPE
		-- example: PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;$RESOURCE_PATH&quot; &quot;$RESOURCE_TYPE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	IN PDToolPlanTemplateFolders	LONGVARCHAR,
		-- example: PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;$RESOURCE_PATH&quot; &quot;$MODULE_HOME/servers.xml&quot; true
	IN resourcePathList				LONGVARCHAR, 	-- a comma separated list of resource paths
	IN resourceTimestamp			TIMESTAMP,	 	-- resource timestamp value to compare with either the creation date or modified date of a resource with CIS 6.2.2 or higher
	IN optionType					INTEGER, 		-- 3=Compare with Modified Date, 5=Compare with Creation Date
			-- 1: Find the n most recent modified resources in the path (default of n is 1).  results are not ordered
			-- 2: Find the n least recent modified resources in the path (default of n is 1). results are not ordered
			-- 3: Find all resources modified after the passed in resource date
			-- 4: Find all resources modifed before the passed in resource date
			-- 5: Find all resources created after the passed in resource date
			-- 6: Find all resources created before the passed in resource date
	IN includeBasePath			LONGVARCHAR, 		-- If present, then include any resources found in this comma separated list of base paths and exclude all others.
											 		--   It is intended to allow the user to specify a base path for published resources and 
											 		--   /shared project folder resources that are related project level resources but exclude
											 		--   any other resources not associated with those base paths.
	IN excludePathsList				LONGVARCHAR, 	-- a comma separated list of resource paths or partials paths to exclude
										 			-- all paths or partial paths should end with a / to insure uniqueness of the path string.
	IN debug						CHAR(1),	 	-- Y or N
	OUT success						INTEGER
)
BEGIN
	DECLARE resourcePath 			/shared/ASAssets/Utilities/TypeDefinitions.pathType; -- actual resource path and not a folder path
	DECLARE resourceType			VARCHAR DEFAULT null; -- The resource type
	DECLARE bufferCount 			INTEGER DEFAULT bufferSize;
	DECLARE eol						VARCHAR DEFAULT CHR(13)||chr(10);
	DECLARE dataRow					LONGVARCHAR DEFAULT NULL;
	DECLARE header					LONGVARCHAR;
	DECLARE notEmpty				INTEGER DEFAULT 0;
	DECLARE cisVersion				VARCHAR;
	DECLARE ex						EXCEPTION;

	call /shared/ASAssets/Utilities/repository/getCisVersion(cisVersion);
	if (cisVersion &lt; &apos;6.2.2.00.00&apos;) then
		raise ex value &apos;The option of comparing with the modified date is not valid for version &apos;||cisVersion;
	end if;
	if (resourceTimestamp is null) then
		raise ex value &apos;A valid timestamp must be provided when gathering deployable resources by date.&apos;;
	end if;

	set success = 1;
	set header = 
&apos;# -----------------------------------------
# VCS Module: VCS Connection Properties version
# -----------------------------------------
&apos;;
	call /shared/ASAssets/Utilities/file/FileProcessingCJP/createFileAscii(planFilePath, 0, header);

	-- Loop through the output records
    for r as 
        SELECT * FROM /shared/ASAssets/Utilities/pdtool/helpers/getDistinctDeployableResourceListByDate(resourcePathList, resourceTimestamp, optionType, includeBasePath, excludePathsList, debug)
	do
		if (dataRow is null) then
			set dataRow = &apos;&apos;;
		else
			set dataRow = dataRow || eol;
		end if;

		-- Add to the dataRow buffer
		if (r.resType = &apos;CONTAINER&apos; and r.subtype = &apos;FOLDER_CONTAINER&apos;) then
			set dataRow = dataRow || REPLACE(PDToolPlanTemplateFolders, &apos;$RESOURCE_PATH&apos;, r.resPath);
		else
			set dataRow = dataRow || REPLACE(REPLACE(PDToolPlanTemplateVCS, &apos;$RESOURCE_PATH&apos;, r.resPath), &apos;$RESOURCE_TYPE&apos;, r.resType);
		end if;

		if (bufferCount &gt; 0) then
			set bufferCount = bufferCount - 1;
		else
			call /shared/ASAssets/Utilities/file/FileProcessingCJP/createFileAscii(planFilePath, 1, dataRow);
			set bufferCount = bufferSize;
			set dataRow = null;
		end if;
	end for;
	-- Write out the final part of the buffer
	if (dataRow is not null) then
		call /shared/ASAssets/Utilities/file/FileProcessingCJP/createFileAscii(planFilePath, 1, dataRow);
	end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>