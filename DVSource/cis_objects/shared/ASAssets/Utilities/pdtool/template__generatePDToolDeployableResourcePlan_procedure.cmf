<?xml version="1.1" encoding="UTF-8"?>
<metadata name="template_generatePDToolDeployableResourcePlan" path="/shared/ASAssets/Utilities/pdtool/template_generatePDToolDeployableResourcePlan" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>template_generatePDToolDeployableResourcePlan:
	-- CIS Repository Helper Procedure --

		This procedure provides a template for invoking &quot;generatePDToolDeployableResourcePlanByLineage&quot; or &quot;generatePDToolDeployableResourcePlanByDate&quot;.
		This procedure should be copied to a working folder within the project and modified by the user for developers to use with ease.

		Note that when using &quot;generatePDToolDeployableResourcePlanByDate&quot; to create a deployment plan based on a resource date
		can only be used with CIS 6.2.2 and higher.  CIS 6.2.2 and higher introduced a &quot;lastModifiedDate&quot; and &quot;creationDate&quot; 
		in the metadata.  Prior to this release their are no date values to compare with.

		Recommendation for location:
			/shared/PROJECT_FOLDER_PATH/Deployment

		
		Modify the CASE Statement found in this procedure to specify your specific environment.   Add or delete WHEN statements as needed.
			WHEN 1 THEN
				set debug = &apos;Y&apos;;
						-- Turn debugging on or off (recommend keeping it on).  Y or N
				set planFileRootPath = &apos;C:&apos;;
						-- the root path of the plan file. e.g. C:
				set planFilePath = planFileRootPath||&apos;\temp\plan1.dp&apos;;
						-- the complete path to the file system deployment plan file. e.g. D:/PDTool62/resources/plans/plan1.dp
				set bufferSize = 1000;
						-- number of rows to buffer
				set resourcePathList = &apos;/services/databases/MYTEST/ViewSales,/services/databases/MYTEST/LookupProduct,/services/databases/MYTEST/ViewSales2&apos;;
						-- a comma separated list of resource paths
				set resourceTimestamp = null or PARSE_TIMESTAMP(&apos;2013-08-06 16:30:00&apos;, &apos;YYYY-MM-DD HH24:MI:SS&apos;);
						-- Set to null when invoking the (LINEAGE): generatePDToolDeployableResourcePlanByLineage
						-- Set to a timestamp when invoking (TIMESTAMP): generatePDToolDeployableResourcePlanByDate
				set includeDependentTriggers = 1;
						-- 0=do not include, 1=include 1st level trigger dependents
						-- For each resource encountered, look to see if any dependent resources are triggers and include them if this variable is set to 1.
				set excludePathsList = &apos;/shared/examples/ds_XML/&apos;;
						-- a comma separated list of resource paths or partials paths to exclude
						-- all paths or partial paths should end with a / to insure uniqueness of the path string.
				set excludeSystemPathsList =&apos;/shared/ASAssets/BestPractices/,/lib/&apos;;
						-- a comma separated list of system paths that should not be included in deployment.
				set includeBasePath = &apos;/shared/test00&apos;
						-- a comma separated list of project folders that serve as the base folder.  Exclude any folders not identified by these base path folders.

		The following is a default path that should include all system level and Composite utility paths.
				DECLARE excludeSystemPathsList		LONGVARCHAR DEFAULT &apos;/shared/BestPractices,/shared/Utilities,/lib&apos;;
						-- all system level and Composite utility paths that should not be included in the list

		PDTool (Composite Professional Services Promotion and Deployment Tool) is used to execute generated plan files.  If 
		you do not have PDTool on site, you may obtain it through a Composite/Cisco Professional Services engagement.

	Input:
		planOption					INTEGER 	- The number of the deployment plan option to generate
	Output:
		success						INTEGER -- 1=success, 0=failure

	Exceptions: none

	Modified Date:	Modified By:		CSW Version:	Reason:
	07/30/2013		Mike Tinius			6.0.0			Created new
	10/28/2013		Mike Tinius			6.2.0			Added parameter inIgnoreResourceDoesNotExist

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="planOption" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/pdtool/generatePDToolDeployableResourcePlanByDate" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="planFilePath" direction="IN">
        <datatype type="STRING" maxLength="1024"/>
      </element>
      <element name="bufferSize" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="PDToolPlanTemplateVCS" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="PDToolPlanTemplateFolders" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourcePathList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourceTimestamp" direction="IN">
        <datatype type="DATETIME"/>
      </element>
      <element name="optionType" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="includeBasePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/pdtool/generatePDToolDeployableResourcePlanByDate" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/pdtool/generatePDToolDeployableResourcePlanByLineage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="planFilePath" direction="IN">
        <datatype type="STRING" maxLength="1024"/>
      </element>
      <element name="bufferSize" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="PDToolPlanTemplateVCS" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="PDToolPlanTemplateFolders" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="resourcePathList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="includeDependentTriggers" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="includeBasePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="excludePathsList" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="inIgnoreResourceDoesNotExist" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/pdtool/generatePDToolDeployableResourcePlanByLineage" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/isEmpty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="request" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="response" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/isEmpty" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/isEmpty" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*	template_generatePDToolDeployableResourcePlan:
	-- CIS Repository Helper Procedure --

		This procedure provides a template for invoking &quot;generatePDToolDeployableResourcePlanByLineage&quot; or &quot;generatePDToolDeployableResourcePlanByDate&quot;.
		This procedure should be copied to a working folder within the project and modified by the user for developers to use with ease.

		Note that when using &quot;generatePDToolDeployableResourcePlanByDate&quot; to create a deployment plan based on a resource date
		can only be used with CIS 6.2.2 and higher.  CIS 6.2.2 and higher introduced a &quot;lastModifiedDate&quot; and &quot;creationDate&quot; 
		in the metadata.  Prior to this release their are no date values to compare with.

		Recommendation for location:
			/shared/PROJECT_FOLDER_PATH/Deployment

		
		Modify the CASE Statement found in this procedure to specify your specific environment.   Add or delete WHEN statements as needed.
			WHEN 1 THEN
				set debug = &apos;Y&apos;;
						-- Turn debugging on or off (recommend keeping it on).  Y or N
				set planFileRootPath = &apos;C:&apos;;
						-- the root path of the plan file. e.g. C:
				set planFilePath = planFileRootPath||&apos;\temp\plan1.dp&apos;;
						-- the complete path to the file system deployment plan file. e.g. D:/PDTool62/resources/plans/plan1.dp
				set bufferSize = 1000;
						-- number of rows to buffer
				set resourcePathList = &apos;/services/databases/MYTEST/ViewSales,/services/databases/MYTEST/LookupProduct,/services/databases/MYTEST/ViewSales2&apos;;
						-- a comma separated list of resource paths
				set resourceTimestamp = null or PARSE_TIMESTAMP(&apos;2013-08-06 16:30:00&apos;, &apos;YYYY-MM-DD HH24:MI:SS&apos;);
						-- Set to null when invoking the (LINEAGE): generatePDToolDeployableResourcePlanByLineage
						-- Set to a timestamp when invoking (TIMESTAMP): generatePDToolDeployableResourcePlanByDate
				set includeDependentTriggers = 1;
						-- 0=do not include, 1=include 1st level trigger dependents
						-- For each resource encountered, look to see if any dependent resources are triggers and include them if this variable is set to 1.
				set excludePathsList = &apos;/shared/examples/ds_XML/&apos;;
						-- a comma separated list of resource paths or partials paths to exclude
						-- all paths or partial paths should end with a / to insure uniqueness of the path string.
				set excludeSystemPathsList =&apos;/shared/ASAssets/BestPractices/,/lib/&apos;;
						-- a comma separated list of system paths that should not be included in deployment.
				set includeBasePath = &apos;/shared/test00&apos;
						-- a comma separated list of project folders that serve as the base folder.  Exclude any folders not identified by these base path folders.

		The following is a default path that should include all system level and Composite utility paths.
				DECLARE excludeSystemPathsList		LONGVARCHAR DEFAULT &apos;/shared/BestPractices,/shared/Utilities,/lib&apos;;
						-- all system level and Composite utility paths that should not be included in the list

		PDTool (Composite Professional Services Promotion and Deployment Tool) is used to execute generated plan files.  If 
		you do not have PDTool on site, you may obtain it through a Composite/Cisco Professional Services engagement.

	Input:
		planOption					INTEGER 	- The number of the deployment plan option to generate
	Output:
		success						INTEGER -- 1=success, 0=failure

	Exceptions: none

	Modified Date:	Modified By:		CSW Version:	Reason:
	07/30/2013		Mike Tinius			6.0.0			Created new
	10/28/2013		Mike Tinius			6.2.0			Added parameter inIgnoreResourceDoesNotExist
	10/28/2013		Mike Tinius			6.2.0			Added parameter inIgnoreResourceDoesNotExist
	07/07/2014		Mike Tinius			6.2.0			Modified to use optionType to provide a choice of using Creation Date or Modified Date but not both at the same time.

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE template_generatePDToolDeployableResourcePlan(
	IN planOption	INTEGER,
	OUT success		INTEGER
)
BEGIN
	DECLARE moduleName					VARCHAR DEFAULT &apos;template_generatePDToolDeployableResourcePlan&apos;;
	DECLARE debug						CHAR(1);		-- Y or N
	DECLARE planFileRootPath			VARCHAR DEFAULT &apos;C:&apos;; -- the root path can be as simple as C: or any common path
	DECLARE planFilePath				VARCHAR(1024);	-- the complete path to the file system deployment plan file. e.g. D:/PDTool62/resources/plans/plan1.dp
	DECLARE bufferSize					INTEGER; 		-- number of rows to buffer
	DECLARE PDToolPlanTemplateVCS		LONGVARCHAR;	-- this is a template line from the deployment plan with the use of variables for $RESOURCE_PATH and $RESOURCE_TYPE
		-- example: PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;$RESOURCE_PATH&quot; &quot;$RESOURCE_TYPE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;
	DECLARE PDToolPlanTemplateFolders	LONGVARCHAR;
		-- example: PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;$RESOURCE_PATH&quot; &quot;$MODULE_HOME/servers.xml&quot; true
	DECLARE resourcePathList			LONGVARCHAR; 	-- a comma separated list of resource paths
	DECLARE resourceTimestamp			TIMESTAMP;	 	-- resource timestamp value to compare with either the creation date or modified date of a resource with CIS 6.2.2 or higher
	DECLARE optionType					INTEGER;		-- 3=Compare with Modified Date, 5=Compare with Creation Date
			-- 1: Find the n most recent modified resources in the path (default of n is 1).  results are not ordered
			-- 2: Find the n least recent modified resources in the path (default of n is 1). results are not ordered
			-- 3: Find all resources modified after the passed in resource date
			-- 4: Find all resources modifed before the passed in resource date
			-- 5: Find all resources created after the passed in resource date
			-- 6: Find all resources created before the passed in resource date
	DECLARE includeDependentTriggers	INTEGER; 	 	-- 0=do not include, 1=include 1st level trigger dependents
														-- For each resource encountered, look to see if any dependent resources are triggers and include them if this variable is set to 1.
	DECLARE includeBasePath				LONGVARCHAR; 
														-- If present, then include any resources found in this comma separated list of base paths and exclude all others.
														--   It is intended to allow the user to specify a base path for published resources and 
														--   /shared project folder resources that are related project level resources but exclude
														--   any other resources not associated with those base paths.
	DECLARE excludePathsList			LONGVARCHAR; 	-- a comma separated list of resource paths or partials paths to exclude
										 				-- all paths or partial paths should end with a / to insure uniqueness of the path string.
	DECLARE excludeSystemPathsList		LONGVARCHAR DEFAULT &apos;/shared/ASAssets/BestPractices,/lib&apos;;
														-- all system level and Composite utility paths that should not be included in the list
	DECLARE inIgnoreResourceDoesNotExist INTEGER;		-- Ignore any resources that do not exist
														-- 1 = Bypass the processing of that resource.
														-- 0 = (default) Do not ignore any resources.  Throw an error that the resource does not exist.
 	DECLARE notEmpty					INTEGER DEFAULT 0;

	set success = 0;
	-- Set general template for VCS and Folders
	set PDToolPlanTemplateVCS = &apos;PASS	TRUE	ExecuteAction  	vcsCheckout2  $SERVERID  $VCONN &quot;$RESOURCE_PATH&quot; &quot;$RESOURCE_TYPE&quot; HEAD &quot;$MODULE_HOME/VCSModule.xml&quot;  &quot;$MODULE_HOME/servers.xml&quot;&apos;;
	set PDToolPlanTemplateFolders = &apos;PASS	TRUE	ExecuteAction  	createFolder  $SERVERID         &quot;$RESOURCE_PATH&quot; &quot;$MODULE_HOME/servers.xml&quot; true&apos;;

	CASE planOption
		-- This example shows how to generate a deployment plan for a comma separated list of specific &quot;published&quot; resources found within the MYTEST database sevice
		WHEN 1 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan1.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/services/databases/MYTEST/ViewSales,/services/databases/MYTEST/LookupProduct,/services/databases/MYTEST/CAT1/SCH1/proc2&apos;;
			set resourceTimestamp = null;
			set optionType = null;
			set includeDependentTriggers = 1;
			set excludePathsList = &apos;/shared/examples/ds_XML/&apos;;
			set includeBasePath = &apos;/services/databases/MYTEST,/shared/Utilities&apos;;
			set inIgnoreResourceDoesNotExist = 1;

		-- This example shows how to generate a deployment plan for a published web service
		WHEN 2 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan2.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/services/webservices/testWebService00&apos;;
			set resourceTimestamp = null;
			set optionType = null;
			set includeDependentTriggers = 1;
			set excludePathsList = null;
			set includeBasePath = null;
			set inIgnoreResourceDoesNotExist = 1;

		-- This example shows how to generate a deployment plan for a specific operation within a published web service
		WHEN 3 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan3.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/services/webservices/testWebService00/testService/operations/testprocsimple&apos;;
			set resourceTimestamp = null;
			set optionType = null;
			set includeDependentTriggers = 1;
			set excludePathsList = null;
			set includeBasePath = null;
			set inIgnoreResourceDoesNotExist = 1;

		-- This example shows how to generate a deployment plan for all resources found within a published database service
		WHEN 4 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan4.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/services/databases/MYTEST&apos;;
			set resourceTimestamp = null;
			set optionType = null;
			set includeDependentTriggers = 1;
			set excludePathsList = null;
			set includeBasePath = null;
			set inIgnoreResourceDoesNotExist = 1;

		-- This example shows how to generate a plan for a specific resource and associated triggers
		WHEN 5 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan5.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/shared/ASAssets/Utilities/examples/repository/source/proc1&apos;;
			set resourceTimestamp = null;
			set optionType = null;
			set includeDependentTriggers = 1;
			set excludePathsList = null;
			set excludeSystemPathsList =&apos;/shared/BestPractices,/lib&apos;;
			set includeBasePath = null;
			set inIgnoreResourceDoesNotExist = 1;

		-- This example shows how to generate a plan for a specific resource and associated triggers
		WHEN 6 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan6.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/shared/ASAssets/Utilities/examples/repository/source/proc2&apos;;
			set resourceTimestamp = PARSE_TIMESTAMP(&apos;2013-08-06 16:30:00&apos;, &apos;YYYY-MM-DD HH24:MI:SS&apos;);
			set optionType = 3; -- Compare with Modified Date
			set includeDependentTriggers = null;
			set excludePathsList = null;
			set excludeSystemPathsList =&apos;/shared/BestPractices,/lib&apos;;
			set includeBasePath = null;
			set inIgnoreResourceDoesNotExist = 1;

		-- This example shows how to generate a plan for a specific resource and associated triggers
		WHEN 7 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan7.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_orders&apos;;
			set resourceTimestamp = PARSE_TIMESTAMP(&apos;2013-08-06 16:30:00&apos;, &apos;YYYY-MM-DD HH24:MI:SS&apos;);
			set optionType = 5; -- Compare with Creation Date
			set includeDependentTriggers = null;
			set excludePathsList = null;
			set excludeSystemPathsList =&apos;/shared/BestPractices,/lib&apos;;
			set includeBasePath = null;
			set inIgnoreResourceDoesNotExist = 1;

		-- This example shows how to generate a plan for a specific resource and associated triggers
		WHEN 8 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan8.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_orders/employees&apos;;
			set resourceTimestamp = PARSE_TIMESTAMP(&apos;2013-08-06 16:30:00&apos;, &apos;YYYY-MM-DD HH24:MI:SS&apos;);
			set optionType = 3; -- Compare with Modified Date
			set includeDependentTriggers = null;
			set excludePathsList = null;
			set excludeSystemPathsList =&apos;/shared/ASAssets/BestPractices,/lib&apos;;
			set includeBasePath = &apos;/shared/ASAssets/Utilities/examples&apos;;
			set inIgnoreResourceDoesNotExist = 1;

		WHEN 9 THEN
			set debug = &apos;Y&apos;;
			set planFilePath = planFileRootPath||&apos;\temp\plan9.dp&apos;;
			set bufferSize = 1000;
			set resourcePathList = &apos;/services/databases/ds_hr/HR/EMPLOYEES&apos;;
			set resourceTimestamp = null;
			set optionType = null;
			set includeDependentTriggers = 1;
			set excludePathsList = null;
			set includeBasePath = null;
			set inIgnoreResourceDoesNotExist = 1;

		-- Additional WHEN statements here:
		ELSE
			call /shared/ASAssets/Utilities/log/logDebugMessage(moduleName,&apos;Y&apos;,&apos;The plan option selection does not exist.  Reenter a valid plan option.  planOption=[&apos;||emptyStr(planOption)||&apos;]&apos;);
	END CASE;

	-- Include the system paths in the exclude list
	if (excludePathsList is null) then
		set excludePathsList = excludeSystemPathsList;
	else
		set excludePathsList = excludePathsList||&apos;,&apos;||excludeSystemPathsList;
	end if;

	if (isEmpty(planFilePath) = notEmpty and isEmpty(resourcePathList) = notEmpty) then
		if (resourceTimestamp is null) then
 			call /shared/ASAssets/Utilities/pdtool/generatePDToolDeployableResourcePlanByLineage(planFilePath,bufferSize,PDToolPlanTemplateVCS,PDToolPlanTemplateFolders,resourcePathList,includeDependentTriggers,includeBasePath,excludePathsList,inIgnoreResourceDoesNotExist,debug,success);
		else
 			call /shared/ASAssets/Utilities/pdtool/generatePDToolDeployableResourcePlanByDate(planFilePath,bufferSize,PDToolPlanTemplateVCS,PDToolPlanTemplateFolders,resourcePathList,resourceTimestamp,optionType, includeBasePath,excludePathsList,debug,success);
		end if;
	end if;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>