<?xml version="1.1" encoding="UTF-8"?>
<metadata name="unescapeXML" path="/shared/ASAssets/Utilities/xml/unescapeXML" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0" isFunction="true">
  <annotation>unescapeXML:
	Change xml entities to their corresponding characters.
 
	Input:
		inStr - incoming xml escaped string.  
			Values: Any xml escaped text string
	Output:
		outStr - incoming xml escaped xml string with xml entities unescaped.
			Values: Any text string

	Exceptions:  none
	Author:      Calvin Goodrich
	Date:        3/23/2011
	CSW Version: 5.1.0

    © 2011, 2014 Cisco and/or its affiliates. All rights reserved.</annotation>
  <parameters>
    <parameter name="inStr" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="outStr" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">/* unescapeXML:
	Change xml entities to their corresponding characters.
 
	Input:
		inStr - incoming xml escaped string.  
			Values: Any xml escaped text string
	Output:
		outStr - incoming xml escaped xml string with xml entities unescaped.
			Values: Any text string

	Exceptions:  none
	Author:      Calvin Goodrich
	Date:        3/23/2011
	CSW Version: 5.1.0

    © 2011, 2014 Cisco and/or its affiliates. All rights reserved.
*/
PROCEDURE unescapeXML(
	IN inStr longvarchar,
	OUT outStr longvarchar	
)
BEGIN
	-- TODO make this do something 
/*
The Escape Characters
When writing parsed data to XML: 
Character in HDF5 Output Character in XML 
quote 			(&quot;) 		&amp;quot; 
apostrophe 		(&apos;) 		&amp;apos; 
ampersand		(&amp;)			&amp;amp;
less than 		(&lt;) 		&amp;lt; 
greater than 	(&gt;) 		&amp;gt; 
slash 			(\) 		No escape required 
space 			( )			No escape required 
*/
	set outStr = REPLACE(inStr,  &apos;&amp;lt;&apos;, &apos;&lt;&apos;);
	set outStr = REPLACE(outStr, &apos;&amp;gt;&apos;, &apos;&gt;&apos;);
	set outStr = REPLACE(outStr, &apos;&amp;apos;&apos;, &apos;&apos;&apos;&apos;);
	set outStr = REPLACE(outStr, &apos;&amp;quot;&apos;, &apos;&quot;&apos;);
	set outStr = REPLACE(outStr, &apos;&amp;amp;&apos;, &apos;&amp;&apos;);
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1392758877357</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>