<?xml version="1.1" encoding="UTF-8"?>
<metadata name="escapeXML" path="/shared/ASAssets/Utilities/xml/escapeXML" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0" isFunction="true">
  <annotation>escapeXML:
	Change xml tags to their corresponding escape sequences.
 
	Input:
		inStr - incoming xml string.  
			Values: Any xml text string
	Output:
		outStr - incoming xml string with xml tags escaped.
			Values: Any xml text string
	Exceptions:  none
	Author:      Mike Tinius
	Date:        8/2/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="inStr" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="outStr" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">/* escapeXML:
	Change xml tags to their corresponding escape sequences.
 
	Input:
		inStr - incoming xml string.  
			Values: Any xml text string
	Output:
		outStr - incoming xml string with xml tags escaped.
			Values: Any xml text string
	Exceptions:  none
	Author:      Mike Tinius
	Date:        8/2/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE escapeXML(
	IN inStr longvarchar,
	OUT outStr longvarchar	
)
BEGIN
	-- TODO make this do something 
/*
The Escape Characters
When writing parsed data to XML: 
Character in HDF5 Output Character in XML 
quote 			(&quot;) 		&amp;quot; 
apostrophe 		(&apos;) 		&amp;apos; 
ampersand		(&amp;)			&amp;amp;
less than 		(&lt;) 		&amp;lt; 
greater than 	(&gt;) 		&amp;gt; 
slash 			(\) 		No escape required 
space 			( )			No escape required 
*/
    set outStr = REPLACE(inStr, &apos;&amp;&apos;, &apos;&amp;amp;&apos;);
	set outStr = REPLACE(outStr,  &apos;&lt;&apos;, &apos;&amp;lt;&apos;);
	set outStr = REPLACE(outStr, &apos;&gt;&apos;, &apos;&amp;gt;&apos;);
	set outStr = REPLACE(outStr, &apos;&apos;&apos;&apos;, &apos;&amp;apos;&apos;);
	set outStr = REPLACE(outStr, &apos;&quot;&apos;, &apos;&amp;quot;&apos;);
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>