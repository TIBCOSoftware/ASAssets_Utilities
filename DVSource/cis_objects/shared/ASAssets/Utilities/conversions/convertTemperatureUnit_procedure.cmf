<?xml version="1.1" encoding="UTF-8"?>
<metadata name="convertTemperatureUnit" path="/shared/ASAssets/Utilities/conversions/convertTemperatureUnit" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0" isFunction="true">
  <annotation>convertTemperatureUnit
    
    This procedure is used to convert passed in temperatures from one unit of 
    measurement to another. Temperatures can be converted from / to degrees in 
    Fahrenheit, Celsius and Kelvin.


    Input:
		inputTemperature	 - The input temperature value to be converted.

		inputUnits 			 - The current temperature of the input temperature. Valid values are C, K and F

		targetUnits 		 - The target temperature unit to convert to. Valid values are C, K and F


    Output:
        convertedTemperature - A float containing the converted temperature value.
            

    Exceptions:  
		/lib/util/System.IllegalArgumentException - Exception raised if the values of either inputUnits or targetUnits are not one of K, C or F


    Modified Date:  Modified By:        CSW Version:    Reason:
    07/24/2013      Matthew Lee         6.2.0           Created new
    08/10/2015      Calvin Goodrich     6.2.0           Fixed an issue with precision in converting Fahrenheit to Celsius.

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.</annotation>
  <parameters>
    <parameter name="inputTemperature" direction="IN" nullable="true">
      <datatype name="FLOAT" type="FLOAT" minValue="1.1754943508222875E-38" maxValue="3.4028234663852886E38"/>
    </parameter>
    <parameter name="inputUnits" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="1"/>
    </parameter>
    <parameter name="targetUnits" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="1"/>
    </parameter>
    <parameter name="convertedTemperature" direction="OUT" nullable="true">
      <datatype name="FLOAT" type="FLOAT" minValue="1.1754943508222875E-38" maxValue="3.4028234663852886E38"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/util/System" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* convertTemperatureUnit

    This procedure is used to convert passed in temperatures from one unit of 
    measurement to another. Temperatures can be converted from / to degrees in 
    Fahrenheit, Celsius and Kelvin.


    Input:
		inputTemperature	 - The input temperature value to be converted.

		inputUnits 			 - The current temperature of the input temperature. Valid values are C, K and F

		targetUnits 		 - The target temperature unit to convert to. Valid values are C, K and F


    Output:
        convertedTemperature - A float containing the converted temperature value.
            

    Exceptions:  
		/lib/util/System.IllegalArgumentException - Exception raised if the values of either inputUnits or targetUnits are not one of K, C or F


    Modified Date:  Modified By:        CSW Version:    Reason:
    07/24/2013      Matthew Lee         6.2.0           Created new
    08/10/2015      Calvin Goodrich     6.2.0           Fixed an issue with precision in converting Fahrenheit to Celsius.

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
    PROCEDURE convertTemperatureUnit(IN inputTemperature FLOAT, IN inputUnits VARCHAR(1), IN targetUnits VARCHAR(1), OUT convertedTemperature FLOAT)
    BEGIN

		DECLARE inputUnitsUpper VARCHAR(1) DEFAULT UPPER(inputUnits);
		DECLARE targetUnitsUpper VARCHAR(1) DEFAULT UPPER(targetUnits);

		--Check to make sure that the input and target unit values are one of the accepted values. If not then throw an exception
		IF NOT inputUnitsUpper IN (&apos;F&apos;, &apos;C&apos;, &apos;K&apos;) THEN
			RAISE /lib/util/System.IllegalArgumentException VALUE &apos;Error: Input parameter inputUnits has an invalid value of &apos; || inputUnits;
		END IF;

		IF NOT targetUnitsUpper IN (&apos;F&apos;,&apos;C&apos;, &apos;K&apos;) THEN
			RAISE /lib/util/System.IllegalArgumentException VALUE &apos;Error: Input parameter targetUnits has an invalid value of &apos; || targetUnits;
		END IF;

        --If the input and target units match then just return the input value
        IF targetUnitsUpper = inputUnitsUpper THEN
            SET convertedTemperature = inputTemperature;
        ELSE 
            IF targetUnitsUpper = &apos;C&apos; THEN
                IF inputUnitsUpper = &apos;F&apos; THEN
                    SET convertedTemperature = 5 * (inputTemperature - 32) / 9;
                ELSE 
                    SET convertedTemperature = inputTemperature - 273.15;
                END IF;
            --Convert the temperature to Fahrenheit
            ELSEIF targetUnitsUpper = &apos;F&apos; THEN
                --If the input temperature is in Kelvins then convert to Celcius and first and then spill into the calculation from Celcius to Fahrenheit
                IF inputUnitsUpper = &apos;K&apos; THEN
                    SET convertedTemperature = inputTemperature - 273.15;
                END IF;
                SET convertedTemperature = (1.8 * inputTemperature) + 32;
            --Convert the temperature to Kelvins
            ELSEIF UPPER(targetUnits) = &apos;K&apos; THEN
                --If the input temperature is in degrees Farhrenheit then convert to Celcius first and then spill into the calculation from Celcius to Kelvins
                IF inputUnitsUpper = &apos;F&apos; THEN
                    SET convertedTemperature = 5 * (inputTemperature - 32) / 9;
                END IF;
                SET convertedTemperature = inputTemperature + 273.15;
            END IF;
        END IF;
    END</attribute>
  <attribute name="creationDate" type="LONG">1361208322913</attribute>
  <attribute name="creatorUserDomain" type="STRING">monsanto</attribute>
  <attribute name="creatorUserName" type="STRING">mjlee3</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1439272886668</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>