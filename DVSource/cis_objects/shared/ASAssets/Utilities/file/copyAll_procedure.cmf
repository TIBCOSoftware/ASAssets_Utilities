<?xml version="1.1" encoding="UTF-8"?>
<metadata name="copyAll" path="/shared/ASAssets/Utilities/file/copyAll" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>copyAll:
	This procedure is used to copy all of the files from one source location to target destination.
 
			In this example, the end point folder name in the sourcePath will be used as the starting point
			and concatenated onto the end point of the target folder.  Therefore, the result will be all
			folders under /Temp/vcs1/Utilities will be recursively copied to /Temp/vcs2 resulting in
			/Temp/vcs2/Utilities...

	Input:
		sourcePath - folder path to the source vcs folder.  
			Values: /Temp/vcs1/Utilities
		targetPath - folder path to the target vcs folder.
			Values: /Temp/vcs2
		mkdirCount - number of directories created.
		copyCount - number of files copied.
	Output:
		mkdirCount - number of directories created.
		copyCount - number of files copied.
	Exceptions:  none
	Author:      Mike Tinius
	Date:        8/6/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="sourcePath" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="targetPath" direction="IN" nullable="true">
      <datatype name="VARCHAR" referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
    </parameter>
    <parameter name="mkdirCount" direction="INOUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="copyCount" direction="INOUT" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP" type="DATA_SOURCE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/copyFile" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="filePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="newFilePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/getFileInfo" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="directoryPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="includeDirs" direction="IN">
        <datatype type="STRING" minLength="255" maxLength="255"/>
      </element>
      <element name="FileInfo" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="filePath">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="fileName">
            <datatype type="STRING" maxLength="2147483647"/>
          </element>
          <element name="fileTimestamp">
            <datatype type="DATETIME"/>
          </element>
          <element name="fileSize">
            <datatype type="INTEGER"/>
          </element>
          <element name="isFile">
            <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
          </element>
          <element name="isDir">
            <datatype type="INTEGER" minValue="-32768" maxValue="32767"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/FileProcessingCJP/makeDirs" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="dirPath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="BOOLEAN"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/file/copyAll" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="sourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="targetPath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="mkdirCount" direction="INOUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="copyCount" direction="INOUT">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/logDebugMessage" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="moduleName" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="moduleNameType" type="STRING" maxLength="4096"/>
      </element>
      <element name="debug" direction="IN">
        <datatype type="STRING" maxLength="1"/>
      </element>
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository" type="CONTAINER">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/_debug" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="mode" direction="IN">
        <datatype type="STRING" minLength="1" maxLength="1"/>
      </element>
      <element name="folderName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="folderPath" direction="OUT">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* copyAll:
	This procedure is used to copy all of the files from one source location to target destination.
 
			In this example, the end point folder name in the sourcePath will be used as the starting point
			and concatenated onto the end point of the target folder.  Therefore, the result will be all
			folders under /Temp/vcs1/Utilities will be recursively copied to /Temp/vcs2 resulting in
			/Temp/vcs2/Utilities...

	Input:
		sourcePath - folder path to the source vcs folder.  
			Values: /Temp/vcs1/Utilities
		targetPath - folder path to the target vcs folder.
			Values: /Temp/vcs2
		mkdirCount - number of directories created.
		copyCount - number of files copied.
	Output:
		mkdirCount - number of directories created.
		copyCount - number of files copied.
	Exceptions:  none
	Author:      Mike Tinius
	Date:        8/6/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE copyAll(
	IN sourcePath		/shared/ASAssets/Utilities/TypeDefinitions.pathType,
	IN targetPath		/shared/ASAssets/Utilities/TypeDefinitions.pathType,
	INOUT mkdirCount	INTEGER,
	INOUT copyCount		INTEGER
)
BEGIN
	PATH /shared/ASAssets/Utilities/file/FileProcessingCJP;
    PATH /shared/ASAssets/Utilities/log;
    PATH /shared/ASAssets/Utilities/repository;

    DECLARE PROC_NAME       CONSTANT VARCHAR DEFAULT &apos;file/copyAll&apos;;

	DECLARE folderName		VARCHAR;
	DECLARE folderPath		/shared/ASAssets/Utilities/TypeDefinitions.pathType;
	DECLARE newTargetPath	/shared/ASAssets/Utilities/TypeDefinitions.pathType;
	DECLARE success			BOOLEAN;
	DECLARE rootName		VARCHAR;
	DECLARE rootPath		/shared/ASAssets/Utilities/TypeDefinitions.pathType;

	if (mkdirCount is null) then
		set mkdirCount = 0;
	end if;
	if (copyCount is null) then
		set copyCount = 0;
	end if;
	call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(sourcePath, &apos;E&apos;, rootName, folderPath);
	set rootPath = targetPath||&apos;/&apos;||rootName;

	call /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug, &apos;SOURCE: &apos;||sourcePath);
	call /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug, &apos;TARGET: &apos;||targetPath);
	call /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug, &apos;ROOT:   &apos;||rootName);
	call /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug, &apos;   MKDIR: &apos;||rootPath);
	call /shared/ASAssets/Utilities/file/FileProcessingCJP/makeDirs(rootPath, success);

	FOR r as select * from /shared/ASAssets/Utilities/file/FileProcessingCJP/getFileInfo(sourcePath,&apos;Y&apos;) DO
		call /shared/ASAssets/Utilities/repository/returnFolderNameAndFolderPath(r.filePath, &apos;E&apos;, folderName, folderPath);
		set newTargetPath = rootPath||&apos;/&apos;|| folderName;

		if (r.isDir = 1) then
			call /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug, &apos;   MKDIR: &apos;||newTargetPath);
			call /shared/ASAssets/Utilities/file/FileProcessingCJP/makeDirs(newTargetPath, success);
			set mkdirCount = mkdirCount + 1;
			-- Recursively copy and create directories driven by the source path.
			call /shared/ASAssets/Utilities/file/copyAll(r.filePath, rootPath, mkdirCount, copyCount);
		end if;
		if (r.isFile = 1) then
			call /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug, &apos;   COPY-SOURCE: &apos;||r.filePath);
			call /shared/ASAssets/Utilities/log/logDebugMessage(PROC_NAME, /shared/ASAssets/Utilities/repository/&quot;_debug&quot;.debug, &apos;        TARGET: &apos;||newTargetPath);
			call /shared/ASAssets/Utilities/file/FileProcessingCJP/copyFile(r.filePath,newTargetPath);
			set copyCount = copyCount + 1;
		end if;
	END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>