<?xml version="1.1" encoding="UTF-8"?>
<metadata name="getTimestampInterval" path="/shared/ASAssets/Utilities/time/getTimestampInterval" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0" isFunction="true">
  <annotation>getTimestampInterval:
	Add a value of &quot;hours&quot; to a given timestamp value to calculate time.
 
	Input:
		inInterval - number of hours.  
			Values: e.g. 25
		inTimestamp - any timestamp.  
			Values: e.g. 2010-07-10 00:00:00
	Output:
		endDatetime - resulting timestamp
			Values: e.g. 2010-07-11 01:00:00 (timestamp increased by 25 hours)
	Exceptions:  none
	Author:      Mike Tinius
	Date:        8/2/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="inInterval" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="inTimestamp" direction="IN" nullable="true">
      <datatype name="TIMESTAMP" type="DATETIME"/>
    </parameter>
    <parameter name="endDatetime" direction="OUT" nullable="true">
      <datatype name="TIMESTAMP" type="DATETIME"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">/* getTimestampInterval:
	Add a value of &quot;hours&quot; to a given timestamp value to calculate time.
 
	Input:
		inInterval - number of hours.  
			Values: e.g. 25
		inTimestamp - any timestamp.  
			Values: e.g. 2010-07-10 00:00:00
	Output:
		endDatetime - resulting timestamp
			Values: e.g. 2010-07-11 01:00:00 (timestamp increased by 25 hours)
	Exceptions:  none
	Author:      Mike Tinius
	Date:        8/2/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE getTimestampInterval(
	in inInterval	integer,   -- number of hours
	in inTimestamp	timestamp, 
	out endDatetime timestamp
)
BEGIN
	DECLARE resultCursor 	CURSOR (dt timestamp);
	DECLARE sql_stmt 	varchar(2048) DEFAULT
  	&apos;SELECT inTimestamp 
		+ INTERVAL &apos;&apos;&apos; || inInterval / 24 || &apos;&apos;&apos; DAY  
		+ INTERVAL &apos;&apos;&apos; || inInterval % 24 || &apos;&apos;&apos; HOUR 
  	FROM /services/databases/system/SYS_SESSIONS&apos;;

	OPEN resultCursor FOR sql_stmt;
	fetch resultCursor into endDatetime;
	close resultCursor;

--call print (&apos;myTimestamp=&apos;||myTimestamp);
--call print (&apos;days=&apos;||myInterval / 24);
--call print (&apos;hours=&apos;||myInterval % 24);
--call print (&apos;endDatetime=&apos;||endDatetime);
END</attribute>
  <attribute name="creationDate" type="LONG">0</attribute>
  <attribute name="creatorUserDomain" type="STRING"/>
  <attribute name="creatorUserName" type="STRING"/>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>