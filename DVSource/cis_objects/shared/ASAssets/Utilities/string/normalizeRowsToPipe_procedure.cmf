<?xml version="1.1" encoding="UTF-8"?>
<metadata name="normalizeRowsToPipe" path="/shared/ASAssets/Utilities/string/normalizeRowsToPipe" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>normalizeRowsToPipe:
	De-dupe an incoming cursor of strings.  
	For example, maybe there is a list of keywords and you only want the unique values.
	Output the keywords as a pipe cursor.  Can be used in conjunction with &apos;entityExtractToPipe&apos;
 
	Input:
		curs - contains a cursor of varchar keywords.
			Values: Any text value
	Output:
		pipeStr - return a de-duped set of values in a pipe cursor.
			Values: Any text value
	Exceptions:  none
	Author:      Mike Tinius
	Date:        8/2/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.</annotation>
  <parameters>
    <parameter name="curs" direction="IN" nullable="true">
      <datatype name="curs" type="TABLE" refId="1">
        <element name="str">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
    <parameter name="pipeStr" direction="OUT" nullable="true">
      <datatype name="pipeStr" type="TABLE" refId="1">
        <element name="str">
          <datatype name="VARCHAR" type="STRING" maxLength="255"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">/* normalizeRowsToPipe:
	De-dupe an incoming cursor of strings.  
	For example, maybe there is a list of keywords and you only want the unique values.
	Output the keywords as a pipe cursor.  Can be used in conjunction with &apos;entityExtractToPipe&apos;
 
	Input:
		curs - contains a cursor of varchar keywords.
			Values: Any text value
	Output:
		pipeStr - return a de-duped set of values in a pipe cursor.
			Values: Any text value
	Exceptions:  none
	Author:      Mike Tinius
	Date:        8/2/2010
	CSW Version: 5.1.0

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.
*/
PROCEDURE normalizeRowsToPipe(
	IN curs 	cursor (str varchar),
	OUT pipeStr	pipe (str varchar)
)
BEGIN
	DECLARE temp		VARCHAR;
	DECLARE i,j		INTEGER;
	DECLARE strVector	VECTOR (varchar);

	set strVector = VECTOR[&apos;&apos;];
	set i = 1;
	FOR s as curs DO
		set temp = s;
--call print(temp);
		set j = 1;
		innerLoop:
		WHILE (j &lt;= CARDINALITY(strVector)) DO
			IF (i &lt;&gt; j) THEN
				IF (temp = strVector[j]) THEN
					set temp = null;
				END IF; 
			END IF;
			set j = j + 1;
			if (j &gt; i) then 
				leave innerLoop;
			end if;
		END WHILE;
		if (temp is not null) then
			set j = CARDINALITY(strVector);
			set strVector[j] = temp;
			insert into pipeStr values(temp);
			set strVector = extend(strVector,1);
		end if;
		set i = i + 1;
	END FOR;
END</attribute>
  <attribute name="creationDate" type="LONG">1382624151125</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1392754921975</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>