<?xml version="1.1" encoding="UTF-8"?>
<metadata name="joinVectorByDelimiter" path="/shared/ASAssets/Utilities/string/joinVectorByDelimiter" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>joinVectorByDelimiter:

    This procedure joins the contents of a VECTOR of LONGVARCHARs into a single string 
    with values separated by a delimiter string.


    Input:
        inVector - Contains the list of strings to join together.  
            Values: Any VECTOR of VARCHARs. If NULL or empty, this procedure will return a NULL.

        delimiter - The string value to use to separate string values in the result LONGVARCHAR.  
            Values: Any text value. If NULL, this procedure will use an empty string.

        nullValue - The string to use when a VECTOR element is NULL (concatenating a NULL will
                    cause the result LONGVARCHAR to be NULL.)
            Values: Any text value. If NULL, this procedure will use &apos;[NULL]&apos; to represent NULL values.


    Output:
        result - Contains the joined string
            Values: Any text value


    Exceptions: none


    Modified Date:  Modified By:        CSW Version:    Reason:
    10/16/2014      Calvin Goodrich     6.2.6           Created new

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
</annotation>
  <parameters>
    <parameter name="inVector" direction="IN" nullable="true">
      <datatype name="inVector" type="ARRAY" maxLength="0">
        <itemDatatype>
          <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
        </itemDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="delimiter" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="nullValue" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="result" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <attribute name="Script" type="STRING">/* 
    joinVectorByDelimiter:

    This procedure joins the contents of a VECTOR of LONGVARCHARs into a single string 
    with values separated by a delimiter string.


    Input:
        inVector - Contains the list of strings to join together.  
            Values: Any VECTOR of VARCHARs. If NULL or empty, this procedure will return a NULL.

        delimiter - The string value to use to separate string values in the result LONGVARCHAR.  
            Values: Any text value. If NULL, this procedure will use an empty string.

        nullValue - The string to use when a VECTOR element is NULL (concatenating a NULL will
                    cause the result LONGVARCHAR to be NULL.)
            Values: Any text value. If NULL, this procedure will use &apos;[NULL]&apos; to represent NULL values.


    Output:
        result - Contains the joined string
            Values: Any text value


    Exceptions: none


    Modified Date:  Modified By:        CSW Version:    Reason:
    10/16/2014      Calvin Goodrich     6.2.6           Created new

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

*/
PROCEDURE joinVectorByDelimiter(
    IN inVector VECTOR(LONGVARCHAR),
    IN delimiter VARCHAR,
    IN nullValue VARCHAR,
    OUT result LONGVARCHAR
)
proc:
BEGIN
    DECLARE myDelimiter VARCHAR DEFAULT COALESCE(delimiter, &apos;&apos;);
    DECLARE myNullValue VARCHAR DEFAULT COALESCE(nullValue, &apos;[NULL]&apos;);
    DECLARE i INTEGER;

    -- sanity check the inVector input
    --
    IF (inVector IS NULL OR CARDINALITY(inVector) = 0) THEN
        SET result = NULL;
        LEAVE proc;
    END IF;

    SET result = &apos;&apos;;

    SET i = 1;
    WHILE (i &lt;= CARDINALITY(inVector)) DO
        IF (i &gt; 0) THEN
            SET result = result || myDelimiter;
        END IF;

        SET result = result || COALESCE(inVector[i], myNullValue);

        SET i = i + 1;
    END WHILE;
END</attribute>
  <attribute name="creationDate" type="LONG">1413474910241</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416603624220</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:0:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="NULL"/>
  <attribute name="transactionCached" type="STRING">true</attribute>
</metadata>