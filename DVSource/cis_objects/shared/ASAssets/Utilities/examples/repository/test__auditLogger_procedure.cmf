<?xml version="1.1" encoding="UTF-8"?>
<metadata name="test_auditLogger" path="/shared/ASAssets/Utilities/examples/repository/test_auditLogger" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>
    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

</annotation>
  <parameters>
    <parameter name="scenario" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/log/auditLogger" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="messageText" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="attributeVect" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="AttributeType" type="TREE" refId="2">
              <element name="attrName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="attrValue">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/auditLogger" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/log/auditLogger" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*

	-- Example of how to set the attribute vector to be passed into auditLogger()
	SET attributeVect = VECTOR[
		-- Name					Value							Description
		-- General options
		(&apos;debug&apos;, 				debug),							-- Y=debug or N=do not debug.  Debugging within the auditLogger procedure only.
		(&apos;loggingType&apos;, 		loggingType),					-- One or more of this list: [LOG, EMAIL, DB, PRINT]
																--		LOG - write to the Composite log.
																--		EMAIL - send an email.  (not yet implemented)
																--		DB - insert the message into the AUDI_LOG table. (created and introspected by developer during initialization)
																--		PRINT - print to the Studio command line.
		(&apos;notificationType&apos;, 	notificationType),				-- One and only one of [ERROR|INFO|DEBUG|AUDIT]
															--		ERROR - Output error message with severity level ERROR.
															--		AUDIT - Output audit message with severity level INFO.
															--		INFO - Output info message with severity level INFO.
															--		DEBUG - Output debug message with severity level INFO.
		-- Database logging options
		(&apos;auditTablePath&apos;, 		auditTablePath),				-- The CIS path to the AUDIT_LOG table. e.g. /shared/Cache_DB/Cache_Repo/CACHE1/AUDIT_LOG
		(&apos;sequenceNum&apos;, 		CAST(sequenceNum AS VARCHAR)),	-- A sequence number used to correlate multiple messages across different log messages.  
																-- This allows a common code base or framework to generate a sequence number and use it across multiple invocations.
		(&apos;organizationName&apos;, 	organizationName),				-- The name of the organization which can be used to filter messages. e.g. Mortgage, Operations, CustomerSatisfaction.
		(&apos;applicationName&apos;, 	applicationName),				-- The application name that is using Composite within the organization which can be used as an additional filter. e.g. HomeLoans, Bankruptcy, etc.
		(&apos;origUserName&apos;, 		origUserName),					-- The original user name from the application: format=username@domain.  e.g. user1@ldap or user2@composite
		(&apos;resourceName&apos;, 		resourceName),					-- The name of the resource being acted upon such as VIEW_NAME_INCR.
		(&apos;moduleName&apos;, 			moduleName),					-- The name of the module or procedure that is invoking the auditLoger which provides context for the code such as RefreshCache.
		(&apos;cachekey&apos;, 			CAST(cachekey AS VARCHAR)),		-- The cachekey being used to refresh the cache or 0 if not applicable.  This is especially helpful when invoked from the incremental refresh scripts.
		-- Send email options
		(&apos;emailFrom&apos;, 			emailFrom),						-- The address the message is from.  NULL causes use of the server&apos;s configured &quot;from&quot; address.  Only NULL is supported in this release.
		(&apos;emailReplyTo&apos;, 		emailReplyTo),					-- The address to place in the replyTo field of the message.
		(&apos;emailTo&apos;, 			emailTo),						-- A comma separated list of e-mail addresses.
		(&apos;emailCC&apos;, 			emailCC),						-- A comma separated list of e-mail addresses.
		(&apos;emailBCC&apos;, 			emailBCC),						-- A comma separated list of e-mail addresses.
		(&apos;emailSubject&apos;, 		emailSubject),					-- The message subject.
		(&apos;emailContentType&apos;, 	emailContentType)				-- This can be &apos;TEXT_PLAIN&apos; or &apos;TEXT_HTML&apos;.
	];

    © 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
*/
PROCEDURE test_auditLogger(
	IN  scenario					INTEGER,
	OUT success						BIT
)
BEGIN
    DECLARE messageText				LONGVARCHAR;
	DECLARE sequenceNum				BIGINT;  		-- sequence number used to correlate multiple messages across different inserts.
	DECLARE organizationName		VARCHAR; 		-- e.g. Mortgage, Operations
	DECLARE applicationName			VARCHAR; 		-- e.g. HomeLoans, Bankruptcy, etc.
	DECLARE origUserName			VARCHAR;		-- original user name from the application: format=username@domain.  e.g. user@ldap or user@composite
	DECLARE resourceName			VARCHAR(4096); 	-- e.g. Name of the resource being acted upon such as VIEW_NAME_INCR
	DECLARE moduleName 				VARCHAR; 		-- e.g. RefreshCache - the name of the procedure that calls this method
	DECLARE cachekey				BIGINT; 		-- e.g. the cachekey being used to refresh the cache or 0 if not applicable
	DECLARE loggingType 			VARCHAR; 		-- one or more of [LOG, EMAIL, DB, PRINT]
	DECLARE notificationType 		VARCHAR; 		-- one and only one of [ERROR, INFO, DEBUG, AUDIT]
	DECLARE auditTablePath			VARCHAR(4096); 	-- /shared/Cache_DB/Cache_Repo/COMP6_CACHE1/AUDIT_LOG
	DECLARE debug 					VARCHAR; 		-- Y or N
	DECLARE emailFrom				VARCHAR(4096);	-- The address the message is from.  NULL causes use of the server&apos;s configured &quot;from&quot; address.  Only NULL is supported in this release.
	DECLARE emailReplyTo			VARCHAR(4096);	-- The address to place in the replyTo field of the message.
	DECLARE emailTo					VARCHAR(4096);	-- A comma separated list of e-mail addresses.
	DECLARE emailCC					VARCHAR(4096);	-- A comma separated list of e-mail addresses.
	DECLARE emailBCC				VARCHAR(4096);	-- A comma separated list of e-mail addresses.
	DECLARE emailSubject			VARCHAR(4096);	-- The message subject.
	DECLARE emailContentType		VARCHAR;		-- This can be &apos;TEXT_PLAIN&apos; or &apos;TEXT_HTML&apos;.
	DECLARE attributeVect			VECTOR(/shared/ASAssets/Utilities/log/auditLogger.AttributeType);

	-- Test the general LOG
	IF (scenario = 1) THEN
		SET messageText = &apos;Scenario 1 - Test the happy path with LOG attributes set.&apos;;
		SET loggingType = &apos;LOG PRINT&apos;;
		SET notificationType = &apos;ERROR&apos;;
		SET debug = &apos;Y&apos;;
	END IF;

	-- Test DB logging
	IF (scenario = 2) THEN
		SET messageText = &apos;Scenario 1 - Test the happy path with DB attributes set.&apos;;
		SET debug = &apos;Y&apos;;
		SET loggingType = &apos;DB PRINT&apos;;
		SET notificationType = &apos;INFO&apos;;
		-- Set DB parameters
		SET sequenceNum = 1;
		SET organizationName = &apos;ORG1&apos;;
		SET applicationName = &apos;APP1&apos;;
		SET origUserName = &apos;user1@composite&apos;;
		SET resourceName = &apos;auditLogger&apos;;
		SET moduleName = &apos;test_auditLogger&apos;;
		SET cachekey = 0;
		SET auditTablePath = &apos;/users/composite/admin/Cache_RepoSS/CIS_CACHE/dbo/AUDIT_LOG&apos;;
	END IF;

	-- Test Email logging
	IF (scenario = 3) THEN
		SET messageText = &apos;Scenario 1 - Test the happy path with EMAIL attributes set.&apos;;
		SET debug = &apos;Y&apos;;
		SET loggingType = &apos;EMAIL PRINT&apos;;
		SET notificationType = &apos;INFO&apos;;
		-- Set EMAIL parameters
		SET emailReplyTo 		= &apos;cisadmin@CISmailServer.com&apos;;
		SET emailTo 			= &apos;cisadmin@CISmailServer.com&apos;;
		SET emailCC 			= &apos;cisadmin@CISmailServer.com&apos;;
		SET emailBCC 			= &apos;cisadmin@CISmailServer.com&apos;;
		SET emailSubject		= &apos;test_auditLogger&apos;;
		SET emailContentType 	= &apos;TEXT_PLAIN&apos;;
	END IF;

	BEGIN INDEPENDENT TRANSACTION
		-- Example of how to set the attribute vector to be passed into auditLogger()
		SET attributeVect = VECTOR[
					-- Name					Value							Description
					-- General logging attributes
					(&apos;debug&apos;, 				debug),							-- Y=debug or N=do not debug
					(&apos;loggingType&apos;, 		loggingType),					-- One or more of this list: [LOG, EMAIL, DB, PRINT]
																			--		LOG - write to the Composite log.
																			--		EMAIL - send an email.  (not yet implemented)
																			--		DB - insert the message into the AUDI_LOG table. (created and introspected by developer during initialization)
																			--		PRINT - print to the Studio command line.
					(&apos;notificationType&apos;, 	notificationType),				-- One and only one of [ERROR|INFO|DEBUG|AUDIT]
    																		--		ERROR - Output error message with severity level ERROR.
    																		--		AUDIT - Output audit message with severity level INFO.
    																		--		INFO - Output info message with severity level INFO.
    																		--		DEBUG - Output debug message with severity level INFO.
					-- DB Logging attributes
					(&apos;sequenceNum&apos;, 		CAST(sequenceNum AS VARCHAR)),	-- A sequence number used to correlate multiple messages across different log messages.  
																			-- This allows a common code base or framework to generate a sequence number and use it across multiple invocations.
					(&apos;organizationName&apos;, 	organizationName),				-- The name of the organization which can be used to filter messages. e.g. Mortgage, Operations, CustomerSatisfaction.
					(&apos;applicationName&apos;, 	applicationName),				-- The application name that is using Composite within the organization which can be used as an additional filter. e.g. HomeLoans, Bankruptcy, etc.
					(&apos;origUserName&apos;, 		origUserName),					-- The original user name from the application: format=username@domain.  e.g. user1@ldap or user2@composite
					(&apos;resourceName&apos;, 		resourceName),					-- The name of the resource being acted upon such as VIEW_NAME_INCR.
					(&apos;moduleName&apos;, 			moduleName),					-- The name of the module or procedure that is invoking the auditLoger which provides context for the code such as RefreshCache.
					(&apos;cachekey&apos;, 			CAST(cachekey AS VARCHAR)),		-- The cachekey being used to refresh the cache or 0 if not applicable.  This is especially helpful when invoked from the incremental refresh scripts.
					(&apos;auditTablePath&apos;, 		auditTablePath),				-- The CIS path to the AUDIT_LOG table. e.g. /shared/Cache_DB/Cache_Repo/CACHE1/AUDIT_LOG
					-- Send email options
					(&apos;emailFrom&apos;, 			emailFrom),						-- The address the message is from.  NULL causes use of the server&apos;s configured &quot;from&quot; address.  Only NULL is supported in this release.
					(&apos;emailReplyTo&apos;, 		emailReplyTo),					-- The address to place in the replyTo field of the message.
					(&apos;emailTo&apos;, 			emailTo),						-- A comma separated list of e-mail addresses.
					(&apos;emailCC&apos;, 			emailCC),						-- A comma separated list of e-mail addresses.
					(&apos;emailBCC&apos;, 			emailBCC),						-- A comma separated list of e-mail addresses.
					(&apos;emailSubject&apos;, 		emailSubject),					-- The message subject.
					(&apos;emailContentType&apos;, 	emailContentType)				-- This can be &apos;TEXT_PLAIN&apos; or &apos;TEXT_HTML&apos;.
				];
		CALL /shared/ASAssets/Utilities/log/auditLogger(messageText, attributeVect);
		SET success = 1;
	END;
END</attribute>
  <attribute name="creationDate" type="LONG">1413739805011</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1416604093717</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:1:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="NULL"/>
</metadata>