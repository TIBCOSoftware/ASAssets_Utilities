<?xml version="1.1" encoding="UTF-8"?>
<metadata name="test_updateTrigger" path="/shared/ASAssets/Utilities/examples/repository/test_updateTrigger" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>
    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.

</annotation>
  <parameters>
    <parameter name="enabled" direction="IN" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
    </parameter>
    <parameter name="conditionType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="conditionVersion" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="actionType" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
      <attribute name="Customized" type="STRING">datatype.changed</attribute>
    </parameter>
    <parameter name="success" direction="OUT" nullable="true">
      <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="createResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
    <parameter name="faultResponse" direction="OUT" nullable="true">
      <datatype name="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
        <schemaDatatype>
          <datatype name="XML" type="TREE" refId="1"></datatype>
        </schemaDatatype>
      </datatype>
      <attribute name="Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/TypeDefinitions" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createResource" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/createResource" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="resourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceSubType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="2"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="2"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/resourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="resourceType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceExists" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateTrigger" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateTrigger" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="fullResourcePath" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="enabled" direction="IN">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="conditionType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="actionType" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="triggerAttrVect" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="TriggerType" type="TREE" refId="2">
              <element name="trName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="trValue">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="attributeVect" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="AttributeType" type="TREE" refId="3">
              <element name="attrName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="attrType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="attrValue">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="success" direction="OUT">
        <datatype type="INTEGER" minValue="0" maxValue="1"/>
      </element>
      <element name="createResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <datatype name="XML" type="TREE" refId="4"></datatype>
          </schemaDatatype>
        </datatype>
      </element>
      <element name="faultResponse" direction="OUT">
        <datatype name="XML" referenceType="XML" type="XML" contentConstraint="SEQUENCE" schemaConstraint="ANY" componentType="TYPE" componentName="XML">
          <schemaDatatype>
            <reference refId="4"/>
          </schemaDatatype>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/updateTrigger" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/resourceExists" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/resourceExists" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="1"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*
	Scenario 1 - Test enabling trigger only.							enable=1 and all other paramters=NULL
	Scenario 2 - Test disabling trigger only.							enable=0 and all other paramters=NULL
	Scenario 3 - Test Timer (recurrence restriction on) with Procedure. enabled=1, conditionType=TIMER, conditionVersion=1, actionType=PROCEDURE
	Scenario 4 - Test Timer (recurrence restriction off) with Email. 	enabled=1, conditionType=TIMER, conditionVersion=2, actionType=EMAIL
	Scenario 5 - Test Timer (manual) with Reintrospect.  				enabled=1, conditionType=TIMER, conditionVersion=2, actionType=REINTROSPECT
	Scenario 6 - Test JMS with Statistics.  							enabled=1, conditionType=JMS, conditionVersion=null, actionType=STATISTICS
	Scenario 7 - Test System Event with Procedure.  					enabled=1, conditionType=SYSTEM_EVENT, conditionVersion=null, actionType=PROCEDURE
	Scenario 8 - Test User Defined with Reintrospect.  					enabled=1, conditionType=USER_DEFINED, conditionVersion=null, actionType=REINTROSPECT

    Â© 2010, 2014 Cisco and/or its affiliates. All rights reserved.

    This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
    Any dependent libraries supplied by third parties are provided under their own open source licenses as 
    described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
    part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
    csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
    csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
    optional version number) are provided as a convenience, but are covered under the licensing for the 
    Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
    through a valid license for that product.

    This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
    Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
*/
PROCEDURE test_updateTrigger(
	IN  enabled								BIT,		-- 1=enabled, 0=disabled
														-- When only performing the enable or disable for a trigger, leave *ALL* other input parameters null. 
														-- When conditionType and actionType are NULL then no other update actions will be taken except enable/disable.
	IN  conditionType						VARCHAR, 	-- NULL or one of [TIMER|JMS|SYSTEM_EVENT|USER_DEFINED] determines the trigger condition.
														-- When NULL, then only perform the enable or disable of the trigger and not other updates.
	IN  conditionVersion					INTEGER,
	-- Action Type
	IN actionType							VARCHAR,	-- NOT NULL and [PROCEDURE|STATISTICS|REINTROSPECT|EMAIL] - One of these determines what type of action to take.
														-- When NULL, then only perform the enable or disable of the trigger and not other updates.
														-- When conditionType is NOT NULL, there must be an actionType.
	OUT success								BIT,
	OUT createResponse 						XML,
	OUT faultResponse						XML
)
BEGIN
    DECLARE resourcePath 					/shared/ASAssets/Utilities/TypeDefinitions.pathType DEFAULT &apos;/shared/ASAssets/Utilities/examples/repository/target&apos;; 
	DECLARE resourceName					VARCHAR(255) DEFAULT &apos;testTRIGGER&apos;;
	DECLARE resourceType					VARCHAR(255) DEFAULT &apos;TRIGGER&apos;;
	DECLARE resourceSubType					VARCHAR(255) DEFAULT &apos;NONE&apos;;
	DECLARE fullResourcePath				/shared/ASAssets/Utilities/TypeDefinitions.pathType DEFAULT resourcePath||&apos;/&apos;||resourceName;
	DECLARE i,j								INTEGER;
	-- Name/Value pair list containing only the necessary &quot;Condition Type&quot; and &quot;Action Type&quot; attributes.
	DECLARE conditionAttrVect				VECTOR(/shared/ASAssets/Utilities/repository/updateTrigger.TriggerType);
	DECLARE actionAttrVect					VECTOR(/shared/ASAssets/Utilities/repository/updateTrigger.TriggerType);
	DECLARE triggerAttrVect					VECTOR(/shared/ASAssets/Utilities/repository/updateTrigger.TriggerType) DEFAULT VECTOR[(null)];
	DECLARE attributeVect					/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeVectorType;

	-- CONDITION TYPE:
	IF (conditionType = &apos;TIMER&apos;) THEN
	-- Set the timer and recurrence restriciton
	  IF (conditionVersion = 1) THEN
		SET conditionAttrVect = VECTOR[
		(&apos;timerStartTime&apos;, &apos;2014-10-18 00:00:00&apos;), 			-- The timestamp the trigger should start.    Format = YYYY-MM-DD HH24:MM:SS
		(&apos;timerPeriod&apos;, &apos;MINUTE&apos;), 							-- One of [MINUTE|HOUR|DAY|WEEK|MONTH|YEAR]
		(&apos;timerPeriodQty&apos;, &apos;5&apos;), 							-- Quantity of the period
		(&apos;timerRecurringDay&apos;, &apos;SUN, MON, TUE, WED, THU, FRI, SAT&apos;),		-- NULL or a list of one or more items: [SUN, MON, TUE, WED, THU, FRI, SAT].  May be space or comma delimited.
		(&apos;timerFromTimeInADay&apos;, &apos;10:00:00&apos;),				-- NULL or The time of day to start the trigger.  Format = HH24:MM:SS
		(&apos;timerEndTimeInADay&apos;, &apos;22:00:00&apos;),					-- NULL or The time of day to end the trigger.   Format = HH24:MM:SS
		(&apos;timerIsCluster&apos;, &apos;1&apos;),							-- NULL or 0=not once per cluster, 1=only once per cluster

		(&apos;maxEventsQueued&apos;, &apos;1&apos;),
		(&apos;annotation&apos;, &apos;test annotation&apos;)
		];
		SET attributeVect = VECTOR[
		(&apos;lastModifiedUserName&apos;,&apos;STRING&apos;,&apos;user1&apos;),
		(&apos;lastModifiedUserDomain&apos;,&apos;STRING&apos;,&apos;composite&apos;)
		];
	  END IF;
	-- Set the timer to periodic but don&apos;t set the recurrence restriction
	  IF (conditionVersion = 2) THEN
		SET conditionAttrVect = VECTOR[
		(&apos;timerStartTime&apos;, &apos;2014-10-18 00:00:00&apos;), 			-- The timestamp the trigger should start.    Format = YYYY-MM-DD HH24:MM:SS
		(&apos;timerPeriod&apos;, &apos;HOUR&apos;), 							-- One of [MINUTE|HOUR|DAY|WEEK|MONTH|YEAR]
		(&apos;timerPeriodQty&apos;, &apos;5&apos;), 							-- Quantity of the period
		(&apos;timerRecurringDay&apos;, &apos;&apos;),							-- NULL or a list of one or more items: [SUN, MON, TUE, WED, THU, FRI, SAT].  May be space or comma delimited.
		(&apos;timerFromTimeInADay&apos;, &apos;&apos;),						-- NULL or The time of day to start the trigger.  Format = HH24:MM:SS
		(&apos;timerEndTimeInADay&apos;, &apos;&apos;),							-- NULL or The time of day to end the trigger.   Format = HH24:MM:SS
		(&apos;timerIsCluster&apos;, &apos;0&apos;)								-- NULL or 0=not once per cluster, 1=only once per cluster
		];
	  END IF;
	-- Set the timer to manual when no timestamp is set
	  IF (conditionVersion = 3) THEN
		SET conditionAttrVect = VECTOR[
		--(&apos;timerStartTime&apos;, &apos;2014-10-18 00:00:00&apos;), 		-- The timestamp the trigger should start.    Format = YYYY-MM-DD HH24:MM:SS
		(&apos;timerPeriod&apos;, &apos;HOUR&apos;), 							-- One of [MINUTE|HOUR|DAY|WEEK|MONTH|YEAR]
		(&apos;timerPeriodQty&apos;, &apos;5&apos;), 							-- Quantity of the period
		--(&apos;timerRecurringDay&apos;, &apos;&apos;),						-- NULL or a list of one or more items: [SUN, MON, TUE, WED, THU, FRI, SAT].  May be space or comma delimited.
		--(&apos;timerFromTimeInADay&apos;, &apos;&apos;),						-- NULL or The time of day to start the trigger.  Format = HH24:MM:SS
		--(&apos;timerEndTimeInADay&apos;, &apos;&apos;),						-- NULL or The time of day to end the trigger.   Format = HH24:MM:SS
		(&apos;timerIsCluster&apos;, &apos;0&apos;)								-- NULL or 0=not once per cluster, 1=only once per cluster
		];
	  END IF;
	END IF;
	IF (conditionType = &apos;JMS&apos;) THEN
		SET conditionAttrVect = VECTOR[
		(&apos;jmsDestination&apos;, &apos;jmsDest&apos;),
		(&apos;jmsSelector&apos;, &apos;jmsSelector&apos;),
		(&apos;jmsConnection&apos;, &apos;jmsConnection&apos;)
		];
	END IF;
	IF (conditionType = &apos;SYSTEM_EVENT&apos;) THEN
		SET conditionAttrVect = VECTOR[
		(&apos;systemEventName&apos;, &apos;DataSourceUp&apos;)
		];
	END IF;
	IF (conditionType = &apos;USER_DEFINED&apos;) THEN
		SET conditionAttrVect = VECTOR[
		(&apos;userDefinedName&apos;, &apos;CustomEvent&apos;)
		];
	END IF;

	-- ACTION TYPE:
	IF (actionType = &apos;PROCEDURE&apos;) THEN
		SET actionAttrVect = VECTOR[
		(&apos;procedurePath&apos;, &apos;/shared/ASAssets/Utilities/examples/repository/target/proc1&apos;),
		(&apos;procedureParams&apos;, &apos;10&apos;),
		(&apos;procedureExhaustCursors&apos;, &apos;0&apos;)
		];
	END IF;
	IF (actionType = &apos;STATISTICS&apos;) THEN
		SET actionAttrVect = VECTOR[
		(&apos;statisticsDSPath&apos;, &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_inventory&apos;)
		];
	END IF;
	IF (actionType = &apos;REINTROSPECT&apos;) THEN
		SET actionAttrVect = VECTOR[
		(&apos;reintrospectDSPath&apos;, &apos;/shared/ASAssets/Utilities/examples/repository/source/ds_inventory&apos;),-- The path to the datasource to reintrospect
		(&apos;reintrospectEmailTo&apos;, &apos;to@gmail.com&apos;),			-- The TO to send email for reintrospection
		(&apos;reintrospectEmailCC&apos;, &apos;cc@gamil.com&apos;),			-- The CC to send email for reintrospection
		(&apos;reintrospectEmailBCC&apos;, &apos;bcc@gmail.com&apos;),			-- The BCC to send email for reintrospection
		(&apos;reintrospectEmailReplyTo&apos;, &apos;replyto@gmail.com&apos;),	-- The REPLYTO to send email for reintrospection
		(&apos;reintrospectEmailSubject&apos;, &apos;Test Re-introspect&apos;),	-- The subject line to send email for reintrospection
		(&apos;reintrospectEmailContent&apos;, &apos;Test content&apos;),		-- The content to send email for reintrospection
		(&apos;reintrospectEmailSkipNoResults&apos;, &apos;1&apos;),			-- The skip if no results flag to send email for reintrospection
		(&apos;reintrospectEmailNoCommit&apos;, &apos;1&apos;)					-- The no commit flag to send email for reintrospection
		];
	END IF;
	IF (actionType = &apos;EMAIL&apos;) THEN
		SET actionAttrVect = VECTOR[
		(&apos;execEmailResourcePath&apos;, &apos;/shared/ASAssets/Utilities/examples/repository/target/proc1&apos;),-- Path of resources (Procedure or View) to execute
		(&apos;execEmailResourceParam&apos;, &apos;5&apos;),					-- Procedure parameters in a comma separated list.  Single quotes around string values.
		(&apos;execEmailTo&apos;, &apos;to@gmail.com&apos;),					-- The TO to send email for execute procedure
		(&apos;execEmailCC&apos;, &apos;cc@gamil.com&apos;),					-- The CC to send email for execute procedure
		(&apos;execEmailBCC&apos;, &apos;bcc@gmail.com&apos;),					-- The BCC to send email for execute procedure
		(&apos;execEmailReplyTo&apos;, &apos;replyto@gmail.com&apos;),			-- The REPLYTO to send email for execute procedure
		(&apos;execEmailSubject&apos;, &apos;Test Email&apos;),					-- The subject line to send email for execute procedure
		(&apos;execEmailContent&apos;, &apos;Test content&apos;),				-- The Content to send email for execute procedure
		(&apos;execEmailSkipNoResults&apos;, &apos;1&apos;),					-- The skip if no results flag to send email for execute procedure
		(&apos;execEmailIncludeSummary&apos;, &apos;1&apos;)					-- The include summary flag to send email for execute procedure
		];
	END IF;

	BEGIN INDEPENDENT TRANSACTION
		IF (resourceExists(fullResourcePath, resourceType) = 0) THEN
			CALL /shared/ASAssets/Utilities/repository/createResource(resourcePath, resourceName, resourceType, resourceSubType, success, createResponse, faultResponse);
		END IF;
	END;

	SET i = 1;
	WHILE (i &lt;= CARDINALITY(conditionAttrVect)) DO
		SET triggerAttrVect[i] = conditionAttrVect[i];
		SET triggerAttrVect = EXTEND(triggerAttrVect, 1);
		SET i = i + 1;
	END WHILE;
	SET j = 1;
	WHILE (j &lt;= CARDINALITY(actionAttrVect)) DO
		SET triggerAttrVect[i] = actionAttrVect[j];
		SET triggerAttrVect = EXTEND(triggerAttrVect, 1);
		SET j = j + 1;
		SET i = i + 1;
	END WHILE;
	SET triggerAttrVect = TRUNCATE(triggerAttrVect, 1);

	BEGIN INDEPENDENT TRANSACTION
		CALL /shared/ASAssets/Utilities/repository/updateTrigger(
				fullResourcePath,
				enabled,
				conditionType,
				actionType,
				triggerAttrVect,
				attributeVect,					
				success,
				createResponse,
				faultResponse
			);

	END;


END</attribute>
  <attribute name="creationDate" type="LONG">1413739805011</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1446756505551</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="p:1:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:2:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:3:Customized" type="STRING">datatype.changed</attribute>
  <attribute name="p:4:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:5:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="p:6:Customized" type="STRING">datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed;datatype.changed</attribute>
  <attribute name="references" type="NULL"/>
</metadata>