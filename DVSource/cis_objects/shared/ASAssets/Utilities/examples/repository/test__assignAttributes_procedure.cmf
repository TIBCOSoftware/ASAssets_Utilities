<?xml version="1.1" encoding="UTF-8"?>
<metadata name="test_assignAttributes" path="/shared/ASAssets/Utilities/examples/repository/test_assignAttributes" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="testOption" direction="IN" nullable="true">
      <datatype name="INTEGER" type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
    </parameter>
    <parameter name="attributeInput" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ EXECUTE"/>
    <privilege group="all" domain="dynamic" privileges="READ EXECUTE"/>
  </security>
  <dependency target="/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/rebind/assignAttributes" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="attributeVector" direction="IN">
        <datatype type="ARRAY" maxLength="0">
          <itemDatatype>
            <datatype name="AttributeCompleteType" type="TREE" refId="2">
              <element name="attrName">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="attrType">
                <datatype name="VARCHAR" type="STRING" maxLength="255"/>
              </element>
              <element name="attrValue">
                <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
              </element>
              <element name="valueList">
                <datatype name="valueList" type="ARRAY" maxLength="0">
                  <itemDatatype>
                    <datatype name="itemType" type="TREE" refId="3">
                      <element name="type">
                        <datatype name="VARCHAR" type="STRING" maxLength="255"/>
                      </element>
                      <element name="value">
                        <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                      </element>
                    </datatype>
                  </itemDatatype>
                </datatype>
              </element>
              <element name="valueMap">
                <datatype name="valueMap" type="ARRAY" maxLength="0">
                  <itemDatatype>
                    <datatype name="entryType" type="TREE" refId="4">
                      <element name="key">
                        <datatype name="key" type="ARRAY" maxLength="0">
                          <itemDatatype>
                            <reference refId="3"/>
                          </itemDatatype>
                        </datatype>
                      </element>
                      <element name="value">
                        <datatype name="value" type="ARRAY" maxLength="0">
                          <itemDatatype>
                            <reference refId="3"/>
                          </itemDatatype>
                        </datatype>
                      </element>
                    </datatype>
                  </itemDatatype>
                </datatype>
              </element>
              <element name="valueArray">
                <datatype name="valueArray" type="ARRAY" maxLength="0">
                  <itemDatatype>
                    <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
                  </itemDatatype>
                </datatype>
              </element>
              <element name="unset">
                <datatype name="BIT" type="INTEGER" minValue="0" maxValue="1"/>
              </element>
            </datatype>
          </itemDatatype>
        </datatype>
      </element>
      <element name="attributeInput" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* test_assignAttributes:
	Test assignAttributes.

	Modified Date:	Updated By:			CSW Version:	Reason:
	04/27/2013		Mike Tinius			5.2.0			created new for testing

	CSW Version: 5.2.0
    Copyright (c) 2010
    Composite Software, Inc.
    All Rights Reserved
*/
PROCEDURE test_assignAttributes(
	IN testOption			INTEGER,
	OUT attributeInput		LONGVARCHAR
)
BEGIN
	DECLARE attributeVector			/shared/ASAssets/Utilities/repository/definitions/RepositoryDefinitions.AttributeCompleteVectorType;
/*
	DECLARE PUBLIC TYPE AttributeCompleteType ROW (
		attrName			VARCHAR(255),			-- mandatory
		attrType			VARCHAR(255),			-- mandatory
		attrValue			LONGVARCHAR,			-- optional (1 of attrValue, valueList, valueMap or valueArray must be supplied)
		valueList			VECTOR(itemType),		-- optional
		valueMap			VECTOR(entryType),		-- optional
		valueArray			VECTOR(LONGVARCHAR),	-- optional
		unset				BIT						-- optional
	);
	DECLARE PUBLIC TYPE itemType ROW (
		&quot;type&quot;				VARCHAR(255),
		&quot;value&quot;				LONGVARCHAR
	);
	DECLARE PUBLIC TYPE entryType ROW (
		&quot;key&quot;				VECTOR(itemType),	-- this vector always only contains 1 key
		&quot;value&quot;				VECTOR(itemType)	-- this vector always only contains 1 value
	);
*/
	-- Test value
	if (testOption = 1) then
		set attributeVector = VECTOR[(
			&apos;attr1&apos;,
			&apos;VARCHAR&apos;,
			&apos;value1&apos;,
			null,
			null,
			null,
			0
		)];
	end if;
	-- Test valueList
	if (testOption = 2) then
		set attributeVector = VECTOR[(
			&apos;attr1&apos;,
			&apos;VARCHAR&apos;,
			null,
			VECTOR[(&apos;valueList:type1&apos;,&apos;valueList:value1&apos;)],
			null,
			null,
			0
		)];
	end if;

	-- Test valueMap
	if (testOption = 3) then
		set attributeVector = VECTOR[(
			&apos;attr1&apos;,
			&apos;VARCHAR&apos;,
			null,
			null,
			VECTOR[(
				VECTOR[(&apos;valueMap::key::type1&apos;,&apos;valueMap::key::value1&apos;)], 		--   key: type, value
				VECTOR[(&apos;valueMap::value::type1&apos;,&apos;valueMap::value::value1&apos;)]	-- value: type, value
			)],
			null,
			0
		)];
	end if;

	-- Test valueArray
	if (testOption = 4) then
		set attributeVector = VECTOR[(
			&apos;attr1&apos;,
			&apos;VARCHAR&apos;,
			null,
			null,
			null,
			VECTOR[(&apos;valueArray:string1&apos;),(&apos;valueArray:string2&apos;),(&apos;valueArray:string3&apos;)],
			0
		)];
	end if;

	-- Test multiple value settings:  the first one is chosen
	if (testOption = 5) then
		set attributeVector = VECTOR[(
			&apos;attr1&apos;,
			&apos;VARCHAR&apos;,
			null,
			VECTOR[(&apos;valueList:type1&apos;,&apos;valueList:value1&apos;)],
			null,
			VECTOR[(&apos;valueArray:string1&apos;),(&apos;valueArray:string2&apos;),(&apos;valueArray:string3&apos;)],
			0
		)];
	end if;

	call /shared/ASAssets/Utilities/repository/rebind/assignAttributes(attributeVector, attributeInput);

END</attribute>
  <attribute name="creationDate" type="LONG">1382029188068</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1397495870437</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>